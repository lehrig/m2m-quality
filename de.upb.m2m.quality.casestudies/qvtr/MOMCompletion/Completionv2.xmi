<?xml version="1.0" encoding="ASCII"?>
<semanticsQvt.model.qvtrelation:RelationalTransformation xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:semantics.model.expressions="urn:semantics.model.expressions.ecore" xmlns:semanticsQvt.model.qvtbase="urn:semanticsQvt.model.qvtbase.ecore" xmlns:semanticsQvt.model.qvtrelation="urn:semanticsQvt.model.qvtrelation.ecore" xmlns:semanticsQvt.model.qvttemplate="urn:semanticsQvt.model.qvttemplate.ecore" name="PCM_Completion">
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="stringEndsWith">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="string" variableExps="//@ownedOperation.0/@queryExpression/@variable/@initExpression/@source/@source/@source //@ownedOperation.0/@queryExpression/@in/@arguments.0/@source/@arguments.1/@source //@ownedOperation.0/@queryExpression/@in/@arguments.0/@source/@source"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="sub" variableExps="//@ownedOperation.0/@queryExpression/@variable/@initExpression/@source/@arguments.0/@source //@ownedOperation.0/@queryExpression/@in/@arguments.0/@arguments.0"/>
    <queryExpression xsi:type="semantics.model.expressions:LetExp">
      <in xsi:type="semantics.model.expressions:OperationCallExp" name="and">
        <source xsi:type="semantics.model.expressions:OperationCallExp">
          <source xsi:type="semantics.model.expressions:VariableExp"/>
          <arguments xsi:type="semantics.model.expressions:IntegerLiteralExp"/>
        </source>
        <arguments xsi:type="semantics.model.expressions:OperationCallExp">
          <source xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.0/@ownedParameter.0"/>
            <arguments xsi:type="semantics.model.expressions:VariableExp"/>
            <arguments xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.0/@ownedParameter.0"/>
            </arguments>
          </source>
          <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.0/@ownedParameter.1"/>
        </arguments>
      </in>
      <variable name="start">
        <initExpression xsi:type="semantics.model.expressions:OperationCallExp">
          <source xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.0/@ownedParameter.0"/>
            </source>
            <arguments xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.0/@ownedParameter.1"/>
            </arguments>
          </source>
          <arguments xsi:type="semantics.model.expressions:IntegerLiteralExp" integerSymbol="1"/>
        </initExpression>
      </variable>
    </queryExpression>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="isAnnotated">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="assemblyConnector"/>
    <queryExpression xsi:type="semantics.model.expressions:IteratorExp"/>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="getDataTypeString">
    <queryExpression xsi:type="semantics.model.expressions:IteratorExp"/>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="findInterfaceFromAssemblyConnector">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="assemblyConnector" variableExps="//@ownedOperation.3/@queryExpression/@source/@source"/>
    <queryExpression xsi:type="semantics.model.expressions:PropertyCallExp">
      <source xsi:type="semantics.model.expressions:PropertyCallExp">
        <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.3/@ownedParameter.0"/>
      </source>
    </queryExpression>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="getMiddlewareRepository">
    <queryExpression xsi:type="semantics.model.expressions:IteratorExp"/>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="getMiddlewareComponent">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="name" variableExps="//@ownedOperation.5/@queryExpression/@condition/@source //@ownedOperation.5/@queryExpression/@elseExpression/@condition/@source"/>
    <queryExpression xsi:type="semantics.model.expressions:IfExp">
      <elseExpression xsi:type="semantics.model.expressions:IfExp">
        <elseExpression xsi:type="semantics.model.expressions:IfExp"/>
        <thenExpression xsi:type="semantics.model.expressions:IteratorExp"/>
        <condition xsi:type="semantics.model.expressions:OperationCallExp">
          <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.5/@ownedParameter.0"/>
          <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="messagingSystem"/>
        </condition>
      </elseExpression>
      <thenExpression xsi:type="semantics.model.expressions:IteratorExp"/>
      <condition xsi:type="semantics.model.expressions:OperationCallExp">
        <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.5/@ownedParameter.0"/>
        <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="sender"/>
      </condition>
    </queryExpression>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="getMiddlewareInterface">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="name" variableExps="//@ownedOperation.6/@queryExpression/@condition/@source //@ownedOperation.6/@queryExpression/@elseExpression/@condition/@source //@ownedOperation.6/@queryExpression/@elseExpression/@elseExpression/@condition/@source"/>
    <queryExpression xsi:type="semantics.model.expressions:IfExp">
      <elseExpression xsi:type="semantics.model.expressions:IfExp">
        <elseExpression xsi:type="semantics.model.expressions:IfExp">
          <elseExpression xsi:type="semantics.model.expressions:IfExp"/>
          <thenExpression xsi:type="semantics.model.expressions:IteratorExp"/>
          <condition xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.6/@ownedParameter.0"/>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="imom"/>
          </condition>
        </elseExpression>
        <thenExpression xsi:type="semantics.model.expressions:IteratorExp"/>
        <condition xsi:type="semantics.model.expressions:OperationCallExp">
          <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.6/@ownedParameter.0"/>
          <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="senderInterface"/>
        </condition>
      </elseExpression>
      <thenExpression xsi:type="semantics.model.expressions:IteratorExp"/>
      <condition xsi:type="semantics.model.expressions:OperationCallExp">
        <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.6/@ownedParameter.0"/>
        <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="imarshalling"/>
      </condition>
    </queryExpression>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="getMiddlewareSignature">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="interface" variableExps="//@ownedOperation.7/@queryExpression/@source/@source"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="annotation" variableExps="//@ownedOperation.7/@queryExpression/@body/@arguments.1/@arguments.0/@source //@ownedOperation.7/@queryExpression/@body/@arguments.1/@source/@arguments.0/@source //@ownedOperation.7/@queryExpression/@body/@arguments.1/@source/@source/@source"/>
    <queryExpression xsi:type="semantics.model.expressions:IteratorExp" name="any">
      <source xsi:type="semantics.model.expressions:PropertyCallExp">
        <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.7/@ownedParameter.0"/>
      </source>
      <body xsi:type="semantics.model.expressions:OperationCallExp" name="stringEndsWith" referredOperation="//@ownedOperation.0">
        <arguments xsi:type="semantics.model.expressions:PropertyCallExp">
          <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.7/@queryExpression/@iterators.0"/>
        </arguments>
        <arguments xsi:type="semantics.model.expressions:OperationCallExp">
          <source xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:PropertyCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.7/@ownedParameter.1"/>
            </source>
            <arguments xsi:type="semantics.model.expressions:PropertyCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.7/@ownedParameter.1"/>
            </arguments>
          </source>
          <arguments xsi:type="semantics.model.expressions:PropertyCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.7/@ownedParameter.1"/>
          </arguments>
        </arguments>
      </body>
      <iterators name="sig" variableExps="//@ownedOperation.7/@queryExpression/@body/@arguments.0/@source"/>
    </queryExpression>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="getMiddlewareProvidedRoles">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="name" variableExps="//@ownedOperation.8/@queryExpression/@condition/@source //@ownedOperation.8/@queryExpression/@elseExpression/@condition/@source //@ownedOperation.8/@queryExpression/@elseExpression/@elseExpression/@condition/@source //@ownedOperation.8/@queryExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source"/>
    <queryExpression xsi:type="semantics.model.expressions:IfExp">
      <elseExpression xsi:type="semantics.model.expressions:IfExp">
        <elseExpression xsi:type="semantics.model.expressions:IfExp">
          <elseExpression xsi:type="semantics.model.expressions:IfExp">
            <elseExpression xsi:type="semantics.model.expressions:IfExp"/>
            <thenExpression xsi:type="semantics.model.expressions:IteratorExp"/>
            <condition xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.8/@ownedParameter.0"/>
              <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="receiverIReceiver"/>
            </condition>
          </elseExpression>
          <thenExpression xsi:type="semantics.model.expressions:IteratorExp"/>
          <condition xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.8/@ownedParameter.0"/>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="messagingSystemIMom"/>
          </condition>
        </elseExpression>
        <thenExpression xsi:type="semantics.model.expressions:IteratorExp"/>
        <condition xsi:type="semantics.model.expressions:OperationCallExp">
          <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.8/@ownedParameter.0"/>
          <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="senderISender"/>
        </condition>
      </elseExpression>
      <thenExpression xsi:type="semantics.model.expressions:IteratorExp"/>
      <condition xsi:type="semantics.model.expressions:OperationCallExp">
        <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.8/@ownedParameter.0"/>
        <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="senderIMarshalling"/>
      </condition>
    </queryExpression>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="getMiddlewareAssemblyContext">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="component" variableExps="//@ownedOperation.9/@queryExpression/@condition/@source //@ownedOperation.9/@queryExpression/@elseExpression/@condition/@source"/>
    <queryExpression xsi:type="semantics.model.expressions:IfExp">
      <elseExpression xsi:type="semantics.model.expressions:IfExp">
        <elseExpression xsi:type="semantics.model.expressions:IfExp"/>
        <thenExpression xsi:type="semantics.model.expressions:IteratorExp"/>
        <condition xsi:type="semantics.model.expressions:OperationCallExp">
          <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.9/@ownedParameter.0"/>
          <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="messagingSystem"/>
        </condition>
      </elseExpression>
      <thenExpression xsi:type="semantics.model.expressions:IteratorExp"/>
      <condition xsi:type="semantics.model.expressions:OperationCallExp">
        <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.9/@ownedParameter.0"/>
        <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="sender"/>
      </condition>
    </queryExpression>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="getMiddlewareResourceContainer">
    <queryExpression xsi:type="semantics.model.expressions:IteratorExp"/>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="getSenderResourceContainer">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="annotatedAssemblyConnector"/>
    <queryExpression xsi:type="semantics.model.expressions:IteratorExp"/>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="getReceiverResourceContainer">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="annotatedAssemblyConnector"/>
    <queryExpression xsi:type="semantics.model.expressions:IteratorExp"/>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="p_in">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="sig"/>
    <queryExpression xsi:type="semantics.model.expressions:IteratorExp"/>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="p_out">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="sig" variableExps="//@ownedOperation.14/@queryExpression/@source/@source"/>
    <queryExpression xsi:type="semantics.model.expressions:IteratorExp" name="select">
      <source xsi:type="semantics.model.expressions:PropertyCallExp">
        <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.14/@ownedParameter.0"/>
      </source>
      <body xsi:type="semantics.model.expressions:OperationCallExp"/>
      <iterators name="p"/>
    </queryExpression>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="counter">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="t"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="t2"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="prefix"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="stringcheck"/>
    <queryExpression xsi:type="semantics.model.expressions:IfExp"/>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="counterPrimitive">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="t1" variableExps="//@ownedOperation.16/@queryExpression/@condition/@source"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="t2" variableExps="//@ownedOperation.16/@queryExpression/@condition/@arguments.0"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="prefix"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="stringcheck"/>
    <queryExpression xsi:type="semantics.model.expressions:IfExp">
      <elseExpression xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="0"/>
      <thenExpression xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="1"/>
      <condition xsi:type="semantics.model.expressions:OperationCallExp">
        <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.16/@ownedParameter.0"/>
        <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.16/@ownedParameter.1"/>
      </condition>
    </queryExpression>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="counterCollection">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="t1" variableExps="//@ownedOperation.17/@queryExpression/@condition/@source //@ownedOperation.17/@queryExpression/@thenExpression/@source/@arguments.0/@arguments.0 //@ownedOperation.17/@queryExpression/@elseExpression/@source/@arguments.0/@arguments.0"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="t2" variableExps="//@ownedOperation.17/@queryExpression/@thenExpression/@source/@arguments.0/@arguments.1/@source //@ownedOperation.17/@queryExpression/@elseExpression/@source/@arguments.0/@arguments.1/@source"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="prefix" variableExps="//@ownedOperation.17/@queryExpression/@thenExpression/@source/@arguments.0/@arguments.2/@source //@ownedOperation.17/@queryExpression/@thenExpression/@source/@source/@source/@arguments.0 //@ownedOperation.17/@queryExpression/@thenExpression/@source/@source/@source/@source/@source/@arguments.0 //@ownedOperation.17/@queryExpression/@elseExpression/@source/@arguments.0/@arguments.2/@source //@ownedOperation.17/@queryExpression/@elseExpression/@source/@source/@source/@arguments.0"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="stringcheck" variableExps="//@ownedOperation.17/@queryExpression/@condition/@arguments.0 //@ownedOperation.17/@queryExpression/@thenExpression/@source/@arguments.0/@arguments.3 //@ownedOperation.17/@queryExpression/@elseExpression/@source/@arguments.0/@arguments.3"/>
    <queryExpression xsi:type="semantics.model.expressions:IfExp">
      <elseExpression xsi:type="semantics.model.expressions:OperationCallExp">
        <source xsi:type="semantics.model.expressions:OperationCallExp">
          <source xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="("/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.17/@ownedParameter.2"/>
            </source>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol=".NUMBER_OF_ELEMENTS * "/>
          </source>
          <arguments xsi:type="semantics.model.expressions:OperationCallExp" name="counter" referredOperation="//@ownedOperation.15">
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.17/@ownedParameter.0"/>
            <arguments xsi:type="semantics.model.expressions:PropertyCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.17/@ownedParameter.1"/>
            </arguments>
            <arguments xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.17/@ownedParameter.2"/>
              <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol=".INNER"/>
            </arguments>
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.17/@ownedParameter.3"/>
          </arguments>
        </source>
        <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol=")"/>
      </elseExpression>
      <thenExpression xsi:type="semantics.model.expressions:OperationCallExp">
        <source xsi:type="semantics.model.expressions:OperationCallExp">
          <source xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:OperationCallExp">
                <source xsi:type="semantics.model.expressions:OperationCallExp">
                  <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="("/>
                  <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.17/@ownedParameter.2"/>
                </source>
                <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol=".NUMBER_OF_ELEMENTS * "/>
              </source>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.17/@ownedParameter.2"/>
            </source>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol=".INNER.BYTESIZE * "/>
          </source>
          <arguments xsi:type="semantics.model.expressions:OperationCallExp" name="counter" referredOperation="//@ownedOperation.15">
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.17/@ownedParameter.0"/>
            <arguments xsi:type="semantics.model.expressions:PropertyCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.17/@ownedParameter.1"/>
            </arguments>
            <arguments xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.17/@ownedParameter.2"/>
              <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol=".INNER"/>
            </arguments>
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.17/@ownedParameter.3"/>
          </arguments>
        </source>
        <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol=")"/>
      </thenExpression>
      <condition xsi:type="semantics.model.expressions:OperationCallExp">
        <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.17/@ownedParameter.0"/>
        <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.17/@ownedParameter.3"/>
      </condition>
    </queryExpression>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="counterComposition">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="t" variableExps="//@ownedOperation.18/@queryExpression/@body/@arguments.0/@arguments.0"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="t2" variableExps="//@ownedOperation.18/@queryExpression/@source/@source"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="prefix" variableExps="//@ownedOperation.18/@queryExpression/@body/@arguments.0/@arguments.2/@source/@source"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="stringcheck" variableExps="//@ownedOperation.18/@queryExpression/@body/@arguments.0/@arguments.3"/>
    <queryExpression xsi:type="semantics.model.expressions:IterateExp">
      <source xsi:type="semantics.model.expressions:PropertyCallExp">
        <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.18/@ownedParameter.1"/>
      </source>
      <body xsi:type="semantics.model.expressions:OperationCallExp">
        <source xsi:type="semantics.model.expressions:OperationCallExp">
          <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.18/@queryExpression/@result"/>
          <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="+"/>
        </source>
        <arguments xsi:type="semantics.model.expressions:OperationCallExp" name="counter" referredOperation="//@ownedOperation.15">
          <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.18/@ownedParameter.0"/>
          <arguments xsi:type="semantics.model.expressions:PropertyCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.18/@queryExpression/@iterators.0"/>
          </arguments>
          <arguments xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.18/@ownedParameter.2"/>
              <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="."/>
            </source>
            <arguments xsi:type="semantics.model.expressions:PropertyCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.18/@queryExpression/@iterators.0"/>
            </arguments>
          </arguments>
          <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.18/@ownedParameter.3"/>
        </arguments>
      </body>
      <iterators name="innerDT" variableExps="//@ownedOperation.18/@queryExpression/@body/@arguments.0/@arguments.1/@source //@ownedOperation.18/@queryExpression/@body/@arguments.0/@arguments.2/@arguments.0/@source"/>
      <result name="result" variableExps="//@ownedOperation.18/@queryExpression/@body/@source/@source">
        <initExpression xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="0"/>
      </result>
    </queryExpression>
  </ownedOperation>
  <ownedOperation xsi:type="semanticsQvt.model.qvtbase:Function" name="number">
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="sig" variableExps="//@ownedOperation.19/@queryExpression/@thenExpression/@source/@arguments.0 //@ownedOperation.19/@queryExpression/@elseExpression/@arguments.0/@condition/@source/@source //@ownedOperation.19/@queryExpression/@elseExpression/@arguments.0/@thenExpression/@arguments.1/@source //@ownedOperation.19/@queryExpression/@elseExpression/@arguments.0/@thenExpression/@source //@ownedOperation.19/@queryExpression/@elseExpression/@source/@source/@arguments.0"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="direction"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="t" variableExps="//@ownedOperation.19/@queryExpression/@thenExpression/@body/@arguments.0/@arguments.0 //@ownedOperation.19/@queryExpression/@elseExpression/@arguments.0/@thenExpression/@arguments.0 //@ownedOperation.19/@queryExpression/@elseExpression/@source/@body/@arguments.0/@arguments.0"/>
    <ownedParameter xsi:type="semanticsQvt.model.qvtbase:FunctionParameter" name="stringcheck" variableExps="//@ownedOperation.19/@queryExpression/@thenExpression/@body/@arguments.0/@arguments.3 //@ownedOperation.19/@queryExpression/@elseExpression/@arguments.0/@thenExpression/@arguments.3 //@ownedOperation.19/@queryExpression/@elseExpression/@source/@body/@arguments.0/@arguments.3"/>
    <queryExpression xsi:type="semantics.model.expressions:IfExp">
      <elseExpression xsi:type="semantics.model.expressions:OperationCallExp">
        <source xsi:type="semantics.model.expressions:IterateExp">
          <source xsi:type="semantics.model.expressions:OperationCallExp" name="p_out" referredOperation="//@ownedOperation.14">
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@ownedParameter.0"/>
          </source>
          <body xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@queryExpression/@elseExpression/@source/@result"/>
              <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="+"/>
            </source>
            <arguments xsi:type="semantics.model.expressions:OperationCallExp" name="counter" referredOperation="//@ownedOperation.15">
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@ownedParameter.2"/>
              <arguments xsi:type="semantics.model.expressions:PropertyCallExp">
                <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@queryExpression/@elseExpression/@source/@iterators.0"/>
              </arguments>
              <arguments xsi:type="semantics.model.expressions:PropertyCallExp">
                <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@queryExpression/@elseExpression/@source/@iterators.0"/>
              </arguments>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@ownedParameter.3"/>
            </arguments>
          </body>
          <iterators name="p" variableExps="//@ownedOperation.19/@queryExpression/@elseExpression/@source/@body/@arguments.0/@arguments.1/@source //@ownedOperation.19/@queryExpression/@elseExpression/@source/@body/@arguments.0/@arguments.2/@source"/>
          <result name="result" variableExps="//@ownedOperation.19/@queryExpression/@elseExpression/@source/@body/@source/@source">
            <initExpression xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="0"/>
          </result>
        </source>
        <arguments xsi:type="semantics.model.expressions:IfExp">
          <elseExpression xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol=""/>
          <thenExpression xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@ownedParameter.0"/>
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@ownedParameter.2"/>
            <arguments xsi:type="semantics.model.expressions:PropertyCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@ownedParameter.0"/>
            </arguments>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="RETURN"/>
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@ownedParameter.3"/>
          </thenExpression>
          <condition xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:PropertyCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@ownedParameter.0"/>
            </source>
          </condition>
        </arguments>
      </elseExpression>
      <thenExpression xsi:type="semantics.model.expressions:IterateExp">
        <source xsi:type="semantics.model.expressions:OperationCallExp" name="p_in" referredOperation="//@ownedOperation.13">
          <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@ownedParameter.0"/>
        </source>
        <body xsi:type="semantics.model.expressions:OperationCallExp">
          <source xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@queryExpression/@thenExpression/@result"/>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="+"/>
          </source>
          <arguments xsi:type="semantics.model.expressions:OperationCallExp" name="counter" referredOperation="//@ownedOperation.15">
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@ownedParameter.2"/>
            <arguments xsi:type="semantics.model.expressions:PropertyCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@queryExpression/@thenExpression/@iterators.0"/>
            </arguments>
            <arguments xsi:type="semantics.model.expressions:PropertyCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@queryExpression/@thenExpression/@iterators.0"/>
            </arguments>
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@ownedOperation.19/@ownedParameter.3"/>
          </arguments>
        </body>
        <iterators name="p" variableExps="//@ownedOperation.19/@queryExpression/@thenExpression/@body/@arguments.0/@arguments.1/@source //@ownedOperation.19/@queryExpression/@thenExpression/@body/@arguments.0/@arguments.2/@source"/>
        <result name="result" variableExps="//@ownedOperation.19/@queryExpression/@thenExpression/@body/@source/@source">
          <initExpression xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="0"/>
        </result>
      </thenExpression>
    </queryExpression>
  </ownedOperation>
  <modelParameter name="source"/>
  <modelParameter name="target"/>
  <modelParameter name="annotation"/>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CreateMarshalledIFoo" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.0/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.0/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="originalIFoo" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.0/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.0/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.0/@variable.4"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="originalIFooSignature" bindsTo="//@rule.0/@variable.5"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="marshalledIFoo" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.0/@variable.2">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.0/@variable.2">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Marshalled"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.0/@variable.4"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalledIFooSignature" bindsTo="//@rule.0/@variable.6"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="IFoo" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.0/@variable.3">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.0/@variable.3"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkMarshalledIFoo" referredRelation="//@rule.5">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.0/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.0/@variable.2"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="CopyIFooSignature" referredRelation="//@rule.1">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.0/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.0/@variable.5"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.0/@variable.6"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="annotatedAssemblyConnector" variableExps="//@rule.0/@when/@predicate.0/@contitionExpression/@arguments.0 //@rule.0/@when/@predicate.1/@contitionExpression/@arguments.0/@arguments.0 //@rule.0/@where/@predicate.0/@contitionExpression/@argument.0 //@rule.0/@where/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="originalIFoo" variableExps="//@rule.0/@when/@predicate.1/@contitionExpression/@source //@rule.0/@when/@predicate.2/@contitionExpression/@argument.0"/>
    <variable name="marshalledIFoo" variableExps="//@rule.0/@where/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="IFoo" variableExps="//@rule.0/@when/@predicate.2/@contitionExpression/@argument.1"/>
    <variable name="iFooEntityName" variableExps="//@rule.0/@domain.1/@pattern/@templateExpression/@part.0/@value //@rule.0/@domain.2/@pattern/@templateExpression/@part.0/@value/@arguments.0"/>
    <variable name="originalIFooSignature" variableExps="//@rule.0/@where/@predicate.1/@contitionExpression/@argument.1"/>
    <variable name="marshalledIFooSignature" variableExps="//@rule.0/@where/@predicate.1/@contitionExpression/@argument.2"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semantics.model.expressions:OperationCallExp" name="isAnnotated" referredOperation="//@ownedOperation.1">
          <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.0/@variable.0"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semantics.model.expressions:OperationCallExp">
          <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.0/@variable.1"/>
          <arguments xsi:type="semantics.model.expressions:OperationCallExp" name="findInterfaceFromAssemblyConnector" referredOperation="//@ownedOperation.3">
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.0/@variable.0"/>
          </arguments>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.0/@variable.1"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.0/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyIFooSignature">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.1/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.1/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="originalIFooSignature" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.1/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.1/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.1/@variable.3"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="originalIFooSignatureParameter" bindsTo="//@rule.1/@variable.4"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="marshalledIFooSignature" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.1/@variable.2">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.1/@variable.2">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.1/@variable.3"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalledIFooSignatureParameter" bindsTo="//@rule.1/@variable.5"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="CopyIFooSignatureParameter" referredRelation="//@rule.2">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.1/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.1/@variable.4"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.1/@variable.5"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="CopyIFooSignatureParameterPrimitiveDatatype" referredRelation="//@rule.3">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.1/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.1/@variable.4"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.1/@variable.5"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="CompleteMarshalledIFooSignature" referredRelation="//@rule.4">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.1/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.1/@variable.2"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="annotatedAssemblyConnector" variableExps="//@rule.1/@where/@predicate.0/@contitionExpression/@argument.0 //@rule.1/@where/@predicate.1/@contitionExpression/@argument.0 //@rule.1/@where/@predicate.2/@contitionExpression/@argument.0"/>
    <variable name="originalIFooSignature"/>
    <variable name="marshalledIFooSignature" variableExps="//@rule.1/@where/@predicate.2/@contitionExpression/@argument.1"/>
    <variable name="signatureName" variableExps="//@rule.1/@domain.1/@pattern/@templateExpression/@part.0/@value //@rule.1/@domain.2/@pattern/@templateExpression/@part.0/@value"/>
    <variable name="originalIFooSignatureParameter" variableExps="//@rule.1/@where/@predicate.0/@contitionExpression/@argument.1 //@rule.1/@where/@predicate.1/@contitionExpression/@argument.1"/>
    <variable name="marshalledIFooSignatureParameter" variableExps="//@rule.1/@where/@predicate.0/@contitionExpression/@argument.2 //@rule.1/@where/@predicate.1/@contitionExpression/@argument.2"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyIFooSignatureParameter">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.2/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.2/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParameter" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.2/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.2/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.2/@variable.3"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="sourceDatatype" bindsTo="//@rule.2/@variable.4"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParameter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.2/@variable.2">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.2/@variable.2">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.2/@variable.3"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="copiedDatatype" bindsTo="//@rule.2/@variable.5"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="annotatedAssemblyConnector"/>
    <variable name="sourceParameter"/>
    <variable name="targetParameter"/>
    <variable name="ParameterName" variableExps="//@rule.2/@domain.1/@pattern/@templateExpression/@part.0/@value //@rule.2/@domain.2/@pattern/@templateExpression/@part.0/@value"/>
    <variable name="sourceDatatype" variableExps="//@rule.2/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="copiedDatatype" variableExps="//@rule.2/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_DataType" referredRelation="//@rule.47">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.2/@variable.4"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.2/@variable.5"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyIFooSignatureParameterPrimitiveDatatype">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.3/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.3/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParameter" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.3/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.3/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.3/@variable.3"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="datatype" bindsTo="//@rule.3/@variable.4"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParameter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.3/@variable.2">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.3/@variable.2">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.3/@variable.3"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="datatype" bindsTo="//@rule.3/@variable.4"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="annotatedAssemblyConnector"/>
    <variable name="sourceParameter"/>
    <variable name="targetParameter"/>
    <variable name="parameter_Name" variableExps="//@rule.3/@domain.1/@pattern/@templateExpression/@part.0/@value //@rule.3/@domain.2/@pattern/@templateExpression/@part.0/@value"/>
    <variable name="datatype"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CompleteMarshalledIFooSignature">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.4/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.4/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="marshalledIFooSignature" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.4/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.4/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marhsalledIFooSignatureStreamParameter" bindsTo="//@rule.4/@variable.2">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="stream"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="parameterPrimitiveDataType" bindsTo="//@rule.4/@variable.3"/>
              </part>
            </value>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="annotatedAssemblyConnector"/>
    <variable name="marshalledIFooSignature"/>
    <variable name="marhsalledIFooSignatureStreamParameter"/>
    <variable name="parameterPrimitiveDataType" variableExps="//@rule.4/@when/@predicate.0/@contitionExpression/@source"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semantics.model.expressions:OperationCallExp">
          <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.4/@variable.3"/>
          <arguments xsi:type="semantics.model.expressions:OperationCallExp" name="getDataTypeString" referredOperation="//@ownedOperation.2"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="MarkMarshalledIFoo">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.5/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.5/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="marshalledIFoo" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.5/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.5/@variable.1"/>
      </pattern>
    </domain>
    <variable name="annotatedAssemblyConnector"/>
    <variable name="marshalledIFoo"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CreateConsumerPoolInterface" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.6/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.6/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="consumerPoolInterface" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.6/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.6/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="consumerPoolInterface"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="getConsumer" bindsTo="//@rule.6/@variable.2">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="getConsumer"/>
              </part>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="returnConsumer" bindsTo="//@rule.6/@variable.3">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="returnConsumer"/>
              </part>
            </value>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkConsumerPoolSignatures" referredRelation="//@rule.7">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.6/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.6/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.6/@variable.3"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="annotatedAssemblyConnector" variableExps="//@rule.6/@when/@predicate.0/@contitionExpression/@arguments.0 //@rule.6/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="consumerPoolInterface"/>
    <variable name="getConsumer" variableExps="//@rule.6/@where/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="returnConsumer" variableExps="//@rule.6/@where/@predicate.0/@contitionExpression/@argument.2"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semantics.model.expressions:OperationCallExp" name="isAnnotated" referredOperation="//@ownedOperation.1">
          <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.6/@variable.0"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="MarkConsumerPoolSignatures">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.7/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.7/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="consumerPoolInterfaceGetConsumer" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.7/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.7/@variable.1"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="consumerPoolInterfaceReturnConsumer" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.7/@variable.2">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.7/@variable.2"/>
      </pattern>
    </domain>
    <variable name="annotatedAssemblyConnector"/>
    <variable name="consumerPoolInterfaceGetConsumer"/>
    <variable name="consumerPoolInterfaceReturnConsumer"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CreateAdapterComponents" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.8/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.8/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="marshalling" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.8/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.8/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Marshalling"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingProvidedIFoo" bindsTo="//@rule.8/@variable.7">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Provided_IFoo_Marshalling"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="IFoo" bindsTo="//@rule.8/@variable.8"/>
              </part>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingRequiredMarshalledIFoo" bindsTo="//@rule.8/@variable.9">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Required_MarshalledIFoo_Marshalling"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalledIFoo" bindsTo="//@rule.8/@variable.10"/>
              </part>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingRequiredIMarshalling" bindsTo="//@rule.8/@variable.11">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Required_IMarshalling_Marshalling"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingInterface" bindsTo="//@rule.8/@variable.12"/>
              </part>
            </value>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="senderAdapter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.8/@variable.2">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.8/@variable.2">
          <part>
            <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="SenderAdapter"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterProvidedMarshalledIFoo" bindsTo="//@rule.8/@variable.13">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Provided_MarshalledIFoo_SenderAdapter"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalledIFoo" bindsTo="//@rule.8/@variable.10"/>
              </part>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterRequiredMarshalledIFoo" bindsTo="//@rule.8/@variable.14">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Required_MarshalledIFoo_SenderAdapter"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalledIFoo" bindsTo="//@rule.8/@variable.10"/>
              </part>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterRequiredISender" bindsTo="//@rule.8/@variable.15">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Required_ISender_SenderAdapter"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderInterface" bindsTo="//@rule.8/@variable.16"/>
              </part>
            </value>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="momAdapter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.8/@variable.3">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.8/@variable.3">
          <part>
            <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="MOMAdapter"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterProvidedMarshalledIFoo" bindsTo="//@rule.8/@variable.17">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Provided_MarshalledIFoo_MOMAdapter"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalledIFoo" bindsTo="//@rule.8/@variable.10"/>
              </part>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterRequiredMarshalledIFoo" bindsTo="//@rule.8/@variable.18">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Required_MarshalledIFoo_MOMAdapter"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalledIFoo" bindsTo="//@rule.8/@variable.10"/>
              </part>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterRequiredIMom" bindsTo="//@rule.8/@variable.19">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Required_IMom_MOMAdapter"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momInterface" bindsTo="//@rule.8/@variable.20"/>
              </part>
            </value>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="receiverAdapter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.8/@variable.4">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.8/@variable.4">
          <part>
            <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="ReceiverAdapter"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterProvidedMarshalledIFoo" bindsTo="//@rule.8/@variable.21">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Provided_MarshalledIFoo_ReceiverAdapter"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalledIFoo" bindsTo="//@rule.8/@variable.10"/>
              </part>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterRequiredMarshalledIFoo" bindsTo="//@rule.8/@variable.22">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Required_MarshalledIFoo_ReceiverAdapter"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalledIFoo" bindsTo="//@rule.8/@variable.10"/>
              </part>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterRequiredIReceiver" bindsTo="//@rule.8/@variable.23">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Required_IReceiver_ReceiverAdapter"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverInterface" bindsTo="//@rule.8/@variable.24"/>
              </part>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterRequiredIConsumerPool" bindsTo="//@rule.8/@variable.25">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Required_IConsumerPool_ReceiverAdapter"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPoolInterface" bindsTo="//@rule.8/@variable.26"/>
              </part>
            </value>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="deMarshalling" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.8/@variable.5">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.8/@variable.5">
          <part>
            <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="DeMarshalling"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="deMarshallingProvidedMarshalledIFoo" bindsTo="//@rule.8/@variable.27">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Provided_MarshalledIFoo_DeMarshalling"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalledIFoo" bindsTo="//@rule.8/@variable.10"/>
              </part>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="deMarshallingRequiredIFoo" bindsTo="//@rule.8/@variable.28">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Required_IFoo_DeMarshalling"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="IFoo" bindsTo="//@rule.8/@variable.8"/>
              </part>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="deMarshallingRequiredIMarshalling" bindsTo="//@rule.8/@variable.29">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Required_IMarshalling_DeMarshalling"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingInterface" bindsTo="//@rule.8/@variable.12"/>
              </part>
            </value>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="consumerPool" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.8/@variable.6">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.8/@variable.6">
          <part>
            <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="ConsumerPool"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPoolProvidedIConsumerPool" bindsTo="//@rule.8/@variable.30">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Provided_IConsumerPool_ConsumerPool"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPoolInterface" bindsTo="//@rule.8/@variable.26"/>
              </part>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="pool" bindsTo="//@rule.8/@variable.31">
              <part>
                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="ConsumerPoolPool"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="kapazitaet" bindsTo="//@rule.8/@variable.32">
                  <part>
                    <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="1"/>
                  </part>
                </value>
              </part>
            </value>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkAdapterProvidedRoles" referredRelation="//@rule.10">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.7"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.13"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.17"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.21"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.27"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.30"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkAdapterRequiredRoles" referredRelation="//@rule.9">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.11"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.9"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.15"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.14"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.19"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.18"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.23"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.25"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.22"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.29"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.28"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkConsumerPool" referredRelation="//@rule.11">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.6"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkConsumerPoolPool" referredRelation="//@rule.12">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.31"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="annotatedAssemblyConnector" variableExps="//@rule.8/@when/@predicate.0/@contitionExpression/@arguments.0 //@rule.8/@when/@predicate.1/@contitionExpression/@argument.0/@arguments.0 //@rule.8/@when/@predicate.2/@contitionExpression/@argument.0 //@rule.8/@when/@predicate.7/@contitionExpression/@argument.0 //@rule.8/@where/@predicate.0/@contitionExpression/@argument.0 //@rule.8/@where/@predicate.1/@contitionExpression/@argument.0 //@rule.8/@where/@predicate.2/@contitionExpression/@argument.0 //@rule.8/@where/@predicate.3/@contitionExpression/@argument.0"/>
    <variable name="marshalling"/>
    <variable name="senderAdapter"/>
    <variable name="momAdapter"/>
    <variable name="receiverAdapter"/>
    <variable name="deMarshalling"/>
    <variable name="consumerPool" variableExps="//@rule.8/@when/@predicate.3/@contitionExpression/@argument.0/@source //@rule.8/@when/@predicate.4/@contitionExpression/@argument.0/@source //@rule.8/@when/@predicate.5/@contitionExpression/@argument.0/@source //@rule.8/@when/@predicate.6/@contitionExpression/@argument.0/@source //@rule.8/@where/@predicate.2/@contitionExpression/@argument.1"/>
    <variable name="marshallingProvidedIFoo" variableExps="//@rule.8/@where/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="IFoo" variableExps="//@rule.8/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <variable name="marshallingRequiredMarshalledIFoo" variableExps="//@rule.8/@where/@predicate.1/@contitionExpression/@argument.2"/>
    <variable name="marshalledIFoo" variableExps="//@rule.8/@when/@predicate.2/@contitionExpression/@argument.1"/>
    <variable name="marshallingRequiredIMarshalling" variableExps="//@rule.8/@where/@predicate.1/@contitionExpression/@argument.1"/>
    <variable name="marshallingInterface" variableExps="//@rule.8/@when/@predicate.3/@contitionExpression/@argument.1"/>
    <variable name="senderAdapterProvidedMarshalledIFoo" variableExps="//@rule.8/@where/@predicate.0/@contitionExpression/@argument.2"/>
    <variable name="senderAdapterRequiredMarshalledIFoo" variableExps="//@rule.8/@where/@predicate.1/@contitionExpression/@argument.4"/>
    <variable name="senderAdapterRequiredISender" variableExps="//@rule.8/@where/@predicate.1/@contitionExpression/@argument.3"/>
    <variable name="senderInterface" variableExps="//@rule.8/@when/@predicate.4/@contitionExpression/@argument.1"/>
    <variable name="momAdapterProvidedMarshalledIFoo" variableExps="//@rule.8/@where/@predicate.0/@contitionExpression/@argument.3"/>
    <variable name="momAdapterRequiredMarshalledIFoo" variableExps="//@rule.8/@where/@predicate.1/@contitionExpression/@argument.6"/>
    <variable name="momAdapterRequiredIMom" variableExps="//@rule.8/@where/@predicate.1/@contitionExpression/@argument.5"/>
    <variable name="momInterface" variableExps="//@rule.8/@when/@predicate.5/@contitionExpression/@argument.1"/>
    <variable name="receiverAdapterProvidedMarshalledIFoo" variableExps="//@rule.8/@where/@predicate.0/@contitionExpression/@argument.4"/>
    <variable name="receiverAdapterRequiredMarshalledIFoo" variableExps="//@rule.8/@where/@predicate.1/@contitionExpression/@argument.9"/>
    <variable name="receiverAdapterRequiredIReceiver" variableExps="//@rule.8/@where/@predicate.1/@contitionExpression/@argument.7"/>
    <variable name="receiverInterface" variableExps="//@rule.8/@when/@predicate.6/@contitionExpression/@argument.1"/>
    <variable name="receiverAdapterRequiredIConsumerPool" variableExps="//@rule.8/@where/@predicate.1/@contitionExpression/@argument.8"/>
    <variable name="consumerPoolInterface" variableExps="//@rule.8/@when/@predicate.7/@contitionExpression/@argument.1"/>
    <variable name="deMarshallingProvidedMarshalledIFoo" variableExps="//@rule.8/@where/@predicate.0/@contitionExpression/@argument.5"/>
    <variable name="deMarshallingRequiredIFoo" variableExps="//@rule.8/@where/@predicate.1/@contitionExpression/@argument.11"/>
    <variable name="deMarshallingRequiredIMarshalling" variableExps="//@rule.8/@where/@predicate.1/@contitionExpression/@argument.10"/>
    <variable name="consumerPoolProvidedIConsumerPool" variableExps="//@rule.8/@where/@predicate.0/@contitionExpression/@argument.6"/>
    <variable name="pool" variableExps="//@rule.8/@where/@predicate.3/@contitionExpression/@argument.1"/>
    <variable name="kapazitaet"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semantics.model.expressions:OperationCallExp" name="isAnnotated" referredOperation="//@ownedOperation.1">
          <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.0"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:OperationCallExp" name="findInterfaceFromAssemblyConnector" referredOperation="//@ownedOperation.3">
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.0"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.8"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkMarshalledIFoo" referredRelation="//@rule.5">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.10"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.6"/>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="imarshalling"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.12"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.6"/>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="senderInterface"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.16"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.6"/>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="imom"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.20"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.6"/>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="ireceiver"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.24"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="CreateConsumerPoolInterface" referredRelation="//@rule.6">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.8/@variable.26"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="MarkAdapterRequiredRoles">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.9/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.9/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="marshallingRequiredIMarshalling" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.9/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.9/@variable.1"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="marshallingRequiredMarshalledIFoo" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.9/@variable.2">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.9/@variable.2"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="senderAdapterRequiredISender" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.9/@variable.3">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.9/@variable.3"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="senderAdapterRequiredMarshalledIFoo" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.9/@variable.4">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.9/@variable.4"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="momAdapterRequiredIMom" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.9/@variable.5">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.9/@variable.5"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="momAdapterRequiredMarshalledIFoo" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.9/@variable.6">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.9/@variable.6"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="receiverAdapterRequiredIReceiver" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.9/@variable.7">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.9/@variable.7"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="receiverAdapterRequiredIConsumerPool" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.9/@variable.8">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.9/@variable.8"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="receiverAdapterRequiredMarshalledIFoo" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.9/@variable.9">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.9/@variable.9"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="deMarshallingRequiredIMarshalling" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.9/@variable.10">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.9/@variable.10"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="deMarshallingRequiredIFoo" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.9/@variable.11">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.9/@variable.11"/>
      </pattern>
    </domain>
    <variable name="annotatedAssemblyConnector"/>
    <variable name="marshallingRequiredIMarshalling"/>
    <variable name="marshallingRequiredMarshalledIFoo"/>
    <variable name="senderAdapterRequiredISender"/>
    <variable name="senderAdapterRequiredMarshalledIFoo"/>
    <variable name="momAdapterRequiredIMom"/>
    <variable name="momAdapterRequiredMarshalledIFoo"/>
    <variable name="receiverAdapterRequiredIReceiver"/>
    <variable name="receiverAdapterRequiredIConsumerPool"/>
    <variable name="receiverAdapterRequiredMarshalledIFoo"/>
    <variable name="deMarshallingRequiredIMarshalling"/>
    <variable name="deMarshallingRequiredIFoo"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="MarkAdapterProvidedRoles">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.10/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.10/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="marshallingProvidedIFoo" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.10/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.10/@variable.1"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="senderAdapterProvidedMarshalledIFoo" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.10/@variable.2">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.10/@variable.2"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="momAdapterProvidedMarshalledIFoo" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.10/@variable.3">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.10/@variable.3"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="receiverAdapterProvidedMarshalledIFoo" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.10/@variable.4">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.10/@variable.4"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="deMarshallingProvidedMarshalledIFoo" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.10/@variable.5">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.10/@variable.5"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="consumerPoolProvidedIConsumerPool" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.10/@variable.6">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.10/@variable.6"/>
      </pattern>
    </domain>
    <variable name="annotatedAssemblyConnector"/>
    <variable name="marshallingProvidedIFoo"/>
    <variable name="senderAdapterProvidedMarshalledIFoo"/>
    <variable name="momAdapterProvidedMarshalledIFoo"/>
    <variable name="receiverAdapterProvidedMarshalledIFoo"/>
    <variable name="deMarshallingProvidedMarshalledIFoo"/>
    <variable name="consumerPoolProvidedIConsumerPool"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="MarkConsumerPool">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.11/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.11/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="consumerPool" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.11/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.11/@variable.1"/>
      </pattern>
    </domain>
    <variable name="annotatedAssemblyConnector"/>
    <variable name="consumerPool"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="MarkConsumerPoolPool">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.12/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.12/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="consumerPoolPool" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.12/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.12/@variable.1"/>
      </pattern>
    </domain>
    <variable name="annotatedAssemblyConnector"/>
    <variable name="consumerPoolPool"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CreateAdapterSEFFs" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="ptr" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.13/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.13/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="_Ls3VgHv_Edub45jJKtm_Dg"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="pdtINT" bindsTo="//@rule.13/@variable.16">
              <part/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="pdtSTRING" bindsTo="//@rule.13/@variable.17">
              <part/>
            </value>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="consumerPool" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.13/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.13/@variable.1"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="marshallingRequiredMarshalledIFoo" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.13/@variable.2">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.13/@variable.2"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="marshallingRequiredIMarshalling" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.13/@variable.3">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.13/@variable.3"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="deMarshallingRequiredIMarshalling" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.13/@variable.4">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.13/@variable.4"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="deMarshallingRequiredIFoo" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.13/@variable.5">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.13/@variable.5"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotationElement" isCheckable="true" typedModel="//@modelParameter.2" rootVariable="//@rule.13/@variable.6">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.13/@variable.6">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.15"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.13/@variable.7">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.13/@variable.7">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.15"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRepository" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.13/@variable.8">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.13/@variable.8">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="originalIFoo" bindsTo="//@rule.13/@variable.18">
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="originalIFooSignature" bindsTo="//@rule.13/@variable.19"/>
              </part>
            </value>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="marshalledIFoo" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.13/@variable.9">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.13/@variable.9">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalledIFooService" bindsTo="//@rule.13/@variable.20"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="marshalling" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.13/@variable.10">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.13/@variable.10">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingSEFF" bindsTo="//@rule.13/@variable.21">
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="originalIFooSignature" bindsTo="//@rule.13/@variable.19"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingStartAction" bindsTo="//@rule.13/@variable.22">
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="callIMarshalling" bindsTo="//@rule.13/@variable.23"/>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="callIMarshalling" bindsTo="//@rule.13/@variable.23">
                  <part>
                    <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.22"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingStopAction" bindsTo="//@rule.13/@variable.24"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderInterfacePreparePublishing" bindsTo="//@rule.13/@variable.25"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingRequiredIMarshalling" bindsTo="//@rule.13/@variable.3"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iMarshallingVariableUsage" bindsTo="//@rule.13/@variable.26">
                      <part>
                        <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iMarshallingVariableCharacterisation" bindsTo="//@rule.13/@variable.27">
                          <part/>
                          <part>
                            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iMarshallingStreamBYTESIZE" bindsTo="//@rule.13/@variable.28">
                              <part/>
                            </value>
                          </part>
                        </value>
                      </part>
                      <part>
                        <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iMarshallingVariableReference" bindsTo="//@rule.13/@variable.29">
                          <part>
                            <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="message"/>
                          </part>
                        </value>
                      </part>
                    </value>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingStopAction" bindsTo="//@rule.13/@variable.24">
                  <part>
                    <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.23"/>
                  </part>
                </value>
              </part>
            </value>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="senderAdapter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.13/@variable.11">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.13/@variable.11">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdaptermarshalledIFooServiceDescribingSEFF" bindsTo="//@rule.13/@variable.30">
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="originalIFooSignature" bindsTo="//@rule.13/@variable.19"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterStartAction" bindsTo="//@rule.13/@variable.31">
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="callISenderPreparePublishing" bindsTo="//@rule.13/@variable.32"/>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="callISenderPreparePublishing" bindsTo="//@rule.13/@variable.32">
                  <part>
                    <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="senderInterfacePreparePublishing"/>
                  </part>
                  <part>
                    <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.31"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="asynchronousSimulation" bindsTo="//@rule.13/@variable.33"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderInterfacePreparePublishing" bindsTo="//@rule.13/@variable.25"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterRequiredISender" bindsTo="//@rule.13/@variable.34"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iSenderPreparePublishingVariableUsage" bindsTo="//@rule.13/@variable.35">
                      <part>
                        <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iSenderPreparePublishingVariableReference" bindsTo="//@rule.13/@variable.36">
                          <part>
                            <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="message"/>
                          </part>
                        </value>
                      </part>
                      <part>
                        <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iSenderPreparePublishingVariableCharacterisation" bindsTo="//@rule.13/@variable.37">
                          <part/>
                          <part>
                            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iSenderPreparePublishingStreamBYTESIZE" bindsTo="//@rule.13/@variable.38">
                              <part>
                                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="stream.BYTESIZE"/>
                              </part>
                            </value>
                          </part>
                        </value>
                      </part>
                    </value>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="asynchronousSimulation" bindsTo="//@rule.13/@variable.33">
                  <part>
                    <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.32"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterStopAction" bindsTo="//@rule.13/@variable.39"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="callIMarshalledIFoo" bindsTo="//@rule.13/@variable.40">
                      <part>
                        <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="forkStartAction" bindsTo="//@rule.13/@variable.41">
                          <part>
                            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterCallmarshalledIFooService" bindsTo="//@rule.13/@variable.42"/>
                          </part>
                        </value>
                      </part>
                      <part>
                        <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterCallmarshalledIFooService" bindsTo="//@rule.13/@variable.42">
                          <part>
                            <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="marshalledIFooService"/>
                          </part>
                          <part>
                            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.41"/>
                          </part>
                          <part>
                            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="forkStopAction" bindsTo="//@rule.13/@variable.43"/>
                          </part>
                          <part>
                            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.20"/>
                          </part>
                          <part>
                            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterRequiredMarshalledIFoo" bindsTo="//@rule.13/@variable.44"/>
                          </part>
                          <part>
                            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iSenderAdaptermarshalledIFooServiceStreamVariableUsage" bindsTo="//@rule.13/@variable.45">
                              <part>
                                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iSenderAdaptermarshalledIFooServiceStreamVariableUsageCharacterisation" bindsTo="//@rule.13/@variable.46">
                                  <part/>
                                  <part>
                                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iSenderAdaptermarshalledIFooServiceStreamVariableUsageStreamBYTESIZE" bindsTo="//@rule.13/@variable.47">
                                      <part>
                                        <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="stream.BYTESIZE"/>
                                      </part>
                                    </value>
                                  </part>
                                </value>
                              </part>
                              <part>
                                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iSenderAdaptermarshalledIFooServiceStreamVariableUsageVariableReference" bindsTo="//@rule.13/@variable.48">
                                  <part>
                                    <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="stream"/>
                                  </part>
                                </value>
                              </part>
                            </value>
                          </part>
                        </value>
                      </part>
                      <part>
                        <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="forkStopAction" bindsTo="//@rule.13/@variable.43">
                          <part>
                            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.42"/>
                          </part>
                        </value>
                      </part>
                    </value>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterStopAction" bindsTo="//@rule.13/@variable.39">
                  <part>
                    <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.33"/>
                  </part>
                </value>
              </part>
            </value>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="momAdapter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.13/@variable.12">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.13/@variable.12">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterSEFF" bindsTo="//@rule.13/@variable.49">
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalledIFooService" bindsTo="//@rule.13/@variable.20"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterStartAction" bindsTo="//@rule.13/@variable.50">
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="callIMOMProcessMessageTransfer" bindsTo="//@rule.13/@variable.51"/>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="callIMOMProcessMessageTransfer" bindsTo="//@rule.13/@variable.51">
                  <part>
                    <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.50"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="messagingSystemCallmarshalledIFooService" bindsTo="//@rule.13/@variable.52"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iMomProcessMessageTransfer" bindsTo="//@rule.13/@variable.53"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterRequiredIMom" bindsTo="//@rule.13/@variable.54"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iMomProcessMessageTransferVariableUsage" bindsTo="//@rule.13/@variable.55">
                      <part>
                        <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iMomProcessMessageTransferVariableCharacterisation" bindsTo="//@rule.13/@variable.56">
                          <part/>
                          <part>
                            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iMomProcessMessageTransferStreamBYTESIZE" bindsTo="//@rule.13/@variable.57">
                              <part>
                                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="stream.BYTESIZE"/>
                              </part>
                            </value>
                          </part>
                        </value>
                      </part>
                      <part>
                        <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iMomProcessMessageTransferVariableReference" bindsTo="//@rule.13/@variable.58">
                          <part>
                            <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="message"/>
                          </part>
                        </value>
                      </part>
                    </value>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="messagingSystemCallmarshalledIFooService" bindsTo="//@rule.13/@variable.52">
                  <part>
                    <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.51"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iMOMAdapterStopAction" bindsTo="//@rule.13/@variable.59"/>
                  </part>
                  <part>
                    <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.20"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterRequiredMarshalledIFoo" bindsTo="//@rule.13/@variable.60"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iMomMarshalledIFooServiceStreamVariableUsage" bindsTo="//@rule.13/@variable.61">
                      <part>
                        <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iMomMarshalledIFooServiceStreamVariableUsageCharacterisation" bindsTo="//@rule.13/@variable.62">
                          <part/>
                          <part>
                            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iMomMarshalledIFooServiceStreamVariableUsageStreamBYTESIZE" bindsTo="//@rule.13/@variable.63">
                              <part>
                                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="stream.BYTESIZE"/>
                              </part>
                            </value>
                          </part>
                        </value>
                      </part>
                      <part>
                        <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iMomMarshalledIFooServiceStreamVariableUsageVariableReference" bindsTo="//@rule.13/@variable.64">
                          <part>
                            <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="stream"/>
                          </part>
                        </value>
                      </part>
                    </value>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iMOMAdapterStopAction" bindsTo="//@rule.13/@variable.59">
                  <part>
                    <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.52"/>
                  </part>
                </value>
              </part>
            </value>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="receiverAdapter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.13/@variable.13">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.13/@variable.13">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterSEFF" bindsTo="//@rule.13/@variable.65">
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalledIFooService" bindsTo="//@rule.13/@variable.20"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterStartAction" bindsTo="//@rule.13/@variable.66">
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="callIReceiverFinishPublishing" bindsTo="//@rule.13/@variable.67"/>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="callIReceiverFinishPublishing" bindsTo="//@rule.13/@variable.67">
                  <part>
                    <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.66"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="callIConsumerPoolGetConsumer" bindsTo="//@rule.13/@variable.68"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iReceiverFinishPublishing" bindsTo="//@rule.13/@variable.69"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterRequiredIReceiver" bindsTo="//@rule.13/@variable.70"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iReceiverFinishPublishingVariableUsage" bindsTo="//@rule.13/@variable.71">
                      <part>
                        <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="finishPublishingVariableCharacterisation" bindsTo="//@rule.13/@variable.72">
                          <part/>
                          <part>
                            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="finishPublishingStreamBYTESIZE" bindsTo="//@rule.13/@variable.73">
                              <part>
                                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="stream.BYTESIZE"/>
                              </part>
                            </value>
                          </part>
                        </value>
                      </part>
                      <part>
                        <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iReceiverFinishingVariableReference" bindsTo="//@rule.13/@variable.74">
                          <part>
                            <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="message"/>
                          </part>
                        </value>
                      </part>
                    </value>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="callIConsumerPoolGetConsumer" bindsTo="//@rule.13/@variable.68">
                  <part>
                    <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.67"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterCallmarshalledIFooService" bindsTo="//@rule.13/@variable.75"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPoolInterfaceGetConsumer" bindsTo="//@rule.13/@variable.76"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterRequiredIConsumerPool" bindsTo="//@rule.13/@variable.77"/>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterCallmarshalledIFooService" bindsTo="//@rule.13/@variable.75">
                  <part>
                    <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.68"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="callIConsumerPoolReturnCustomer" bindsTo="//@rule.13/@variable.78"/>
                  </part>
                  <part>
                    <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.20"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterRequiredMarshalledIFoo" bindsTo="//@rule.13/@variable.79"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iReceiverAdaptermarshalledIFooServiceStreamVariableUsage" bindsTo="//@rule.13/@variable.80">
                      <part>
                        <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iReceiverAdaptermarshalledIFooServiceStreamVariableUsageCharacterisation" bindsTo="//@rule.13/@variable.81">
                          <part/>
                          <part>
                            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iReceiverAdaptermarshalledIFooServiceStreamVariableUsageStreamBYTESIZE" bindsTo="//@rule.13/@variable.82">
                              <part>
                                <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="stream.BYTESIZE"/>
                              </part>
                            </value>
                          </part>
                        </value>
                      </part>
                      <part>
                        <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="iReceiverAdaptermarshalledIFooServiceStreamVariableUsageVariableReference" bindsTo="//@rule.13/@variable.83">
                          <part>
                            <value xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="stream"/>
                          </part>
                        </value>
                      </part>
                    </value>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="callIConsumerPoolReturnCustomer" bindsTo="//@rule.13/@variable.78">
                  <part>
                    <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.75"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterStopAction" bindsTo="//@rule.13/@variable.84"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPoolInterfaceReturnConsumer" bindsTo="//@rule.13/@variable.85"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterRequiredIConsumerPool" bindsTo="//@rule.13/@variable.77"/>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterStopAction" bindsTo="//@rule.13/@variable.84">
                  <part>
                    <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.78"/>
                  </part>
                </value>
              </part>
            </value>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="deMarshalling" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.13/@variable.14">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.13/@variable.14"/>
      </pattern>
    </domain>
    <variable name="ptr"/>
    <variable name="consumerPool" variableExps="//@rule.13/@when/@predicate.8/@contitionExpression/@argument.6"/>
    <variable name="marshallingRequiredMarshalledIFoo" variableExps="//@rule.13/@when/@predicate.0/@contitionExpression/@argument.2"/>
    <variable name="marshallingRequiredIMarshalling" variableExps="//@rule.13/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="deMarshallingRequiredIMarshalling" variableExps="//@rule.13/@when/@predicate.0/@contitionExpression/@argument.10"/>
    <variable name="deMarshallingRequiredIFoo" variableExps="//@rule.13/@when/@predicate.0/@contitionExpression/@argument.11"/>
    <variable name="annotationElement" variableExps="//@rule.13/@when/@predicate.1/@contitionExpression/@argument.0/@arguments.1 //@rule.13/@when/@predicate.2/@contitionExpression/@argument.0/@arguments.1 //@rule.13/@when/@predicate.3/@contitionExpression/@argument.0/@arguments.1"/>
    <variable name="annotatedAssemblyConnector" variableExps="//@rule.13/@when/@predicate.0/@contitionExpression/@argument.0 //@rule.13/@when/@predicate.4/@contitionExpression/@argument.0 //@rule.13/@when/@predicate.5/@contitionExpression/@arguments.0 //@rule.13/@when/@predicate.6/@contitionExpression/@argument.0 //@rule.13/@when/@predicate.7/@contitionExpression/@argument.0 //@rule.13/@when/@predicate.8/@contitionExpression/@argument.0"/>
    <variable name="sourceRepository"/>
    <variable name="marshalledIFoo" variableExps="//@rule.13/@when/@predicate.7/@contitionExpression/@argument.1"/>
    <variable name="marshalling" variableExps="//@rule.13/@when/@predicate.8/@contitionExpression/@argument.1"/>
    <variable name="senderAdapter" variableExps="//@rule.13/@when/@predicate.8/@contitionExpression/@argument.2"/>
    <variable name="momAdapter" variableExps="//@rule.13/@when/@predicate.8/@contitionExpression/@argument.3"/>
    <variable name="receiverAdapter" variableExps="//@rule.13/@when/@predicate.8/@contitionExpression/@argument.4"/>
    <variable name="deMarshalling" variableExps="//@rule.13/@when/@predicate.8/@contitionExpression/@argument.5"/>
    <variable name="annotatedAssemblyConnectorID" variableExps="//@rule.13/@domain.6/@pattern/@templateExpression/@part.0/@value //@rule.13/@domain.7/@pattern/@templateExpression/@part.0/@value"/>
    <variable name="pdtINT"/>
    <variable name="pdtSTRING"/>
    <variable name="originalIFoo"/>
    <variable name="originalIFooSignature" variableExps="//@rule.13/@when/@predicate.6/@contitionExpression/@argument.1"/>
    <variable name="marshalledIFooService" variableExps="//@rule.13/@domain.11/@pattern/@templateExpression/@part.0/@value/@part.3/@value/@part.2/@value/@part.1/@value/@part.3/@value //@rule.13/@domain.12/@pattern/@templateExpression/@part.0/@value/@part.3/@value/@part.2/@value //@rule.13/@domain.13/@pattern/@templateExpression/@part.0/@value/@part.4/@value/@part.2/@value //@rule.13/@when/@predicate.6/@contitionExpression/@argument.2"/>
    <variable name="marshallingSEFF"/>
    <variable name="marshallingStartAction" variableExps="//@rule.13/@domain.10/@pattern/@templateExpression/@part.0/@value/@part.2/@value/@part.0/@value"/>
    <variable name="callIMarshalling" variableExps="//@rule.13/@domain.10/@pattern/@templateExpression/@part.0/@value/@part.3/@value/@part.0/@value"/>
    <variable name="marshallingStopAction"/>
    <variable name="senderInterfacePreparePublishing" variableExps="//@rule.13/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <variable name="iMarshallingVariableUsage"/>
    <variable name="iMarshallingVariableCharacterisation"/>
    <variable name="iMarshallingStreamBYTESIZE"/>
    <variable name="iMarshallingVariableReference"/>
    <variable name="senderAdaptermarshalledIFooServiceDescribingSEFF"/>
    <variable name="senderAdapterStartAction" variableExps="//@rule.13/@domain.11/@pattern/@templateExpression/@part.0/@value/@part.2/@value/@part.1/@value"/>
    <variable name="callISenderPreparePublishing" variableExps="//@rule.13/@domain.11/@pattern/@templateExpression/@part.0/@value/@part.3/@value/@part.0/@value"/>
    <variable name="asynchronousSimulation" variableExps="//@rule.13/@domain.11/@pattern/@templateExpression/@part.0/@value/@part.4/@value/@part.0/@value"/>
    <variable name="senderAdapterRequiredISender" variableExps="//@rule.13/@when/@predicate.0/@contitionExpression/@argument.3"/>
    <variable name="iSenderPreparePublishingVariableUsage"/>
    <variable name="iSenderPreparePublishingVariableReference"/>
    <variable name="iSenderPreparePublishingVariableCharacterisation"/>
    <variable name="iSenderPreparePublishingStreamBYTESIZE"/>
    <variable name="senderAdapterStopAction"/>
    <variable name="callIMarshalledIFoo"/>
    <variable name="forkStartAction" variableExps="//@rule.13/@domain.11/@pattern/@templateExpression/@part.0/@value/@part.3/@value/@part.2/@value/@part.1/@value/@part.1/@value"/>
    <variable name="senderAdapterCallmarshalledIFooService" variableExps="//@rule.13/@domain.11/@pattern/@templateExpression/@part.0/@value/@part.3/@value/@part.2/@value/@part.2/@value/@part.0/@value"/>
    <variable name="forkStopAction"/>
    <variable name="senderAdapterRequiredMarshalledIFoo" variableExps="//@rule.13/@when/@predicate.0/@contitionExpression/@argument.4"/>
    <variable name="iSenderAdaptermarshalledIFooServiceStreamVariableUsage"/>
    <variable name="iSenderAdaptermarshalledIFooServiceStreamVariableUsageCharacterisation"/>
    <variable name="iSenderAdaptermarshalledIFooServiceStreamVariableUsageStreamBYTESIZE"/>
    <variable name="iSenderAdaptermarshalledIFooServiceStreamVariableUsageVariableReference"/>
    <variable name="momAdapterSEFF"/>
    <variable name="momAdapterStartAction" variableExps="//@rule.13/@domain.12/@pattern/@templateExpression/@part.0/@value/@part.2/@value/@part.0/@value"/>
    <variable name="callIMOMProcessMessageTransfer" variableExps="//@rule.13/@domain.12/@pattern/@templateExpression/@part.0/@value/@part.3/@value/@part.0/@value //@rule.13/@when/@predicate.1/@contitionExpression/@argument.0/@arguments.0/@source //@rule.13/@when/@predicate.2/@contitionExpression/@argument.0/@arguments.0/@source //@rule.13/@when/@predicate.3/@contitionExpression/@argument.0/@arguments.0/@source"/>
    <variable name="messagingSystemCallmarshalledIFooService" variableExps="//@rule.13/@domain.12/@pattern/@templateExpression/@part.0/@value/@part.4/@value/@part.0/@value"/>
    <variable name="iMomProcessMessageTransfer" variableExps="//@rule.13/@when/@predicate.2/@contitionExpression/@argument.1"/>
    <variable name="momAdapterRequiredIMom" variableExps="//@rule.13/@when/@predicate.0/@contitionExpression/@argument.5"/>
    <variable name="iMomProcessMessageTransferVariableUsage"/>
    <variable name="iMomProcessMessageTransferVariableCharacterisation"/>
    <variable name="iMomProcessMessageTransferStreamBYTESIZE"/>
    <variable name="iMomProcessMessageTransferVariableReference"/>
    <variable name="iMOMAdapterStopAction"/>
    <variable name="momAdapterRequiredMarshalledIFoo" variableExps="//@rule.13/@when/@predicate.0/@contitionExpression/@argument.6"/>
    <variable name="iMomMarshalledIFooServiceStreamVariableUsage"/>
    <variable name="iMomMarshalledIFooServiceStreamVariableUsageCharacterisation"/>
    <variable name="iMomMarshalledIFooServiceStreamVariableUsageStreamBYTESIZE"/>
    <variable name="iMomMarshalledIFooServiceStreamVariableUsageVariableReference"/>
    <variable name="receiverAdapterSEFF"/>
    <variable name="receiverAdapterStartAction" variableExps="//@rule.13/@domain.13/@pattern/@templateExpression/@part.0/@value/@part.2/@value/@part.0/@value"/>
    <variable name="callIReceiverFinishPublishing" variableExps="//@rule.13/@domain.13/@pattern/@templateExpression/@part.0/@value/@part.3/@value/@part.0/@value"/>
    <variable name="callIConsumerPoolGetConsumer" variableExps="//@rule.13/@domain.13/@pattern/@templateExpression/@part.0/@value/@part.4/@value/@part.0/@value"/>
    <variable name="iReceiverFinishPublishing" variableExps="//@rule.13/@when/@predicate.3/@contitionExpression/@argument.1"/>
    <variable name="receiverAdapterRequiredIReceiver" variableExps="//@rule.13/@when/@predicate.0/@contitionExpression/@argument.7"/>
    <variable name="iReceiverFinishPublishingVariableUsage"/>
    <variable name="finishPublishingVariableCharacterisation"/>
    <variable name="finishPublishingStreamBYTESIZE"/>
    <variable name="iReceiverFinishingVariableReference"/>
    <variable name="receiverAdapterCallmarshalledIFooService" variableExps="//@rule.13/@domain.13/@pattern/@templateExpression/@part.0/@value/@part.5/@value/@part.0/@value"/>
    <variable name="consumerPoolInterfaceGetConsumer" variableExps="//@rule.13/@when/@predicate.4/@contitionExpression/@argument.1"/>
    <variable name="receiverAdapterRequiredIConsumerPool" variableExps="//@rule.13/@when/@predicate.0/@contitionExpression/@argument.8"/>
    <variable name="callIConsumerPoolReturnCustomer" variableExps="//@rule.13/@domain.13/@pattern/@templateExpression/@part.0/@value/@part.6/@value/@part.0/@value"/>
    <variable name="receiverAdapterRequiredMarshalledIFoo" variableExps="//@rule.13/@when/@predicate.0/@contitionExpression/@argument.9"/>
    <variable name="iReceiverAdaptermarshalledIFooServiceStreamVariableUsage"/>
    <variable name="iReceiverAdaptermarshalledIFooServiceStreamVariableUsageCharacterisation"/>
    <variable name="iReceiverAdaptermarshalledIFooServiceStreamVariableUsageStreamBYTESIZE"/>
    <variable name="iReceiverAdaptermarshalledIFooServiceStreamVariableUsageVariableReference"/>
    <variable name="receiverAdapterStopAction"/>
    <variable name="consumerPoolInterfaceReturnConsumer" variableExps="//@rule.13/@when/@predicate.4/@contitionExpression/@argument.2"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkAdapterRequiredRoles" referredRelation="//@rule.9">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.7"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.3"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.34"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.44"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.54"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.60"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.70"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.77"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.79"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.4"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.5"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:OperationCallExp" name="getMiddlewareSignature" referredOperation="//@ownedOperation.7">
            <arguments xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.51"/>
              <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="senderInterface"/>
            </arguments>
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.6"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.25"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:OperationCallExp" name="getMiddlewareSignature" referredOperation="//@ownedOperation.7">
            <arguments xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.51"/>
              <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="imom"/>
            </arguments>
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.6"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.53"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:OperationCallExp" name="getMiddlewareSignature" referredOperation="//@ownedOperation.7">
            <arguments xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.51"/>
              <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="ireceiver"/>
            </arguments>
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.6"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.69"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkConsumerPoolSignatures" referredRelation="//@rule.7">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.7"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.76"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.85"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semantics.model.expressions:OperationCallExp" name="isAnnotated" referredOperation="//@ownedOperation.1">
          <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.7"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="CopyIFooSignature" referredRelation="//@rule.1">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.7"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.19"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.20"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkMarshalledIFoo" referredRelation="//@rule.5">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.7"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.9"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="CreateAdapterComponents" referredRelation="//@rule.8">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.7"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.10"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.11"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.12"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.13"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.14"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.13/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CreateConsumerPoolSEFF" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.14/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.14/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.14/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotationElement" isCheckable="true" typedModel="//@modelParameter.2" rootVariable="//@rule.14/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.14/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.14/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="consumerPool" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.14/@variable.2">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.14/@variable.2">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPoolGetConsumerSEFF" bindsTo="//@rule.14/@variable.4">
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPoolInterfaceGetConsumer" bindsTo="//@rule.14/@variable.5"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="getConsumerStartAction" bindsTo="//@rule.14/@variable.6">
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="acquireConsumer" bindsTo="//@rule.14/@variable.7"/>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="acquireConsumer" bindsTo="//@rule.14/@variable.7">
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="getConsumerStartAction" bindsTo="//@rule.14/@variable.6"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="getConsumerStopAction" bindsTo="//@rule.14/@variable.8"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumer" bindsTo="//@rule.14/@variable.9"/>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="getConsumerStopAction" bindsTo="//@rule.14/@variable.8">
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="acquireConsumer" bindsTo="//@rule.14/@variable.7"/>
                  </part>
                </value>
              </part>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPoolReturnConsumerSEFF" bindsTo="//@rule.14/@variable.10">
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPoolInterfaceReturnConsumer" bindsTo="//@rule.14/@variable.11"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="returnConsumerStartAction" bindsTo="//@rule.14/@variable.12">
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="releaseConsumer" bindsTo="//@rule.14/@variable.13"/>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="releaseConsumer" bindsTo="//@rule.14/@variable.13">
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="returnConsumerStartAction" bindsTo="//@rule.14/@variable.12"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="returnConsumerStopAction" bindsTo="//@rule.14/@variable.14"/>
                  </part>
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumer" bindsTo="//@rule.14/@variable.9"/>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="returnConsumerStopAction" bindsTo="//@rule.14/@variable.14">
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="releaseConsumer" bindsTo="//@rule.14/@variable.13"/>
                  </part>
                </value>
              </part>
            </value>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="annotatedAssemblyConnector" variableExps="//@rule.14/@when/@predicate.0/@contitionExpression/@argument.0 //@rule.14/@when/@predicate.1/@contitionExpression/@argument.0 //@rule.14/@when/@predicate.2/@contitionExpression/@argument.0"/>
    <variable name="annotationElement"/>
    <variable name="consumerPool" variableExps="//@rule.14/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="idd" variableExps="//@rule.14/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.14/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <variable name="consumerPoolGetConsumerSEFF"/>
    <variable name="consumerPoolInterfaceGetConsumer" variableExps="//@rule.14/@when/@predicate.2/@contitionExpression/@argument.1"/>
    <variable name="getConsumerStartAction"/>
    <variable name="acquireConsumer"/>
    <variable name="getConsumerStopAction"/>
    <variable name="consumer" variableExps="//@rule.14/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <variable name="consumerPoolReturnConsumerSEFF"/>
    <variable name="consumerPoolInterfaceReturnConsumer" variableExps="//@rule.14/@when/@predicate.2/@contitionExpression/@argument.2"/>
    <variable name="returnConsumerStartAction"/>
    <variable name="releaseConsumer"/>
    <variable name="returnConsumerStopAction"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkConsumerPool" referredRelation="//@rule.11">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.14/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.14/@variable.2"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkConsumerPoolPool" referredRelation="//@rule.12">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.14/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.14/@variable.9"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkConsumerPoolSignatures" referredRelation="//@rule.7">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.14/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.14/@variable.5"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.14/@variable.11"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CreateCompletionRepository" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.15/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.15/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.15/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRepository" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.15/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.15/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="messagingCompletionAdapterRepository____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.15/@variable.2"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalling" bindsTo="//@rule.15/@variable.3"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapter" bindsTo="//@rule.15/@variable.4"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapter" bindsTo="//@rule.15/@variable.5"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapter" bindsTo="//@rule.15/@variable.6"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="deMarshalling" bindsTo="//@rule.15/@variable.7"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPool" bindsTo="//@rule.15/@variable.8"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalledIFoo" bindsTo="//@rule.15/@variable.9"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPoolInterface" bindsTo="//@rule.15/@variable.10"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="annotatedAssemblyConnector" variableExps="//@rule.15/@when/@predicate.0/@contitionExpression/@arguments.0 //@rule.15/@when/@predicate.1/@contitionExpression/@argument.0 //@rule.15/@when/@predicate.2/@contitionExpression/@argument.0 //@rule.15/@when/@predicate.3/@contitionExpression/@argument.0"/>
    <variable name="targetRepository"/>
    <variable name="annotatedAssemblyConnectorName" variableExps="//@rule.15/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.15/@domain.1/@pattern/@templateExpression/@part.0/@value/@arguments.0"/>
    <variable name="marshalling" variableExps="//@rule.15/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <variable name="senderAdapter" variableExps="//@rule.15/@when/@predicate.1/@contitionExpression/@argument.2"/>
    <variable name="momAdapter" variableExps="//@rule.15/@when/@predicate.1/@contitionExpression/@argument.3"/>
    <variable name="receiverAdapter" variableExps="//@rule.15/@when/@predicate.1/@contitionExpression/@argument.4"/>
    <variable name="deMarshalling" variableExps="//@rule.15/@when/@predicate.1/@contitionExpression/@argument.5"/>
    <variable name="consumerPool" variableExps="//@rule.15/@when/@predicate.1/@contitionExpression/@argument.6"/>
    <variable name="marshalledIFoo" variableExps="//@rule.15/@when/@predicate.3/@contitionExpression/@argument.1"/>
    <variable name="consumerPoolInterface" variableExps="//@rule.15/@when/@predicate.2/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semantics.model.expressions:OperationCallExp" name="isAnnotated" referredOperation="//@ownedOperation.1">
          <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.15/@variable.0"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="CreateAdapterComponents" referredRelation="//@rule.8">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.15/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.15/@variable.3"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.15/@variable.4"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.15/@variable.5"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.15/@variable.6"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.15/@variable.7"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.15/@variable.8"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="CreateConsumerPoolInterface" referredRelation="//@rule.6">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.15/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.15/@variable.10"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkMarshalledIFoo" referredRelation="//@rule.5">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.15/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.15/@variable.9"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CreateCompletionComponentRepository" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSystem" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.16/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.16/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="completionComponentRepository" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.16/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.16/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkCompletionComponentRepository" referredRelation="//@rule.17">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.16/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceSystem"/>
    <variable name="completionComponentRepository" variableExps="//@rule.16/@where/@predicate.0/@contitionExpression/@argument.0"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="MarkCompletionComponentRepository">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="completionComponentRepository" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.17/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.17/@variable.0"/>
      </pattern>
    </domain>
    <variable name="completionComponentRepository"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CompleteCompletionComponentRepository" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.18/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.18/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="completionComponentRepository" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.18/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.18/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="completionComponent" bindsTo="//@rule.18/@variable.3">
              <part>
                <value xsi:type="semantics.model.expressions:OperationCallExp">
                  <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="CompletionComponent___"/>
                  <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.2"/>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingAssemblyContext" bindsTo="//@rule.18/@variable.4"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterAssemblyContext" bindsTo="//@rule.18/@variable.5"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterAssemblyContext" bindsTo="//@rule.18/@variable.6"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterAssemblyContext" bindsTo="//@rule.18/@variable.7"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="deMarshallingAssemblyContext" bindsTo="//@rule.18/@variable.8"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPoolAssemblyContext" bindsTo="//@rule.18/@variable.9"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderToMarshalling" bindsTo="//@rule.18/@variable.10"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalligToSenderAdapter" bindsTo="//@rule.18/@variable.11"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterToMOMAdapter" bindsTo="//@rule.18/@variable.12"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterToReceiverAdapter" bindsTo="//@rule.18/@variable.13"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterToDeMarshalling" bindsTo="//@rule.18/@variable.14"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterToConsumerPool" bindsTo="//@rule.18/@variable.15"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="deMarshallingToReceiver" bindsTo="//@rule.18/@variable.16"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingToSenderMiddleware" bindsTo="//@rule.18/@variable.17"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterToSenderMiddleware" bindsTo="//@rule.18/@variable.18"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterToMessagingSystem" bindsTo="//@rule.18/@variable.19"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterToReceiverMiddleware" bindsTo="//@rule.18/@variable.20"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="deMarshallingToReceiverMiddleware" bindsTo="//@rule.18/@variable.21"/>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="completion_provided_communicationsInterface" bindsTo="//@rule.18/@variable.22">
                  <part>
                    <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="communicationsInterface" bindsTo="//@rule.18/@variable.23"/>
                  </part>
                </value>
              </part>
              <part>
                <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="completion_required_communicationsInterface" bindsTo="//@rule.18/@variable.24">
                  <part>
                    <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.23"/>
                  </part>
                </value>
              </part>
            </value>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="annotatedAssemblyConnector" variableExps="//@rule.18/@when/@predicate.0/@contitionExpression/@arguments.0 //@rule.18/@when/@predicate.2/@contitionExpression/@argument.0/@arguments.0 //@rule.18/@when/@predicate.3/@contitionExpression/@argument.0 //@rule.18/@when/@predicate.4/@contitionExpression/@argument.0"/>
    <variable name="completionComponentRepository" variableExps="//@rule.18/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="annotatedAssemblyConnectorName" variableExps="//@rule.18/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.18/@domain.1/@pattern/@templateExpression/@part.0/@value/@part.0/@value/@arguments.0"/>
    <variable name="completionComponent"/>
    <variable name="marshallingAssemblyContext" variableExps="//@rule.18/@when/@predicate.4/@contitionExpression/@argument.1"/>
    <variable name="senderAdapterAssemblyContext" variableExps="//@rule.18/@when/@predicate.4/@contitionExpression/@argument.2"/>
    <variable name="momAdapterAssemblyContext" variableExps="//@rule.18/@when/@predicate.4/@contitionExpression/@argument.3"/>
    <variable name="receiverAdapterAssemblyContext" variableExps="//@rule.18/@when/@predicate.4/@contitionExpression/@argument.4"/>
    <variable name="deMarshallingAssemblyContext" variableExps="//@rule.18/@when/@predicate.4/@contitionExpression/@argument.5"/>
    <variable name="consumerPoolAssemblyContext" variableExps="//@rule.18/@when/@predicate.4/@contitionExpression/@argument.6"/>
    <variable name="senderToMarshalling" variableExps="//@rule.18/@when/@predicate.3/@contitionExpression/@argument.1"/>
    <variable name="marshalligToSenderAdapter" variableExps="//@rule.18/@when/@predicate.3/@contitionExpression/@argument.2"/>
    <variable name="senderAdapterToMOMAdapter" variableExps="//@rule.18/@when/@predicate.3/@contitionExpression/@argument.3"/>
    <variable name="momAdapterToReceiverAdapter" variableExps="//@rule.18/@when/@predicate.3/@contitionExpression/@argument.4"/>
    <variable name="receiverAdapterToDeMarshalling" variableExps="//@rule.18/@when/@predicate.3/@contitionExpression/@argument.5"/>
    <variable name="receiverAdapterToConsumerPool" variableExps="//@rule.18/@when/@predicate.3/@contitionExpression/@argument.12"/>
    <variable name="deMarshallingToReceiver" variableExps="//@rule.18/@when/@predicate.3/@contitionExpression/@argument.6"/>
    <variable name="marshallingToSenderMiddleware" variableExps="//@rule.18/@when/@predicate.3/@contitionExpression/@argument.7"/>
    <variable name="senderAdapterToSenderMiddleware" variableExps="//@rule.18/@when/@predicate.3/@contitionExpression/@argument.8"/>
    <variable name="momAdapterToMessagingSystem" variableExps="//@rule.18/@when/@predicate.3/@contitionExpression/@argument.9"/>
    <variable name="receiverAdapterToReceiverMiddleware" variableExps="//@rule.18/@when/@predicate.3/@contitionExpression/@argument.10"/>
    <variable name="deMarshallingToReceiverMiddleware" variableExps="//@rule.18/@when/@predicate.3/@contitionExpression/@argument.11"/>
    <variable name="completion_provided_communicationsInterface"/>
    <variable name="communicationsInterface" variableExps="//@rule.18/@domain.1/@pattern/@templateExpression/@part.0/@value/@part.20/@value/@part.0/@value //@rule.18/@when/@predicate.2/@contitionExpression/@argument.1"/>
    <variable name="completion_required_communicationsInterface"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semantics.model.expressions:OperationCallExp" name="isAnnotated" referredOperation="//@ownedOperation.1">
          <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.0"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkCompletionComponentRepository" referredRelation="//@rule.17">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:OperationCallExp" name="findInterfaceFromAssemblyConnector" referredOperation="//@ownedOperation.3">
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.0"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.23"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="CreateAssemblyConnectors" referredRelation="//@rule.19">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.10"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.11"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.12"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.13"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.14"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.16"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.17"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.18"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.19"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.20"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.21"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.15"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="CreateAdapterAssemblyContexts" referredRelation="//@rule.20">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.4"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.5"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.6"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.7"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.8"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.18/@variable.9"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CreateAssemblyConnectors" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.19/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.19/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.13"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverProvidedRole" bindsTo="//@rule.19/@variable.14"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAssemblyContext" bindsTo="//@rule.19/@variable.15"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderRequiredRole" bindsTo="//@rule.19/@variable.16"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAssemblyContext" bindsTo="//@rule.19/@variable.17"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="senderToMarshalling" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.19/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.19/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Connector Assembly_Sender &lt;Sender> -> Assembly_Marshalling &lt;Marshalling>____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.13"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="copiedSenderAssemblyContext" bindsTo="//@rule.19/@variable.18"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingAssemblyContext" bindsTo="//@rule.19/@variable.19"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="copiedSenderRequiredIFoo" bindsTo="//@rule.19/@variable.20"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingProvidedIFoo" bindsTo="//@rule.19/@variable.21"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="marshallingToSenderAdapter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.19/@variable.2">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.19/@variable.2">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Connector Assembly_Marshalling &lt;Marshalling> -> Assembly_SenderAdapter &lt;SenderAdapter>____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.13"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingAssemblyContext" bindsTo="//@rule.19/@variable.19"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterAssemblyContext" bindsTo="//@rule.19/@variable.22"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingRequiredMarshalledIFoo" bindsTo="//@rule.19/@variable.23"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterProvidedMarshalledIFoo" bindsTo="//@rule.19/@variable.24"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="senderAdapterToMOMAdapter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.19/@variable.3">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.19/@variable.3">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Connector Assembly_SenderAdapter &lt;SenderAdapter> -> Assembly_MOMAdapter &lt;MOMAdapter>____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.13"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterAssemblyContext" bindsTo="//@rule.19/@variable.22"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterAssemblyContext" bindsTo="//@rule.19/@variable.25"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterRequiredMarshalledIFoo" bindsTo="//@rule.19/@variable.26"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterProvidedMarshalledIFoo" bindsTo="//@rule.19/@variable.27"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="momAdapterToReceiverAdapter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.19/@variable.4">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.19/@variable.4">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Connector Assembly_MOMAdapter &lt;MOMAdapter> -> Assembly_ReceiverAdapter &lt;RecevierAdapter>____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.13"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterAssemblyContext" bindsTo="//@rule.19/@variable.25"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterAssemblyContext" bindsTo="//@rule.19/@variable.28"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterRequiredMarshalledIFoo" bindsTo="//@rule.19/@variable.29"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterProvidedMarshalledIFoo" bindsTo="//@rule.19/@variable.30"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="receiverAdapterToDeMarshalling" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.19/@variable.5">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.19/@variable.5">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Connector Assembly_ReceiverAdapter &lt;ReceiverAdapter> -> Assembly_DeMarshalling &lt;DeMarshalling>____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.13"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterAssemblyContext" bindsTo="//@rule.19/@variable.28"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="deMarshallingAssemblyContext" bindsTo="//@rule.19/@variable.31"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterRequiredMarshalledIFoo" bindsTo="//@rule.19/@variable.32"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="deMarshallingProvidedMarshalledIFoo" bindsTo="//@rule.19/@variable.33"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="deMarshallingToReceiver" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.19/@variable.6">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.19/@variable.6">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Connector Assembly_DeMarshalling &lt;DeMarshalling> -> Assembly_Receiver &lt;Receiver>____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.13"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="deMarshallingAssemblyContext" bindsTo="//@rule.19/@variable.31"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="copiedReceiverAssemblyContext" bindsTo="//@rule.19/@variable.34"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="deMarshallingRequiredIFoo" bindsTo="//@rule.19/@variable.35"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="copiedReceiverProvidedIFoo" bindsTo="//@rule.19/@variable.36"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="marshallingToSenderMiddleware" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.19/@variable.7">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.19/@variable.7">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Connector AssemblyMarshalling &lt;Marshalling> -> Assembly_SenderMiddleware &lt;SenderMiddleware>____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.13"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingAssemblyContext" bindsTo="//@rule.19/@variable.19"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderMiddlewareAssemblyContext" bindsTo="//@rule.19/@variable.37"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingRequiredIMarshalling" bindsTo="//@rule.19/@variable.38"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderMiddlewareProvidedIMarshalling" bindsTo="//@rule.19/@variable.39"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="senderAdapterToSenderMiddleware" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.19/@variable.8">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.19/@variable.8">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Connector Assembly_SenderAdapter &lt;SenderAdapter> -> Assembly_SenderMiddleware &lt;SenderMiddleware>____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.13"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterAssemblyContext" bindsTo="//@rule.19/@variable.22"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderMiddlewareAssemblyContext" bindsTo="//@rule.19/@variable.37"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterRequiredISender" bindsTo="//@rule.19/@variable.40"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderMiddlewareProvidedISender" bindsTo="//@rule.19/@variable.41"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="momAdapterToMessagingSystem" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.19/@variable.9">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.19/@variable.9">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Connector Assembly_MOMAdapter &lt;MOMAdapter> -> Assembly_MessagingSystem &lt;MessagingSystem>____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.13"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterAssemblyContext" bindsTo="//@rule.19/@variable.25"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="messagingSystemAssemblyContext" bindsTo="//@rule.19/@variable.42"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterRequiredIMom" bindsTo="//@rule.19/@variable.43"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="MessagingSystemProvidedIMom" bindsTo="//@rule.19/@variable.44"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="receiverAdapterToReceiverMiddleware" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.19/@variable.10">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.19/@variable.10">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Connector Assembly_RevceiverAdapter &lt;ReceiverAdapter> -> Assembly_ReceiverMiddleware &lt;ReceiverMiddleware>____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.13"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterAssemblyContext" bindsTo="//@rule.19/@variable.28"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverMiddlewareAssemblyContext" bindsTo="//@rule.19/@variable.45"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterRequiredIReceiver" bindsTo="//@rule.19/@variable.46"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverMiddlewareProvidedIReceiver" bindsTo="//@rule.19/@variable.47"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="deMarshallingToReceiverMiddleware" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.19/@variable.11">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.19/@variable.11">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Connector Assembly_DeMarshalling &lt;DeMarshalling> -> Assembly_ReceiverMiddleware &lt;ReceiverMiddleware>____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.13"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="deMarshallingAssemblyContext" bindsTo="//@rule.19/@variable.31"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverMiddlewareAssemblyContext" bindsTo="//@rule.19/@variable.45"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="deMarshallingRequiredIMarshalling" bindsTo="//@rule.19/@variable.48"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverMiddlewareProvidedIMarshalling" bindsTo="//@rule.19/@variable.49"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="receiverAdapterToConsumerPool" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.19/@variable.12">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.19/@variable.12">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Connector Assembly_RevceiverAdapter &lt;ReceiverAdapter> -> Assembly_ConsumerPool &lt;ConsumerPool>____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.13"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterAssemblyContext" bindsTo="//@rule.19/@variable.28"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPoolAssemblyContext" bindsTo="//@rule.19/@variable.50"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterRequiredIConsumerPool" bindsTo="//@rule.19/@variable.51"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPoolProvidedIConsumerPool" bindsTo="//@rule.19/@variable.52"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="annotatedAssemblyConnector" variableExps="//@rule.19/@when/@predicate.0/@contitionExpression/@arguments.0 //@rule.19/@when/@predicate.1/@contitionExpression/@argument.0 //@rule.19/@when/@predicate.2/@contitionExpression/@argument.0 //@rule.19/@when/@predicate.8/@contitionExpression/@argument.0"/>
    <variable name="senderToMarshalling"/>
    <variable name="marshallingToSenderAdapter"/>
    <variable name="senderAdapterToMOMAdapter"/>
    <variable name="momAdapterToReceiverAdapter"/>
    <variable name="receiverAdapterToDeMarshalling"/>
    <variable name="deMarshallingToReceiver"/>
    <variable name="marshallingToSenderMiddleware"/>
    <variable name="senderAdapterToSenderMiddleware"/>
    <variable name="momAdapterToMessagingSystem"/>
    <variable name="receiverAdapterToReceiverMiddleware"/>
    <variable name="deMarshallingToReceiverMiddleware"/>
    <variable name="receiverAdapterToConsumerPool"/>
    <variable name="annotatedAssemblyConnectorName" variableExps="//@rule.19/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.19/@domain.1/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.19/@domain.2/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.19/@domain.3/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.19/@domain.4/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.19/@domain.5/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.19/@domain.6/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.19/@domain.7/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.19/@domain.8/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.19/@domain.9/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.19/@domain.10/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.19/@domain.11/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.19/@domain.12/@pattern/@templateExpression/@part.0/@value/@arguments.0"/>
    <variable name="receiverProvidedRole" variableExps="//@rule.19/@when/@predicate.12/@contitionExpression/@argument.0"/>
    <variable name="receiverAssemblyContext" variableExps="//@rule.19/@when/@predicate.14/@contitionExpression/@argument.0"/>
    <variable name="senderRequiredRole" variableExps="//@rule.19/@when/@predicate.13/@contitionExpression/@argument.0"/>
    <variable name="senderAssemblyContext" variableExps="//@rule.19/@when/@predicate.15/@contitionExpression/@argument.0"/>
    <variable name="copiedSenderAssemblyContext" variableExps="//@rule.19/@when/@predicate.15/@contitionExpression/@argument.1"/>
    <variable name="marshallingAssemblyContext" variableExps="//@rule.19/@when/@predicate.8/@contitionExpression/@argument.1"/>
    <variable name="copiedSenderRequiredIFoo" variableExps="//@rule.19/@when/@predicate.13/@contitionExpression/@argument.1"/>
    <variable name="marshallingProvidedIFoo" variableExps="//@rule.19/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <variable name="senderAdapterAssemblyContext" variableExps="//@rule.19/@when/@predicate.8/@contitionExpression/@argument.2"/>
    <variable name="marshallingRequiredMarshalledIFoo" variableExps="//@rule.19/@when/@predicate.2/@contitionExpression/@argument.2"/>
    <variable name="senderAdapterProvidedMarshalledIFoo" variableExps="//@rule.19/@when/@predicate.1/@contitionExpression/@argument.2"/>
    <variable name="momAdapterAssemblyContext" variableExps="//@rule.19/@when/@predicate.8/@contitionExpression/@argument.3"/>
    <variable name="senderAdapterRequiredMarshalledIFoo" variableExps="//@rule.19/@when/@predicate.2/@contitionExpression/@argument.4"/>
    <variable name="momAdapterProvidedMarshalledIFoo" variableExps="//@rule.19/@when/@predicate.1/@contitionExpression/@argument.3"/>
    <variable name="receiverAdapterAssemblyContext" variableExps="//@rule.19/@when/@predicate.8/@contitionExpression/@argument.4"/>
    <variable name="momAdapterRequiredMarshalledIFoo" variableExps="//@rule.19/@when/@predicate.2/@contitionExpression/@argument.6"/>
    <variable name="receiverAdapterProvidedMarshalledIFoo" variableExps="//@rule.19/@when/@predicate.1/@contitionExpression/@argument.4"/>
    <variable name="deMarshallingAssemblyContext" variableExps="//@rule.19/@when/@predicate.8/@contitionExpression/@argument.5"/>
    <variable name="receiverAdapterRequiredMarshalledIFoo" variableExps="//@rule.19/@when/@predicate.2/@contitionExpression/@argument.9"/>
    <variable name="deMarshallingProvidedMarshalledIFoo" variableExps="//@rule.19/@when/@predicate.1/@contitionExpression/@argument.5"/>
    <variable name="copiedReceiverAssemblyContext" variableExps="//@rule.19/@when/@predicate.14/@contitionExpression/@argument.1"/>
    <variable name="deMarshallingRequiredIFoo" variableExps="//@rule.19/@when/@predicate.2/@contitionExpression/@argument.11"/>
    <variable name="copiedReceiverProvidedIFoo" variableExps="//@rule.19/@when/@predicate.12/@contitionExpression/@argument.1"/>
    <variable name="senderMiddlewareAssemblyContext" variableExps="//@rule.19/@when/@predicate.9/@contitionExpression/@argument.1"/>
    <variable name="marshallingRequiredIMarshalling" variableExps="//@rule.19/@when/@predicate.2/@contitionExpression/@argument.1"/>
    <variable name="senderMiddlewareProvidedIMarshalling" variableExps="//@rule.19/@when/@predicate.3/@contitionExpression/@argument.1"/>
    <variable name="senderAdapterRequiredISender" variableExps="//@rule.19/@when/@predicate.2/@contitionExpression/@argument.3"/>
    <variable name="senderMiddlewareProvidedISender" variableExps="//@rule.19/@when/@predicate.4/@contitionExpression/@argument.1"/>
    <variable name="messagingSystemAssemblyContext" variableExps="//@rule.19/@when/@predicate.10/@contitionExpression/@argument.1"/>
    <variable name="momAdapterRequiredIMom" variableExps="//@rule.19/@when/@predicate.2/@contitionExpression/@argument.5"/>
    <variable name="MessagingSystemProvidedIMom" variableExps="//@rule.19/@when/@predicate.5/@contitionExpression/@argument.1"/>
    <variable name="receiverMiddlewareAssemblyContext" variableExps="//@rule.19/@when/@predicate.11/@contitionExpression/@argument.1"/>
    <variable name="receiverAdapterRequiredIReceiver" variableExps="//@rule.19/@when/@predicate.2/@contitionExpression/@argument.7"/>
    <variable name="receiverMiddlewareProvidedIReceiver" variableExps="//@rule.19/@when/@predicate.6/@contitionExpression/@argument.1"/>
    <variable name="deMarshallingRequiredIMarshalling" variableExps="//@rule.19/@when/@predicate.2/@contitionExpression/@argument.10"/>
    <variable name="receiverMiddlewareProvidedIMarshalling" variableExps="//@rule.19/@when/@predicate.7/@contitionExpression/@argument.1"/>
    <variable name="consumerPoolAssemblyContext" variableExps="//@rule.19/@when/@predicate.3/@contitionExpression/@argument.0/@source //@rule.19/@when/@predicate.4/@contitionExpression/@argument.0/@source //@rule.19/@when/@predicate.5/@contitionExpression/@argument.0/@source //@rule.19/@when/@predicate.6/@contitionExpression/@argument.0/@source //@rule.19/@when/@predicate.7/@contitionExpression/@argument.0/@source //@rule.19/@when/@predicate.8/@contitionExpression/@argument.6 //@rule.19/@when/@predicate.9/@contitionExpression/@argument.0/@source //@rule.19/@when/@predicate.10/@contitionExpression/@argument.0/@source //@rule.19/@when/@predicate.11/@contitionExpression/@argument.0/@source"/>
    <variable name="receiverAdapterRequiredIConsumerPool" variableExps="//@rule.19/@when/@predicate.2/@contitionExpression/@argument.8"/>
    <variable name="consumerPoolProvidedIConsumerPool" variableExps="//@rule.19/@when/@predicate.1/@contitionExpression/@argument.6"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semantics.model.expressions:OperationCallExp" name="isAnnotated" referredOperation="//@ownedOperation.1">
          <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.0"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkAdapterProvidedRoles" referredRelation="//@rule.10">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.21"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.24"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.27"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.30"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.33"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.52"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="MarkAdapterRequiredRoles" referredRelation="//@rule.9">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.38"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.23"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.40"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.26"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.43"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.29"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.46"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.51"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.32"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.48"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.35"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ProvidedRole" referredRelation="//@rule.83">
          <argument xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.50"/>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="senderIMarshalling"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.39"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ProvidedRole" referredRelation="//@rule.83">
          <argument xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.50"/>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="senderISender"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.41"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ProvidedRole" referredRelation="//@rule.83">
          <argument xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.50"/>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="messagingSystemIMom"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.44"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ProvidedRole" referredRelation="//@rule.83">
          <argument xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.50"/>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="receiverIReceiver"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.47"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ProvidedRole" referredRelation="//@rule.83">
          <argument xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.50"/>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="receiverIMarshalling"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.49"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="CreateAdapterAssemblyContexts" referredRelation="//@rule.20">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.19"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.22"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.25"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.28"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.31"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.50"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.50"/>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="sender"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.37"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.50"/>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="messagingSystem"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.42"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.50"/>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="receiver"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.45"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ProvidedRole" referredRelation="//@rule.83">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.14"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.36"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_RequiredRole" referredRelation="//@rule.52">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.16"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.20"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.15"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.34"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.17"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.19/@variable.18"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CreateAdapterAssemblyContexts" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.20/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.20/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.20/@variable.7"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="marshallingAssemblyContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.20/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.20/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Assembly_Marshalling____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.20/@variable.7"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshalling" bindsTo="//@rule.20/@variable.8"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="senderAdapterAssemblyContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.20/@variable.2">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.20/@variable.2">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Assembly_SenderAdapter____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.20/@variable.7"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapter" bindsTo="//@rule.20/@variable.9"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="momAdapterAssemblyContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.20/@variable.3">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.20/@variable.3">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Assembly_MOMAdapter____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.20/@variable.7"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapter" bindsTo="//@rule.20/@variable.10"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="receiverAdapterAssemblyContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.20/@variable.4">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.20/@variable.4">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Assembly_ReceiverAdapter____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.20/@variable.7"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapter" bindsTo="//@rule.20/@variable.11"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="deMarshallingAssemblyContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.20/@variable.5">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.20/@variable.5">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Assembly_DeMarshalling____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.20/@variable.7"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="deMarshalling" bindsTo="//@rule.20/@variable.12"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="consumerPoolAssemblyContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.20/@variable.6">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.20/@variable.6">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Assembly_ConsumerPool____"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.20/@variable.7"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPool" bindsTo="//@rule.20/@variable.13"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="annotatedAssemblyConnector" variableExps="//@rule.20/@when/@predicate.0/@contitionExpression/@arguments.0 //@rule.20/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="marshallingAssemblyContext"/>
    <variable name="senderAdapterAssemblyContext"/>
    <variable name="momAdapterAssemblyContext"/>
    <variable name="receiverAdapterAssemblyContext"/>
    <variable name="deMarshallingAssemblyContext"/>
    <variable name="consumerPoolAssemblyContext"/>
    <variable name="annotatedAssemblyConnectorName" variableExps="//@rule.20/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.20/@domain.1/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.20/@domain.2/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.20/@domain.3/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.20/@domain.4/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.20/@domain.5/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.20/@domain.6/@pattern/@templateExpression/@part.0/@value/@arguments.0"/>
    <variable name="marshalling" variableExps="//@rule.20/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <variable name="senderAdapter" variableExps="//@rule.20/@when/@predicate.1/@contitionExpression/@argument.2"/>
    <variable name="momAdapter" variableExps="//@rule.20/@when/@predicate.1/@contitionExpression/@argument.3"/>
    <variable name="receiverAdapter" variableExps="//@rule.20/@when/@predicate.1/@contitionExpression/@argument.4"/>
    <variable name="deMarshalling" variableExps="//@rule.20/@when/@predicate.1/@contitionExpression/@argument.5"/>
    <variable name="consumerPool" variableExps="//@rule.20/@when/@predicate.1/@contitionExpression/@argument.6"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semantics.model.expressions:OperationCallExp" name="isAnnotated" referredOperation="//@ownedOperation.1">
          <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.20/@variable.0"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="CreateAdapterComponents" referredRelation="//@rule.8">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.20/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.20/@variable.8"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.20/@variable.9"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.20/@variable.10"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.20/@variable.11"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.20/@variable.12"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.20/@variable.13"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CompleteAllocation" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.21/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.21/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="originalAllocation" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.21/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.21/@variable.1"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="copiedAllocation" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.21/@variable.2">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.21/@variable.2">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingAllocationContext" bindsTo="//@rule.21/@variable.3"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterAllocationContext" bindsTo="//@rule.21/@variable.4"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterAllocationContext" bindsTo="//@rule.21/@variable.5"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterAllocationContext" bindsTo="//@rule.21/@variable.6"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="deMarshallingAllocationContext" bindsTo="//@rule.21/@variable.7"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPoolAllocationContext" bindsTo="//@rule.21/@variable.8"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="annotatedAssemblyConnector" variableExps="//@rule.21/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="originalAllocation" variableExps="//@rule.21/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="copiedAllocation" variableExps="//@rule.21/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="marshallingAllocationContext" variableExps="//@rule.21/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <variable name="senderAdapterAllocationContext" variableExps="//@rule.21/@when/@predicate.1/@contitionExpression/@argument.2"/>
    <variable name="momAdapterAllocationContext" variableExps="//@rule.21/@when/@predicate.1/@contitionExpression/@argument.3"/>
    <variable name="receiverAdapterAllocationContext" variableExps="//@rule.21/@when/@predicate.1/@contitionExpression/@argument.4"/>
    <variable name="deMarshallingAllocationContext" variableExps="//@rule.21/@when/@predicate.1/@contitionExpression/@argument.5"/>
    <variable name="consumerPoolAllocationContext" variableExps="//@rule.21/@when/@predicate.1/@contitionExpression/@argument.6"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_allocation_Allocation" referredRelation="//@rule.136">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.21/@variable.1"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.21/@variable.2"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="CreateAdapterAllocationContexts" referredRelation="//@rule.22">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.21/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.21/@variable.3"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.21/@variable.4"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.21/@variable.5"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.21/@variable.6"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.21/@variable.7"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.21/@variable.8"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CreateAdapterAllocationContexts" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="annotatedAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.22/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.22/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.7"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="marshallingAllocationContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.22/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.22/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Allocation_Assembly_Marshalling___"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.7"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="marshallingAssemblyContext" bindsTo="//@rule.22/@variable.8"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderResourceContainer" bindsTo="//@rule.22/@variable.9"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="senderAdapterAllocationContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.22/@variable.2">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.22/@variable.2">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Allocation_Assembly_SenderAdapter___"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.7"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderAdapterAssemblyContext" bindsTo="//@rule.22/@variable.10"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="senderResourceContainer" bindsTo="//@rule.22/@variable.9"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="momAdapterAllocationContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.22/@variable.3">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.22/@variable.3">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Allocation_Assembly_MomAdapter___"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.7"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="momAdapterAssemblyContext" bindsTo="//@rule.22/@variable.11"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="messagingSystemResourceContainer" bindsTo="//@rule.22/@variable.12"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="recevierAdapterAllocationContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.22/@variable.4">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.22/@variable.4">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Allocation_Assembly_ReceiverAdapter___"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.7"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverAdapterAssemblyContext" bindsTo="//@rule.22/@variable.13"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverResourceContainer" bindsTo="//@rule.22/@variable.14"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="deMarshallingAllocationContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.22/@variable.5">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.22/@variable.5">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Allocation_Assembly_DeMarshalling___"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.7"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="deMarshallingAssemblyContext" bindsTo="//@rule.22/@variable.15"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverResourceContainer" bindsTo="//@rule.22/@variable.14"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="consumerPoolAllocationContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.22/@variable.6">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.22/@variable.6">
          <part>
            <value xsi:type="semantics.model.expressions:OperationCallExp">
              <source xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="Allocation_Assembly_ConsumerPool___"/>
              <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.7"/>
            </value>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="consumerPoolAssemblyContext" bindsTo="//@rule.22/@variable.16"/>
          </part>
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="receiverResourceContainer" bindsTo="//@rule.22/@variable.14"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="annotatedAssemblyConnector" variableExps="//@rule.22/@when/@predicate.0/@contitionExpression/@argument.0 //@rule.22/@when/@predicate.2/@contitionExpression/@argument.0/@arguments.0 //@rule.22/@when/@predicate.3/@contitionExpression/@argument.0/@arguments.0"/>
    <variable name="marshallingAllocationContext"/>
    <variable name="senderAdapterAllocationContext"/>
    <variable name="momAdapterAllocationContext"/>
    <variable name="recevierAdapterAllocationContext"/>
    <variable name="deMarshallingAllocationContext"/>
    <variable name="consumerPoolAllocationContext"/>
    <variable name="annotatedAssemblyConnectorName" variableExps="//@rule.22/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.22/@domain.1/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.22/@domain.2/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.22/@domain.3/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.22/@domain.4/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.22/@domain.5/@pattern/@templateExpression/@part.0/@value/@arguments.0 //@rule.22/@domain.6/@pattern/@templateExpression/@part.0/@value/@arguments.0"/>
    <variable name="marshallingAssemblyContext" variableExps="//@rule.22/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="senderResourceContainer" variableExps="//@rule.22/@when/@predicate.2/@contitionExpression/@argument.1"/>
    <variable name="senderAdapterAssemblyContext" variableExps="//@rule.22/@when/@predicate.0/@contitionExpression/@argument.2"/>
    <variable name="momAdapterAssemblyContext" variableExps="//@rule.22/@when/@predicate.0/@contitionExpression/@argument.3"/>
    <variable name="messagingSystemResourceContainer" variableExps="//@rule.22/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <variable name="receiverAdapterAssemblyContext" variableExps="//@rule.22/@when/@predicate.0/@contitionExpression/@argument.4"/>
    <variable name="receiverResourceContainer" variableExps="//@rule.22/@when/@predicate.3/@contitionExpression/@argument.1"/>
    <variable name="deMarshallingAssemblyContext" variableExps="//@rule.22/@when/@predicate.0/@contitionExpression/@argument.5"/>
    <variable name="consumerPoolAssemblyContext" variableExps="//@rule.22/@when/@predicate.0/@contitionExpression/@argument.6"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="CreateAdapterAssemblyContexts" referredRelation="//@rule.20">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.8"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.10"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.11"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.13"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.15"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.16"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ResourceContainer" referredRelation="//@rule.146">
          <argument xsi:type="semantics.model.expressions:OperationCallExp" name="getMiddlewareResourceContainer" referredOperation="//@ownedOperation.10"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.12"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ResourceContainer" referredRelation="//@rule.146">
          <argument xsi:type="semantics.model.expressions:OperationCallExp" name="getSenderResourceContainer" referredOperation="//@ownedOperation.11">
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.0"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.9"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ResourceContainer" referredRelation="//@rule.146">
          <argument xsi:type="semantics.model.expressions:OperationCallExp" name="getReceiverResourceContainer" referredOperation="//@ownedOperation.12">
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.0"/>
          </argument>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.22/@variable.14"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_completions_CompletionRepository">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompletionRepository" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.23/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.23/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompletionRepository" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.23/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.23/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceCompletionRepository"/>
    <variable name="targetCompletionRepository"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_completions_CompletionRepository" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompletionRepository" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.24/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.24/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompletionRepository" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.24/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.24/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_completions_CompletionRepository" referredRelation="//@rule.23">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.24/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.24/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCompletionRepository" variableExps="//@rule.24/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCompletionRepository" variableExps="//@rule.24/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_identifier_Identifier">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceIdentifier" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.25/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.25/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetIdentifier" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.25/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.25/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceIdentifier"/>
    <variable name="targetIdentifier"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_entity_NamedElement">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceNamedElement" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.26/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.26/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetNamedElement" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.26/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.26/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceNamedElement"/>
    <variable name="targetNamedElement"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_entity_Entity">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceEntity" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.27/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.27/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetEntity" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.27/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.27/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_identifier_Identifier" referredRelation="//@rule.25">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.27/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.27/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_NamedElement" referredRelation="//@rule.26">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.27/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.27/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceEntity" variableExps="//@rule.27/@where/@predicate.0/@contitionExpression/@argument.0 //@rule.27/@where/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="targetEntity" variableExps="//@rule.27/@where/@predicate.0/@contitionExpression/@argument.1 //@rule.27/@where/@predicate.1/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_entity_InterfaceProvidingEntity">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInterfaceProvidingEntity" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.28/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.28/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInterfaceProvidingEntity" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.28/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.28/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.28/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.28/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceInterfaceProvidingEntity" variableExps="//@rule.28/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInterfaceProvidingEntity" variableExps="//@rule.28/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_entity_InterfaceRequiringEntity">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInterfaceRequiringEntity" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.29/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.29/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInterfaceRequiringEntity" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.29/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.29/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.29/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.29/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceInterfaceRequiringEntity" variableExps="//@rule.29/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInterfaceRequiringEntity" variableExps="//@rule.29/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_entity_ResourceInterfaceRequiringEntity">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceInterfaceRequiringEntity" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.30/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.30/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceInterfaceRequiringEntity" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.30/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.30/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.30/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.30/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceResourceInterfaceRequiringEntity" variableExps="//@rule.30/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceInterfaceRequiringEntity" variableExps="//@rule.30/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_entity_InterfaceProvidingRequiringEntity">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInterfaceProvidingRequiringEntity" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.31/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.31/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInterfaceProvidingRequiringEntity" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.31/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.31/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_InterfaceProvidingEntity" referredRelation="//@rule.28">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.31/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.31/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_InterfaceRequiringEntity" referredRelation="//@rule.29">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.31/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.31/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_ResourceInterfaceRequiringEntity" referredRelation="//@rule.30">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.31/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.31/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceInterfaceProvidingRequiringEntity" variableExps="//@rule.31/@where/@predicate.0/@contitionExpression/@argument.0 //@rule.31/@where/@predicate.1/@contitionExpression/@argument.0 //@rule.31/@where/@predicate.2/@contitionExpression/@argument.0"/>
    <variable name="targetInterfaceProvidingRequiringEntity" variableExps="//@rule.31/@where/@predicate.0/@contitionExpression/@argument.1 //@rule.31/@where/@predicate.1/@contitionExpression/@argument.1 //@rule.31/@where/@predicate.2/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_connectors_Connector">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.32/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.32/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetConnector" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.32/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.32/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.32/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.32/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceConnector" variableExps="//@rule.32/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetConnector" variableExps="//@rule.32/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_composition_AssemblyContext">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAssemblyContext" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.33/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.33/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAssemblyContext" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.33/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.33/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.33/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.33/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceAssemblyContext" variableExps="//@rule.33/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAssemblyContext" variableExps="//@rule.33/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_composition_AssemblyContext" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAssemblyContext" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.34/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.34/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAssemblyContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.34/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.34/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.34/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.34/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceAssemblyContext" variableExps="//@rule.34/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAssemblyContext" variableExps="//@rule.34/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_composition_AssemblyConnector">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.35/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.35/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.35/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.35/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_connectors_Connector" referredRelation="//@rule.32">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.35/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.35/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceAssemblyConnector" variableExps="//@rule.35/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAssemblyConnector" variableExps="//@rule.35/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_composition_AssemblyConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.36/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.36/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAssemblyConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.36/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.36/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyConnector" referredRelation="//@rule.35">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.36/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.36/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceAssemblyConnector" variableExps="//@rule.36/@when/@predicate.0/@contitionExpression/@source/@arguments.0 //@rule.36/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAssemblyConnector" variableExps="//@rule.36/@where/@predicate.0/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semantics.model.expressions:OperationCallExp" name="not">
          <source xsi:type="semantics.model.expressions:OperationCallExp" name="isAnnotated" referredOperation="//@ownedOperation.1">
            <arguments xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.36/@variable.0"/>
          </source>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_composition_ResourceRequiredDelegationConnector">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceRequiredDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.37/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.37/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceRequiredDelegationConnector" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.37/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.37/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceResourceRequiredDelegationConnector"/>
    <variable name="targetResourceRequiredDelegationConnector"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_composition_ResourceRequiredDelegationConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceRequiredDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.38/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.38/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceRequiredDelegationConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.38/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.38/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ResourceRequiredDelegationConnector" referredRelation="//@rule.37">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.38/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.38/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceResourceRequiredDelegationConnector" variableExps="//@rule.38/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceRequiredDelegationConnector" variableExps="//@rule.38/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_composition_ComposedStructure">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceComposedStructure" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.39/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.39/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetComposedStructure" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.39/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.39/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.39/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.39/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceComposedStructure" variableExps="//@rule.39/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetComposedStructure" variableExps="//@rule.39/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_entity_ComposedProvidingRequiringEntity">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceComposedProvidingRequiringEntity" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.40/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.40/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetComposedProvidingRequiringEntity" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.40/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.40/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ComposedStructure" referredRelation="//@rule.39">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.40/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.40/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_InterfaceProvidingRequiringEntity" referredRelation="//@rule.31">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.40/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.40/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceComposedProvidingRequiringEntity" variableExps="//@rule.40/@where/@predicate.0/@contitionExpression/@argument.0 //@rule.40/@where/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="targetComposedProvidingRequiringEntity" variableExps="//@rule.40/@where/@predicate.0/@contitionExpression/@argument.1 //@rule.40/@where/@predicate.1/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_PassiveResource">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourcePassiveResource" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.41/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.41/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetPassiveResource" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.41/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.41/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.41/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.41/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourcePassiveResource" variableExps="//@rule.41/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetPassiveResource" variableExps="//@rule.41/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_repository_PassiveResource" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourcePassiveResource" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.42/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.42/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetPassiveResource" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.42/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.42/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_PassiveResource" referredRelation="//@rule.41">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.42/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.42/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourcePassiveResource" variableExps="//@rule.42/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetPassiveResource" variableExps="//@rule.42/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_Signature">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSignature" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.43/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.43/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSignature" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.43/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.43/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceSignature"/>
    <variable name="targetSignature"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_repository_Signature" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSignature" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.44/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.44/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSignature" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.44/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.44/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.44/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.44/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceSignature" variableExps="//@rule.44/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSignature" variableExps="//@rule.44/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_Parameter">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParameter" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.45/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.45/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParameter" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.45/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.45/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceParameter"/>
    <variable name="targetParameter"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_repository_Parameter" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParameter" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.46/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.46/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParameter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.46/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.46/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Parameter" referredRelation="//@rule.45">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.46/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.46/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceParameter" variableExps="//@rule.46/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetParameter" variableExps="//@rule.46/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_DataType">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceDataType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.47/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.47/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetDataType" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.47/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.47/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceDataType"/>
    <variable name="targetDataType"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_Repository">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRepository" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.48/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.48/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRepository" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.48/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.48/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.48/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.48/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceRepository" variableExps="//@rule.48/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRepository" variableExps="//@rule.48/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_repository_Repository" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRepository" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.49/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.49/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.49/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRepository" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.49/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.49/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Repository" referredRelation="//@rule.48">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.49/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.49/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceRepository" variableExps="//@rule.49/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRepository" variableExps="//@rule.49/@where/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="repId" variableExps="//@rule.49/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.49/@when/@predicate.0/@contitionExpression/@source/@source"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semantics.model.expressions:OperationCallExp" name="not">
          <source xsi:type="semantics.model.expressions:OperationCallExp">
            <source xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.49/@variable.2"/>
            <arguments xsi:type="semantics.model.expressions:StringLiteralExp" stringSymbol="_Ls3VgHv_Edub45jJKtm_Dg"/>
          </source>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_RepositoryComponent">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRepositoryComponent" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.50/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.50/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRepositoryComponent" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.50/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.50/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_InterfaceProvidingRequiringEntity" referredRelation="//@rule.31">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.50/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.50/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceRepositoryComponent" variableExps="//@rule.50/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRepositoryComponent" variableExps="//@rule.50/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_Role">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRole" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.51/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.51/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRole" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.51/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.51/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.51/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.51/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceRole" variableExps="//@rule.51/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRole" variableExps="//@rule.51/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_RequiredRole">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRequiredRole" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.52/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.52/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRequiredRole" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.52/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.52/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Role" referredRelation="//@rule.51">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.52/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.52/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceRequiredRole" variableExps="//@rule.52/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRequiredRole" variableExps="//@rule.52/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_repository_RequiredRole" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRequiredRole" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.53/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.53/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRequiredRole" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.53/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.53/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_RequiredRole" referredRelation="//@rule.52">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.53/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.53/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceRequiredRole" variableExps="//@rule.53/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRequiredRole" variableExps="//@rule.53/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_Interface">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInterface" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.54/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.54/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInterface" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.54/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.54/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.54/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.54/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceInterface" variableExps="//@rule.54/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInterface" variableExps="//@rule.54/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_repository_Interface" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInterface" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.55/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.55/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInterface" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.55/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.55/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.55/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.55/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceInterface" variableExps="//@rule.55/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInterface" variableExps="//@rule.55/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_ResourceRequiredRole">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceRequiredRole" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.56/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.56/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceRequiredRole" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.56/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.56/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Role" referredRelation="//@rule.51">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.56/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.56/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceResourceRequiredRole" variableExps="//@rule.56/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceRequiredRole" variableExps="//@rule.56/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_repository_ResourceRequiredRole" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceRequiredRole" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.57/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.57/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceRequiredRole" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.57/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.57/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ResourceRequiredRole" referredRelation="//@rule.56">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.57/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.57/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceResourceRequiredRole" variableExps="//@rule.57/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceRequiredRole" variableExps="//@rule.57/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_ExceptionType">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceExceptionType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.58/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.58/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetExceptionType" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.58/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.58/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceExceptionType"/>
    <variable name="targetExceptionType"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_repository_ExceptionType" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceExceptionType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.59/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.59/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetExceptionType" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.59/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.59/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ExceptionType" referredRelation="//@rule.58">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.59/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.59/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceExceptionType" variableExps="//@rule.59/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetExceptionType" variableExps="//@rule.59/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_ProvidesComponentType">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProvidesComponentType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.60/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.60/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProvidesComponentType" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.60/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.60/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_RepositoryComponent" referredRelation="//@rule.50">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.60/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.60/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProvidesComponentType" variableExps="//@rule.60/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProvidesComponentType" variableExps="//@rule.60/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_repository_ProvidesComponentType" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProvidesComponentType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.61/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.61/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProvidesComponentType" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.61/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.61/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ProvidesComponentType" referredRelation="//@rule.60">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.61/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.61/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProvidesComponentType" variableExps="//@rule.61/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProvidesComponentType" variableExps="//@rule.61/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_ImplementationComponentType">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceImplementationComponentType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.62/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.62/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetImplementationComponentType" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.62/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.62/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_RepositoryComponent" referredRelation="//@rule.50">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.62/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.62/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceImplementationComponentType" variableExps="//@rule.62/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetImplementationComponentType" variableExps="//@rule.62/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_completions_Completion">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompletion" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.63/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.63/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompletion" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.63/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.63/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_ComposedProvidingRequiringEntity" referredRelation="//@rule.40">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.63/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.63/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ImplementationComponentType" referredRelation="//@rule.62">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.63/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.63/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCompletion" variableExps="//@rule.63/@where/@predicate.0/@contitionExpression/@argument.0 //@rule.63/@where/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="targetCompletion" variableExps="//@rule.63/@where/@predicate.0/@contitionExpression/@argument.1 //@rule.63/@where/@predicate.1/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_completions_Completion" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompletion" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.64/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.64/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompletion" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.64/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.64/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_completions_Completion" referredRelation="//@rule.63">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.64/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.64/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCompletion" variableExps="//@rule.64/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCompletion" variableExps="//@rule.64/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_CompleteComponentType">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompleteComponentType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.65/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.65/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompleteComponentType" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.65/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.65/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_RepositoryComponent" referredRelation="//@rule.50">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.65/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.65/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCompleteComponentType" variableExps="//@rule.65/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCompleteComponentType" variableExps="//@rule.65/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_repository_CompleteComponentType" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompleteComponentType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.66/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.66/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompleteComponentType" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.66/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.66/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_CompleteComponentType" referredRelation="//@rule.65">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.66/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.66/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCompleteComponentType" variableExps="//@rule.66/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCompleteComponentType" variableExps="//@rule.66/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_DelegationConnector">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.67/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.67/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetDelegationConnector" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.67/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.67/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_connectors_Connector" referredRelation="//@rule.32">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.67/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.67/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceDelegationConnector" variableExps="//@rule.67/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetDelegationConnector" variableExps="//@rule.67/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_composition_RequiredDelegationConnector">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRequiredDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.68/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.68/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRequiredDelegationConnector" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.68/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.68/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_DelegationConnector" referredRelation="//@rule.67">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.68/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.68/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceRequiredDelegationConnector" variableExps="//@rule.68/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRequiredDelegationConnector" variableExps="//@rule.68/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_composition_RequiredDelegationConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRequiredDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.69/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.69/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRequiredDelegationConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.69/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.69/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_RequiredDelegationConnector" referredRelation="//@rule.68">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.69/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.69/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceRequiredDelegationConnector" variableExps="//@rule.69/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRequiredDelegationConnector" variableExps="//@rule.69/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_composition_ProvidedDelegationConnector">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProvidedDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.70/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.70/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProvidedDelegationConnector" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.70/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.70/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_DelegationConnector" referredRelation="//@rule.67">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.70/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.70/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProvidedDelegationConnector" variableExps="//@rule.70/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProvidedDelegationConnector" variableExps="//@rule.70/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_composition_ProvidedDelegationConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProvidedDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.71/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.71/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProvidedDelegationConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.71/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.71/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ProvidedDelegationConnector" referredRelation="//@rule.70">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.71/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.71/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProvidedDelegationConnector" variableExps="//@rule.71/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProvidedDelegationConnector" variableExps="//@rule.71/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_CompositeComponent">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompositeComponent" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.72/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.72/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompositeComponent" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.72/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.72/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_ComposedProvidingRequiringEntity" referredRelation="//@rule.40">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.72/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.72/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ImplementationComponentType" referredRelation="//@rule.62">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.72/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.72/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCompositeComponent" variableExps="//@rule.72/@where/@predicate.0/@contitionExpression/@argument.0 //@rule.72/@where/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="targetCompositeComponent" variableExps="//@rule.72/@where/@predicate.0/@contitionExpression/@argument.1 //@rule.72/@where/@predicate.1/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_repository_CompositeComponent" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompositeComponent" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.73/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.73/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompositeComponent" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.73/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.73/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_CompositeComponent" referredRelation="//@rule.72">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.73/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.73/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCompositeComponent" variableExps="//@rule.73/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCompositeComponent" variableExps="//@rule.73/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_BasicComponent">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBasicComponent" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.74/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.74/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBasicComponent" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.74/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.74/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ImplementationComponentType" referredRelation="//@rule.62">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.74/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.74/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceBasicComponent" variableExps="//@rule.74/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBasicComponent" variableExps="//@rule.74/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_repository_BasicComponent" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBasicComponent" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.75/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.75/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBasicComponent" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.75/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.75/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_BasicComponent" referredRelation="//@rule.74">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.75/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.75/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceBasicComponent" variableExps="//@rule.75/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBasicComponent" variableExps="//@rule.75/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_PrimitiveDataType">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourcePrimitiveDataType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.76/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.76/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetPrimitiveDataType" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.76/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.76/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_DataType" referredRelation="//@rule.47">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.76/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.76/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourcePrimitiveDataType" variableExps="//@rule.76/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetPrimitiveDataType" variableExps="//@rule.76/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_CollectionDataType">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCollectionDataType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.77/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.77/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCollectionDataType" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.77/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.77/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.77/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.77/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_DataType" referredRelation="//@rule.47">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.77/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.77/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCollectionDataType" variableExps="//@rule.77/@where/@predicate.0/@contitionExpression/@argument.0 //@rule.77/@where/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="targetCollectionDataType" variableExps="//@rule.77/@where/@predicate.0/@contitionExpression/@argument.1 //@rule.77/@where/@predicate.1/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_repository_CollectionDataType" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCollectionDataType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.78/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.78/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCollectionDataType" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.78/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.78/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_CollectionDataType" referredRelation="//@rule.77">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.78/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.78/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCollectionDataType" variableExps="//@rule.78/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCollectionDataType" variableExps="//@rule.78/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_CompositeDataType">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompositeDataType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.79/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.79/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompositeDataType" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.79/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.79/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.79/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.79/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_DataType" referredRelation="//@rule.47">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.79/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.79/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCompositeDataType" variableExps="//@rule.79/@where/@predicate.0/@contitionExpression/@argument.0 //@rule.79/@where/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="targetCompositeDataType" variableExps="//@rule.79/@where/@predicate.0/@contitionExpression/@argument.1 //@rule.79/@where/@predicate.1/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_repository_CompositeDataType" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompositeDataType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.80/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.80/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompositeDataType" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.80/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.80/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_CompositeDataType" referredRelation="//@rule.79">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.80/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.80/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCompositeDataType" variableExps="//@rule.80/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCompositeDataType" variableExps="//@rule.80/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_InnerDeclaration">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInnerDeclaration" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.81/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.81/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInnerDeclaration" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.81/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.81/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_NamedElement" referredRelation="//@rule.26">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.81/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.81/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceInnerDeclaration" variableExps="//@rule.81/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInnerDeclaration" variableExps="//@rule.81/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_repository_InnerDeclaration" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInnerDeclaration" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.82/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.82/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInnerDeclaration" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.82/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.82/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_InnerDeclaration" referredRelation="//@rule.81">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.82/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.82/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceInnerDeclaration" variableExps="//@rule.82/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInnerDeclaration" variableExps="//@rule.82/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_repository_ProvidedRole">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProvidedRole" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.83/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.83/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProvidedRole" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.83/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.83/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Role" referredRelation="//@rule.51">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.83/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.83/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProvidedRole" variableExps="//@rule.83/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProvidedRole" variableExps="//@rule.83/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_repository_ProvidedRole" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProvidedRole" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.84/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.84/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProvidedRole" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.84/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.84/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ProvidedRole" referredRelation="//@rule.83">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.84/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.84/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProvidedRole" variableExps="//@rule.84/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProvidedRole" variableExps="//@rule.84/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_protocol_ServiceCall">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceServiceCall" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.85/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.85/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetServiceCall" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.85/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.85/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceServiceCall"/>
    <variable name="targetServiceCall"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_protocol_Protocol">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProtocol" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.86/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.86/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProtocol" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.86/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.86/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceProtocol"/>
    <variable name="targetProtocol"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_parameter_VariableCharacterisation">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceVariableCharacterisation" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.87/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.87/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetVariableCharacterisation" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.87/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.87/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceVariableCharacterisation"/>
    <variable name="targetVariableCharacterisation"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_parameter_VariableCharacterisation" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceVariableCharacterisation" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.88/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.88/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetVariableCharacterisation" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.88/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.88/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableCharacterisation" referredRelation="//@rule.87">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.88/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.88/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceVariableCharacterisation" variableExps="//@rule.88/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetVariableCharacterisation" variableExps="//@rule.88/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_parameter_VariableUsage">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceVariableUsage" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.89/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.89/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetVariableUsage" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.89/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.89/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceVariableUsage"/>
    <variable name="targetVariableUsage"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_parameter_VariableUsage" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceVariableUsage" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.90/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.90/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetVariableUsage" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.90/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.90/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableUsage" referredRelation="//@rule.89">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.90/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.90/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceVariableUsage" variableExps="//@rule.90/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetVariableUsage" variableExps="//@rule.90/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_AbstractAction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAbstractAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.91/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.91/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAbstractAction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.91/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.91/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.91/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.91/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceAbstractAction" variableExps="//@rule.91/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAbstractAction" variableExps="//@rule.91/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_AbstractInternalControlFlowAction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAbstractInternalControlFlowAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.92/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.92/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAbstractInternalControlFlowAction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.92/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.92/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractAction" referredRelation="//@rule.91">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.92/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.92/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceAbstractInternalControlFlowAction" variableExps="//@rule.92/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAbstractInternalControlFlowAction" variableExps="//@rule.92/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_StopAction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceStopAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.93/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.93/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetStopAction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.93/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.93/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractInternalControlFlowAction" referredRelation="//@rule.92">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.93/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.93/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceStopAction" variableExps="//@rule.93/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetStopAction" variableExps="//@rule.93/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_StopAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceStopAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.94/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.94/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetStopAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.94/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.94/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_StopAction" referredRelation="//@rule.93">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.94/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.94/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceStopAction" variableExps="//@rule.94/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetStopAction" variableExps="//@rule.94/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_StartAction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceStartAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.95/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.95/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetStartAction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.95/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.95/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractInternalControlFlowAction" referredRelation="//@rule.92">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.95/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.95/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceStartAction" variableExps="//@rule.95/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetStartAction" variableExps="//@rule.95/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_StartAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceStartAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.96/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.96/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetStartAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.96/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.96/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_StartAction" referredRelation="//@rule.95">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.96/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.96/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceStartAction" variableExps="//@rule.96/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetStartAction" variableExps="//@rule.96/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_ResourceDemandingBehaviour">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceDemandingBehaviour" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.97/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.97/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceDemandingBehaviour" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.97/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.97/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceResourceDemandingBehaviour"/>
    <variable name="targetResourceDemandingBehaviour"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_ResourceDemandingBehaviour" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceDemandingBehaviour" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.98/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.98/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceDemandingBehaviour" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.98/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.98/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ResourceDemandingBehaviour" referredRelation="//@rule.97">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.98/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.98/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceResourceDemandingBehaviour" variableExps="//@rule.98/@when/@predicate.0/@contitionExpression/@source/@argument.0 //@rule.98/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceDemandingBehaviour" variableExps="//@rule.98/@when/@predicate.0/@contitionExpression/@source/@argument.1 //@rule.98/@where/@predicate.0/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semantics.model.expressions:OperationCallExp" name="not">
          <source xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ResourceDemandingSEFF" referredRelation="//@rule.130">
            <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.98/@variable.0"/>
            <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.98/@variable.1"/>
          </source>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_ReleaseAction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceReleaseAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.99/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.99/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetReleaseAction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.99/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.99/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractInternalControlFlowAction" referredRelation="//@rule.92">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.99/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.99/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceReleaseAction" variableExps="//@rule.99/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetReleaseAction" variableExps="//@rule.99/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_ReleaseAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceReleaseAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.100/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.100/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetReleaseAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.100/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.100/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ReleaseAction" referredRelation="//@rule.99">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.100/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.100/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceReleaseAction" variableExps="//@rule.100/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetReleaseAction" variableExps="//@rule.100/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_AbstractLoopAction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAbstractLoopAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.101/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.101/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAbstractLoopAction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.101/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.101/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractInternalControlFlowAction" referredRelation="//@rule.92">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.101/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.101/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceAbstractLoopAction" variableExps="//@rule.101/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAbstractLoopAction" variableExps="//@rule.101/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_LoopAction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceLoopAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.102/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.102/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetLoopAction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.102/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.102/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractLoopAction" referredRelation="//@rule.101">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.102/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.102/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceLoopAction" variableExps="//@rule.102/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetLoopAction" variableExps="//@rule.102/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_LoopAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceLoopAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.103/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.103/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetLoopAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.103/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.103/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_LoopAction" referredRelation="//@rule.102">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.103/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.103/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceLoopAction" variableExps="//@rule.103/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetLoopAction" variableExps="//@rule.103/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_InternalAction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInternalAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.104/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.104/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInternalAction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.104/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.104/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractInternalControlFlowAction" referredRelation="//@rule.92">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.104/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.104/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceInternalAction" variableExps="//@rule.104/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInternalAction" variableExps="//@rule.104/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_InternalAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInternalAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.105/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.105/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInternalAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.105/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.105/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_InternalAction" referredRelation="//@rule.104">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.105/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.105/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceInternalAction" variableExps="//@rule.105/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInternalAction" variableExps="//@rule.105/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_ForkAction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceForkAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.106/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.106/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetForkAction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.106/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.106/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractInternalControlFlowAction" referredRelation="//@rule.92">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.106/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.106/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceForkAction" variableExps="//@rule.106/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetForkAction" variableExps="//@rule.106/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_ForkAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceForkAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.107/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.107/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetForkAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.107/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.107/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ForkAction" referredRelation="//@rule.106">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.107/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.107/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceForkAction" variableExps="//@rule.107/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetForkAction" variableExps="//@rule.107/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_ForkedBehaviour">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceForkedBehaviour" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.108/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.108/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetForkedBehaviour" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.108/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.108/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ResourceDemandingBehaviour" referredRelation="//@rule.97">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.108/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.108/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceForkedBehaviour" variableExps="//@rule.108/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetForkedBehaviour" variableExps="//@rule.108/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_ForkedBehaviour" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceForkedBehaviour" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.109/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.109/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetForkedBehaviour" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.109/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.109/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ForkedBehaviour" referredRelation="//@rule.108">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.109/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.109/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceForkedBehaviour" variableExps="//@rule.109/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetForkedBehaviour" variableExps="//@rule.109/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_SynchronisationPoint">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSynchronisationPoint" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.110/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.110/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSynchronisationPoint" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.110/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.110/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceSynchronisationPoint"/>
    <variable name="targetSynchronisationPoint"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_SynchronisationPoint" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSynchronisationPoint" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.111/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.111/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSynchronisationPoint" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.111/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.111/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_SynchronisationPoint" referredRelation="//@rule.110">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.111/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.111/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceSynchronisationPoint" variableExps="//@rule.111/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSynchronisationPoint" variableExps="//@rule.111/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_ExternalCallAction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceExternalCallAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.112/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.112/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetExternalCallAction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.112/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.112/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractAction" referredRelation="//@rule.91">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.112/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.112/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceExternalCallAction" variableExps="//@rule.112/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetExternalCallAction" variableExps="//@rule.112/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_completions_DelegatingExternalCallAction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceDelegatingExternalCallAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.113/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.113/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetDelegatingExternalCallAction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.113/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.113/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ExternalCallAction" referredRelation="//@rule.112">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.113/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.113/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceDelegatingExternalCallAction" variableExps="//@rule.113/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetDelegatingExternalCallAction" variableExps="//@rule.113/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_completions_DelegatingExternalCallAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceDelegatingExternalCallAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.114/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.114/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetDelegatingExternalCallAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.114/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.114/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_completions_DelegatingExternalCallAction" referredRelation="//@rule.113">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.114/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.114/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceDelegatingExternalCallAction" variableExps="//@rule.114/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetDelegatingExternalCallAction" variableExps="//@rule.114/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_ExternalCallAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceExternalCallAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.115/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.115/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetExternalCallAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.115/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.115/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ExternalCallAction" referredRelation="//@rule.112">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.115/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.115/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceExternalCallAction" variableExps="//@rule.115/@when/@predicate.0/@contitionExpression/@source/@argument.0 //@rule.115/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetExternalCallAction" variableExps="//@rule.115/@when/@predicate.0/@contitionExpression/@source/@argument.1 //@rule.115/@where/@predicate.0/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semantics.model.expressions:OperationCallExp" name="not">
          <source xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_completions_DelegatingExternalCallAction" referredRelation="//@rule.113">
            <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.115/@variable.0"/>
            <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.115/@variable.1"/>
          </source>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_AbstractBranchTransition">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAbstractBranchTransition" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.116/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.116/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAbstractBranchTransition" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.116/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.116/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_NamedElement" referredRelation="//@rule.26">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.116/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.116/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceAbstractBranchTransition" variableExps="//@rule.116/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAbstractBranchTransition" variableExps="//@rule.116/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_ProbabilisticBranchTransition">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProbabilisticBranchTransition" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.117/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.117/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProbabilisticBranchTransition" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.117/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.117/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractBranchTransition" referredRelation="//@rule.116">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.117/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.117/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProbabilisticBranchTransition" variableExps="//@rule.117/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProbabilisticBranchTransition" variableExps="//@rule.117/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_ProbabilisticBranchTransition" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProbabilisticBranchTransition" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.118/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.118/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProbabilisticBranchTransition" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.118/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.118/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ProbabilisticBranchTransition" referredRelation="//@rule.117">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.118/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.118/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProbabilisticBranchTransition" variableExps="//@rule.118/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProbabilisticBranchTransition" variableExps="//@rule.118/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_BranchAction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBranchAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.119/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.119/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBranchAction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.119/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.119/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractInternalControlFlowAction" referredRelation="//@rule.92">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.119/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.119/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceBranchAction" variableExps="//@rule.119/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBranchAction" variableExps="//@rule.119/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_BranchAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBranchAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.120/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.120/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBranchAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.120/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.120/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_BranchAction" referredRelation="//@rule.119">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.120/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.120/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceBranchAction" variableExps="//@rule.120/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBranchAction" variableExps="//@rule.120/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_AcquireAction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAcquireAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.121/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.121/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAcquireAction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.121/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.121/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractInternalControlFlowAction" referredRelation="//@rule.92">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.121/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.121/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceAcquireAction" variableExps="//@rule.121/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAcquireAction" variableExps="//@rule.121/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_AcquireAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAcquireAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.122/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.122/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAcquireAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.122/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.122/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AcquireAction" referredRelation="//@rule.121">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.122/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.122/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceAcquireAction" variableExps="//@rule.122/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAcquireAction" variableExps="//@rule.122/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_CollectionIteratorAction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCollectionIteratorAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.123/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.123/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCollectionIteratorAction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.123/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.123/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractLoopAction" referredRelation="//@rule.101">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.123/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.123/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCollectionIteratorAction" variableExps="//@rule.123/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCollectionIteratorAction" variableExps="//@rule.123/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_CollectionIteratorAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCollectionIteratorAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.124/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.124/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCollectionIteratorAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.124/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.124/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_CollectionIteratorAction" referredRelation="//@rule.123">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.124/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.124/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCollectionIteratorAction" variableExps="//@rule.124/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCollectionIteratorAction" variableExps="//@rule.124/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_GuardedBranchTransition">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceGuardedBranchTransition" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.125/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.125/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetGuardedBranchTransition" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.125/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.125/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractBranchTransition" referredRelation="//@rule.116">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.125/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.125/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceGuardedBranchTransition" variableExps="//@rule.125/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetGuardedBranchTransition" variableExps="//@rule.125/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_GuardedBranchTransition" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceGuardedBranchTransition" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.126/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.126/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetGuardedBranchTransition" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.126/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.126/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_GuardedBranchTransition" referredRelation="//@rule.125">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.126/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.126/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceGuardedBranchTransition" variableExps="//@rule.126/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetGuardedBranchTransition" variableExps="//@rule.126/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_SetVariableAction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSetVariableAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.127/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.127/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSetVariableAction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.127/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.127/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractInternalControlFlowAction" referredRelation="//@rule.92">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.127/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.127/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceSetVariableAction" variableExps="//@rule.127/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSetVariableAction" variableExps="//@rule.127/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_SetVariableAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSetVariableAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.128/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.128/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSetVariableAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.128/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.128/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_SetVariableAction" referredRelation="//@rule.127">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.128/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.128/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceSetVariableAction" variableExps="//@rule.128/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSetVariableAction" variableExps="//@rule.128/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_ServiceEffectSpecification">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceServiceEffectSpecification" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.129/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.129/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetServiceEffectSpecification" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.129/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.129/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceServiceEffectSpecification"/>
    <variable name="targetServiceEffectSpecification"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_seff_ResourceDemandingSEFF">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceDemandingSEFF" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.130/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.130/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceDemandingSEFF" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.130/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.130/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_identifier_Identifier" referredRelation="//@rule.25">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.130/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.130/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ServiceEffectSpecification" referredRelation="//@rule.129">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.130/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.130/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ResourceDemandingBehaviour" referredRelation="//@rule.97">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.130/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.130/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceResourceDemandingSEFF" variableExps="//@rule.130/@where/@predicate.0/@contitionExpression/@argument.0 //@rule.130/@where/@predicate.1/@contitionExpression/@argument.0 //@rule.130/@where/@predicate.2/@contitionExpression/@argument.0"/>
    <variable name="targetResourceDemandingSEFF" variableExps="//@rule.130/@where/@predicate.0/@contitionExpression/@argument.1 //@rule.130/@where/@predicate.1/@contitionExpression/@argument.1 //@rule.130/@where/@predicate.2/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_seff_ResourceDemandingSEFF" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceDemandingSEFF" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.131/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.131/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceDemandingSEFF" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.131/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.131/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ResourceDemandingSEFF" referredRelation="//@rule.130">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.131/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.131/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceResourceDemandingSEFF" variableExps="//@rule.131/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceDemandingSEFF" variableExps="//@rule.131/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_performance_ParametricResourceDemand">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParametricResourceDemand" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.132/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.132/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParametricResourceDemand" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.132/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.132/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceParametricResourceDemand"/>
    <variable name="targetParametricResourceDemand"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_performance_ParametricResourceDemand" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParametricResourceDemand" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.133/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.133/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParametricResourceDemand" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.133/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.133/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_performance_ParametricResourceDemand" referredRelation="//@rule.132">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.133/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.133/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceParametricResourceDemand" variableExps="//@rule.133/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetParametricResourceDemand" variableExps="//@rule.133/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_allocation_AllocationContext">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAllocationContext" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.134/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.134/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAllocationContext" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.134/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.134/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.134/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.134/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceAllocationContext" variableExps="//@rule.134/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAllocationContext" variableExps="//@rule.134/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_allocation_AllocationContext" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAllocationContext" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.135/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.135/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAllocationContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.135/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.135/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_allocation_AllocationContext" referredRelation="//@rule.134">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.135/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.135/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceAllocationContext" variableExps="//@rule.135/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAllocationContext" variableExps="//@rule.135/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_allocation_Allocation">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAllocation" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.136/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.136/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAllocation" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.136/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.136/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.136/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.136/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceAllocation" variableExps="//@rule.136/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAllocation" variableExps="//@rule.136/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_allocation_Allocation" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAllocation" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.137/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.137/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAllocation" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.137/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.137/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_allocation_Allocation" referredRelation="//@rule.136">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.137/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.137/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceAllocation" variableExps="//@rule.137/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAllocation" variableExps="//@rule.137/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_resourceenvironment_ResourceEnvironment">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceEnvironment" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.138/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.138/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceEnvironment" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.138/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.138/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceResourceEnvironment"/>
    <variable name="targetResourceEnvironment"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_resourceenvironment_ResourceEnvironment" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceEnvironment" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.139/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.139/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceEnvironment" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.139/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.139/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ResourceEnvironment" referredRelation="//@rule.138">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.139/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.139/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceResourceEnvironment" variableExps="//@rule.139/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceEnvironment" variableExps="//@rule.139/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_resourceenvironment_LinkingResource">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceLinkingResource" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.140/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.140/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetLinkingResource" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.140/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.140/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.140/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.140/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceLinkingResource" variableExps="//@rule.140/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetLinkingResource" variableExps="//@rule.140/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_resourceenvironment_LinkingResource" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceLinkingResource" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.141/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.141/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetLinkingResource" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.141/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.141/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_LinkingResource" referredRelation="//@rule.140">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.141/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.141/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceLinkingResource" variableExps="//@rule.141/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetLinkingResource" variableExps="//@rule.141/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_resourceenvironment_CommunicationLinkResourceSpecification">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCommunicationLinkResourceSpecification" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.142/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.142/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCommunicationLinkResourceSpecification" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.142/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.142/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceCommunicationLinkResourceSpecification"/>
    <variable name="targetCommunicationLinkResourceSpecification"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_resourceenvironment_CommunicationLinkResourceSpecification" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCommunicationLinkResourceSpecification" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.143/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.143/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCommunicationLinkResourceSpecification" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.143/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.143/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_CommunicationLinkResourceSpecification" referredRelation="//@rule.142">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.143/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.143/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCommunicationLinkResourceSpecification" variableExps="//@rule.143/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCommunicationLinkResourceSpecification" variableExps="//@rule.143/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_resourceenvironment_ProcessingResourceSpecification">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProcessingResourceSpecification" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.144/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.144/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProcessingResourceSpecification" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.144/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.144/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceProcessingResourceSpecification"/>
    <variable name="targetProcessingResourceSpecification"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_resourceenvironment_ProcessingResourceSpecification" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProcessingResourceSpecification" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.145/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.145/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProcessingResourceSpecification" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.145/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.145/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ProcessingResourceSpecification" referredRelation="//@rule.144">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.145/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.145/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProcessingResourceSpecification" variableExps="//@rule.145/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProcessingResourceSpecification" variableExps="//@rule.145/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_resourceenvironment_ResourceContainer">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceContainer" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.146/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.146/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceContainer" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.146/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.146/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.146/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.146/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceResourceContainer" variableExps="//@rule.146/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceContainer" variableExps="//@rule.146/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_resourceenvironment_ResourceContainer" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceContainer" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.147/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.147/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceContainer" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.147/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.147/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ResourceContainer" referredRelation="//@rule.146">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.147/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.147/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceResourceContainer" variableExps="//@rule.147/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceContainer" variableExps="//@rule.147/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_system_System">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSystem" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.148/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.148/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSystem" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.148/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.148/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.148/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.148/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_ComposedProvidingRequiringEntity" referredRelation="//@rule.40">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.148/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.148/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceSystem" variableExps="//@rule.148/@where/@predicate.0/@contitionExpression/@argument.0 //@rule.148/@where/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="targetSystem" variableExps="//@rule.148/@where/@predicate.0/@contitionExpression/@argument.1 //@rule.148/@where/@predicate.1/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_system_System" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSystem" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.149/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.149/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSystem" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.149/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.149/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_system_System" referredRelation="//@rule.148">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.149/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.149/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceSystem" variableExps="//@rule.149/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSystem" variableExps="//@rule.149/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_qosannotations_SpecifiedQoSAnnotation">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSpecifiedQoSAnnotation" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.150/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.150/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSpecifiedQoSAnnotation" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.150/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.150/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceSpecifiedQoSAnnotation"/>
    <variable name="targetSpecifiedQoSAnnotation"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_qosannotations_SpecifiedOutputParameterAbstraction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSpecifiedOutputParameterAbstraction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.151/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.151/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSpecifiedOutputParameterAbstraction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.151/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.151/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceSpecifiedOutputParameterAbstraction"/>
    <variable name="targetSpecifiedOutputParameterAbstraction"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_qosannotations_QoSAnnotations">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceQoSAnnotations" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.152/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.152/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetQoSAnnotations" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.152/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.152/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.152/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.152/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceQoSAnnotations" variableExps="//@rule.152/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetQoSAnnotations" variableExps="//@rule.152/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_qosannotations_QoSAnnotations" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceQoSAnnotations" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.153/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.153/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetQoSAnnotations" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.153/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.153/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_qosannotations_QoSAnnotations" referredRelation="//@rule.152">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.153/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.153/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceQoSAnnotations" variableExps="//@rule.153/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetQoSAnnotations" variableExps="//@rule.153/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_performance_SystemSpecifiedExecutionTime">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSystemSpecifiedExecutionTime" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.154/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.154/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSystemSpecifiedExecutionTime" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.154/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.154/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_qosannotations_SpecifiedQoSAnnotation" referredRelation="//@rule.150">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.154/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.154/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceSystemSpecifiedExecutionTime" variableExps="//@rule.154/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSystemSpecifiedExecutionTime" variableExps="//@rule.154/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_performance_SystemSpecifiedExecutionTime" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSystemSpecifiedExecutionTime" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.155/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.155/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSystemSpecifiedExecutionTime" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.155/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.155/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_performance_SystemSpecifiedExecutionTime" referredRelation="//@rule.154">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.155/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.155/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceSystemSpecifiedExecutionTime" variableExps="//@rule.155/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSystemSpecifiedExecutionTime" variableExps="//@rule.155/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_performance_ComponentSpecifiedExecutionTime">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceComponentSpecifiedExecutionTime" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.156/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.156/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetComponentSpecifiedExecutionTime" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.156/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.156/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_qosannotations_SpecifiedQoSAnnotation" referredRelation="//@rule.150">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.156/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.156/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceComponentSpecifiedExecutionTime" variableExps="//@rule.156/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetComponentSpecifiedExecutionTime" variableExps="//@rule.156/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_performance_ComponentSpecifiedExecutionTime" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceComponentSpecifiedExecutionTime" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.157/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.157/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetComponentSpecifiedExecutionTime" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.157/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.157/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_performance_ComponentSpecifiedExecutionTime" referredRelation="//@rule.156">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.157/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.157/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceComponentSpecifiedExecutionTime" variableExps="//@rule.157/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetComponentSpecifiedExecutionTime" variableExps="//@rule.157/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_reliability_SpecifiedFailureProbability">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSpecifiedFailureProbability" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.158/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.158/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSpecifiedFailureProbability" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.158/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.158/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_qosannotations_SpecifiedQoSAnnotation" referredRelation="//@rule.150">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.158/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.158/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceSpecifiedFailureProbability" variableExps="//@rule.158/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSpecifiedFailureProbability" variableExps="//@rule.158/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_reliability_SpecifiedFailureProbability" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSpecifiedFailureProbability" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.159/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.159/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSpecifiedFailureProbability" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.159/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.159/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_reliability_SpecifiedFailureProbability" referredRelation="//@rule.158">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.159/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.159/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceSpecifiedFailureProbability" variableExps="//@rule.159/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSpecifiedFailureProbability" variableExps="//@rule.159/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_usagemodel_Workload">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceWorkload" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.160/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.160/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetWorkload" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.160/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.160/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceWorkload"/>
    <variable name="targetWorkload"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_usagemodel_UsageScenario">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUsageScenario" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.161/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.161/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUsageScenario" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.161/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.161/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.161/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.161/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceUsageScenario" variableExps="//@rule.161/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUsageScenario" variableExps="//@rule.161/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_usagemodel_UsageScenario" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUsageScenario" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.162/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.162/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUsageScenario" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.162/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.162/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_UsageScenario" referredRelation="//@rule.161">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.162/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.162/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceUsageScenario" variableExps="//@rule.162/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUsageScenario" variableExps="//@rule.162/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_usagemodel_ScenarioBehaviour">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceScenarioBehaviour" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.163/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.163/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetScenarioBehaviour" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.163/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.163/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.163/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.163/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceScenarioBehaviour" variableExps="//@rule.163/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetScenarioBehaviour" variableExps="//@rule.163/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_usagemodel_ScenarioBehaviour" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceScenarioBehaviour" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.164/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.164/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetScenarioBehaviour" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.164/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.164/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_ScenarioBehaviour" referredRelation="//@rule.163">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.164/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.164/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceScenarioBehaviour" variableExps="//@rule.164/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetScenarioBehaviour" variableExps="//@rule.164/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_usagemodel_AbstractUserAction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAbstractUserAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.165/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.165/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAbstractUserAction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.165/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.165/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_Entity" referredRelation="//@rule.27">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.165/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.165/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceAbstractUserAction" variableExps="//@rule.165/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAbstractUserAction" variableExps="//@rule.165/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_usagemodel_UsageModel">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUsageModel" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.166/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.166/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUsageModel" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.166/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.166/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceUsageModel"/>
    <variable name="targetUsageModel"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_usagemodel_UsageModel" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUsageModel" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.167/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.167/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUsageModel" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.167/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.167/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_UsageModel" referredRelation="//@rule.166">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.167/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.167/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceUsageModel" variableExps="//@rule.167/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUsageModel" variableExps="//@rule.167/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_usagemodel_UserData">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUserData" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.168/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.168/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUserData" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.168/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.168/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceUserData"/>
    <variable name="targetUserData"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_usagemodel_UserData" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUserData" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.169/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.169/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUserData" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.169/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.169/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_UserData" referredRelation="//@rule.168">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.169/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.169/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceUserData" variableExps="//@rule.169/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUserData" variableExps="//@rule.169/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_usagemodel_Stop">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceStop" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.170/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.170/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetStop" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.170/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.170/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_AbstractUserAction" referredRelation="//@rule.165">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.170/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.170/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceStop" variableExps="//@rule.170/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetStop" variableExps="//@rule.170/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_usagemodel_Stop" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceStop" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.171/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.171/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetStop" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.171/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.171/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_Stop" referredRelation="//@rule.170">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.171/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.171/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceStop" variableExps="//@rule.171/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetStop" variableExps="//@rule.171/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_usagemodel_Start">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceStart" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.172/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.172/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetStart" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.172/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.172/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_AbstractUserAction" referredRelation="//@rule.165">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.172/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.172/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceStart" variableExps="//@rule.172/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetStart" variableExps="//@rule.172/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_usagemodel_Start" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceStart" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.173/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.173/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetStart" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.173/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.173/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_Start" referredRelation="//@rule.172">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.173/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.173/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceStart" variableExps="//@rule.173/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetStart" variableExps="//@rule.173/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_usagemodel_OpenWorkload">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceOpenWorkload" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.174/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.174/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetOpenWorkload" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.174/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.174/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_Workload" referredRelation="//@rule.160">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.174/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.174/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceOpenWorkload" variableExps="//@rule.174/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetOpenWorkload" variableExps="//@rule.174/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_usagemodel_OpenWorkload" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceOpenWorkload" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.175/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.175/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetOpenWorkload" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.175/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.175/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_OpenWorkload" referredRelation="//@rule.174">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.175/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.175/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceOpenWorkload" variableExps="//@rule.175/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetOpenWorkload" variableExps="//@rule.175/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_usagemodel_Loop">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceLoop" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.176/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.176/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetLoop" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.176/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.176/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_AbstractUserAction" referredRelation="//@rule.165">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.176/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.176/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceLoop" variableExps="//@rule.176/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetLoop" variableExps="//@rule.176/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_usagemodel_Loop" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceLoop" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.177/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.177/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetLoop" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.177/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.177/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_Loop" referredRelation="//@rule.176">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.177/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.177/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceLoop" variableExps="//@rule.177/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetLoop" variableExps="//@rule.177/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_usagemodel_EntryLevelSystemCall">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceEntryLevelSystemCall" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.178/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.178/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetEntryLevelSystemCall" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.178/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.178/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_AbstractUserAction" referredRelation="//@rule.165">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.178/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.178/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceEntryLevelSystemCall" variableExps="//@rule.178/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetEntryLevelSystemCall" variableExps="//@rule.178/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_usagemodel_EntryLevelSystemCall" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceEntryLevelSystemCall" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.179/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.179/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetEntryLevelSystemCall" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.179/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.179/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_EntryLevelSystemCall" referredRelation="//@rule.178">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.179/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.179/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceEntryLevelSystemCall" variableExps="//@rule.179/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetEntryLevelSystemCall" variableExps="//@rule.179/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_usagemodel_ClosedWorkload">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceClosedWorkload" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.180/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.180/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetClosedWorkload" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.180/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.180/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_Workload" referredRelation="//@rule.160">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.180/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.180/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceClosedWorkload" variableExps="//@rule.180/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetClosedWorkload" variableExps="//@rule.180/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_usagemodel_ClosedWorkload" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceClosedWorkload" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.181/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.181/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetClosedWorkload" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.181/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.181/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_ClosedWorkload" referredRelation="//@rule.180">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.181/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.181/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceClosedWorkload" variableExps="//@rule.181/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetClosedWorkload" variableExps="//@rule.181/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_usagemodel_Branch">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBranch" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.182/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.182/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBranch" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.182/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.182/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_AbstractUserAction" referredRelation="//@rule.165">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.182/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.182/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceBranch" variableExps="//@rule.182/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBranch" variableExps="//@rule.182/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_usagemodel_Branch" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBranch" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.183/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.183/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBranch" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.183/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.183/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_Branch" referredRelation="//@rule.182">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.183/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.183/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceBranch" variableExps="//@rule.183/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBranch" variableExps="//@rule.183/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_usagemodel_BranchTransition">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBranchTransition" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.184/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.184/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBranchTransition" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.184/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.184/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceBranchTransition"/>
    <variable name="targetBranchTransition"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_usagemodel_BranchTransition" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBranchTransition" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.185/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.185/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBranchTransition" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.185/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.185/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_BranchTransition" referredRelation="//@rule.184">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.185/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.185/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceBranchTransition" variableExps="//@rule.185/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBranchTransition" variableExps="//@rule.185/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_usagemodel_Delay">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceDelay" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.186/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.186/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetDelay" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.186/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.186/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_AbstractUserAction" referredRelation="//@rule.165">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.186/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.186/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceDelay" variableExps="//@rule.186/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetDelay" variableExps="//@rule.186/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_usagemodel_Delay" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceDelay" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.187/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.187/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetDelay" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.187/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.187/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_Delay" referredRelation="//@rule.186">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.187/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.187/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceDelay" variableExps="//@rule.187/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetDelay" variableExps="//@rule.187/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_subsystem_SubSystem">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSubSystem" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.188/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.188/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSubSystem" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.188/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.188/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_ComposedProvidingRequiringEntity" referredRelation="//@rule.40">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.188/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.188/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_RepositoryComponent" referredRelation="//@rule.50">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.188/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.188/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceSubSystem" variableExps="//@rule.188/@where/@predicate.0/@contitionExpression/@argument.0 //@rule.188/@where/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="targetSubSystem" variableExps="//@rule.188/@where/@predicate.0/@contitionExpression/@argument.1 //@rule.188/@where/@predicate.1/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_subsystem_SubSystem" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSubSystem" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.189/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.189/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSubSystem" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.189/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.189/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_subsystem_SubSystem" referredRelation="//@rule.188">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.189/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.189/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceSubSystem" variableExps="//@rule.189/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSubSystem" variableExps="//@rule.189/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_probfunction_ContinuousSample">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceContinuousSample" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.190/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.190/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetContinuousSample" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.190/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.190/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceContinuousSample"/>
    <variable name="targetContinuousSample"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_probfunction_ContinuousSample" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceContinuousSample" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.191/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.191/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetContinuousSample" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.191/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.191/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ContinuousSample" referredRelation="//@rule.190">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.191/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.191/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceContinuousSample" variableExps="//@rule.191/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetContinuousSample" variableExps="//@rule.191/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_probfunction_Sample">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSample" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.192/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.192/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSample" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.192/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.192/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceSample"/>
    <variable name="targetSample"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_probfunction_Sample" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSample" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.193/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.193/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSample" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.193/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.193/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_Sample" referredRelation="//@rule.192">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.193/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.193/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceSample" variableExps="//@rule.193/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSample" variableExps="//@rule.193/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_probfunction_Complex">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceComplex" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.194/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.194/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetComplex" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.194/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.194/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceComplex"/>
    <variable name="targetComplex"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_probfunction_Complex" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceComplex" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.195/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.195/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetComplex" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.195/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.195/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_Complex" referredRelation="//@rule.194">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.195/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.195/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceComplex" variableExps="//@rule.195/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetComplex" variableExps="//@rule.195/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_AbstractNamedReference">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAbstractNamedReference" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.196/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.196/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAbstractNamedReference" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.196/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.196/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceAbstractNamedReference"/>
    <variable name="targetAbstractNamedReference"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_VariableReference">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceVariableReference" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.197/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.197/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetVariableReference" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.197/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.197/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_AbstractNamedReference" referredRelation="//@rule.196">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.197/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.197/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceVariableReference" variableExps="//@rule.197/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetVariableReference" variableExps="//@rule.197/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_VariableReference" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceVariableReference" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.198/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.198/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetVariableReference" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.198/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.198/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_VariableReference" referredRelation="//@rule.197">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.198/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.198/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceVariableReference" variableExps="//@rule.198/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetVariableReference" variableExps="//@rule.198/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_NamespaceReference">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceNamespaceReference" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.199/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.199/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetNamespaceReference" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.199/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.199/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_AbstractNamedReference" referredRelation="//@rule.196">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.199/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.199/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceNamespaceReference" variableExps="//@rule.199/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetNamespaceReference" variableExps="//@rule.199/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_NamespaceReference" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceNamespaceReference" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.200/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.200/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetNamespaceReference" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.200/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.200/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_NamespaceReference" referredRelation="//@rule.199">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.200/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.200/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceNamespaceReference" variableExps="//@rule.200/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetNamespaceReference" variableExps="//@rule.200/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_Expression">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.201/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.201/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetExpression" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.201/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.201/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceExpression"/>
    <variable name="targetExpression"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_IfElse">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceIfElse" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.202/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.202/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetIfElse" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.202/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.202/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Expression" referredRelation="//@rule.201">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.202/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.202/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceIfElse" variableExps="//@rule.202/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetIfElse" variableExps="//@rule.202/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_BooleanExpression">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBooleanExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.203/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.203/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBooleanExpression" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.203/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.203/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_IfElse" referredRelation="//@rule.202">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.203/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.203/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceBooleanExpression" variableExps="//@rule.203/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBooleanExpression" variableExps="//@rule.203/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_Comparison">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceComparison" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.204/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.204/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetComparison" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.204/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.204/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_BooleanExpression" referredRelation="//@rule.203">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.204/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.204/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceComparison" variableExps="//@rule.204/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetComparison" variableExps="//@rule.204/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_Term">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceTerm" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.205/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.205/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetTerm" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.205/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.205/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Comparison" referredRelation="//@rule.204">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.205/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.205/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceTerm" variableExps="//@rule.205/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetTerm" variableExps="//@rule.205/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_Product">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProduct" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.206/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.206/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProduct" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.206/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.206/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Term" referredRelation="//@rule.205">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.206/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.206/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProduct" variableExps="//@rule.206/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProduct" variableExps="//@rule.206/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_Power">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourcePower" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.207/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.207/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetPower" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.207/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.207/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Product" referredRelation="//@rule.206">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.207/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.207/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourcePower" variableExps="//@rule.207/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetPower" variableExps="//@rule.207/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_Unary">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnary" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.208/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.208/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnary" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.208/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.208/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Power" referredRelation="//@rule.207">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.208/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.208/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceUnary" variableExps="//@rule.208/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUnary" variableExps="//@rule.208/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_Atom">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAtom" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.209/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.209/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAtom" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.209/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.209/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Unary" referredRelation="//@rule.208">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.209/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.209/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceAtom" variableExps="//@rule.209/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAtom" variableExps="//@rule.209/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_Variable">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceVariable" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.210/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.210/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetVariable" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.210/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.210/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Atom" referredRelation="//@rule.209">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.210/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.210/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceVariable" variableExps="//@rule.210/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetVariable" variableExps="//@rule.210/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_parameter_CharacterisedVariable">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCharacterisedVariable" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.211/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.211/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCharacterisedVariable" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.211/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.211/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Variable" referredRelation="//@rule.210">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.211/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.211/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCharacterisedVariable" variableExps="//@rule.211/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCharacterisedVariable" variableExps="//@rule.211/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_parameter_CharacterisedVariable" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCharacterisedVariable" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.212/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.212/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCharacterisedVariable" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.212/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.212/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_CharacterisedVariable" referredRelation="//@rule.211">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.212/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.212/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCharacterisedVariable" variableExps="//@rule.212/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCharacterisedVariable" variableExps="//@rule.212/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_Variable" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceVariable" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.213/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.213/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetVariable" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.213/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.213/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Variable" referredRelation="//@rule.210">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.213/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.213/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceVariable" variableExps="//@rule.213/@when/@predicate.0/@contitionExpression/@source/@argument.0 //@rule.213/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetVariable" variableExps="//@rule.213/@when/@predicate.0/@contitionExpression/@source/@argument.1 //@rule.213/@where/@predicate.0/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semantics.model.expressions:OperationCallExp" name="not">
          <source xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_CharacterisedVariable" referredRelation="//@rule.211">
            <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.213/@variable.0"/>
            <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.213/@variable.1"/>
          </source>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_TermExpression">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceTermExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.214/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.214/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetTermExpression" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.214/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.214/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Term" referredRelation="//@rule.205">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.214/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.214/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceTermExpression" variableExps="//@rule.214/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetTermExpression" variableExps="//@rule.214/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_TermExpression" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceTermExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.215/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.215/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetTermExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.215/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.215/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_TermExpression" referredRelation="//@rule.214">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.215/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.215/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceTermExpression" variableExps="//@rule.215/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetTermExpression" variableExps="//@rule.215/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_ProductExpression">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProductExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.216/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.216/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProductExpression" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.216/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.216/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Product" referredRelation="//@rule.206">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.216/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.216/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProductExpression" variableExps="//@rule.216/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProductExpression" variableExps="//@rule.216/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_ProductExpression" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProductExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.217/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.217/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProductExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.217/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.217/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_ProductExpression" referredRelation="//@rule.216">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.217/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.217/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProductExpression" variableExps="//@rule.217/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProductExpression" variableExps="//@rule.217/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_ProbabilityFunctionLiteral">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProbabilityFunctionLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.218/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.218/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProbabilityFunctionLiteral" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.218/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.218/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Atom" referredRelation="//@rule.209">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.218/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.218/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProbabilityFunctionLiteral" variableExps="//@rule.218/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProbabilityFunctionLiteral" variableExps="//@rule.218/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_ProbabilityFunctionLiteral" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProbabilityFunctionLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.219/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.219/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProbabilityFunctionLiteral" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.219/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.219/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_ProbabilityFunctionLiteral" referredRelation="//@rule.218">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.219/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.219/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProbabilityFunctionLiteral" variableExps="//@rule.219/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProbabilityFunctionLiteral" variableExps="//@rule.219/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_Parenthesis">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParenthesis" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.220/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.220/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParenthesis" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.220/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.220/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Atom" referredRelation="//@rule.209">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.220/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.220/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceParenthesis" variableExps="//@rule.220/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetParenthesis" variableExps="//@rule.220/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_Parenthesis" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParenthesis" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.221/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.221/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParenthesis" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.221/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.221/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Parenthesis" referredRelation="//@rule.220">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.221/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.221/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceParenthesis" variableExps="//@rule.221/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetParenthesis" variableExps="//@rule.221/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_CompareExpression">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompareExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.222/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.222/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompareExpression" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.222/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.222/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Comparison" referredRelation="//@rule.204">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.222/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.222/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCompareExpression" variableExps="//@rule.222/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCompareExpression" variableExps="//@rule.222/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_CompareExpression" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompareExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.223/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.223/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompareExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.223/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.223/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_CompareExpression" referredRelation="//@rule.222">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.223/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.223/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceCompareExpression" variableExps="//@rule.223/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCompareExpression" variableExps="//@rule.223/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_BoolLiteral">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBoolLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.224/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.224/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBoolLiteral" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.224/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.224/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Atom" referredRelation="//@rule.209">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.224/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.224/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceBoolLiteral" variableExps="//@rule.224/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBoolLiteral" variableExps="//@rule.224/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_BoolLiteral" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBoolLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.225/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.225/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBoolLiteral" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.225/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.225/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_BoolLiteral" referredRelation="//@rule.224">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.225/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.225/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceBoolLiteral" variableExps="//@rule.225/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBoolLiteral" variableExps="//@rule.225/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_StringLiteral">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceStringLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.226/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.226/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetStringLiteral" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.226/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.226/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Atom" referredRelation="//@rule.209">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.226/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.226/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceStringLiteral" variableExps="//@rule.226/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetStringLiteral" variableExps="//@rule.226/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_StringLiteral" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceStringLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.227/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.227/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetStringLiteral" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.227/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.227/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_StringLiteral" referredRelation="//@rule.226">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.227/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.227/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceStringLiteral" variableExps="//@rule.227/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetStringLiteral" variableExps="//@rule.227/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_PowerExpression">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourcePowerExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.228/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.228/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetPowerExpression" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.228/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.228/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Power" referredRelation="//@rule.207">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.228/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.228/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourcePowerExpression" variableExps="//@rule.228/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetPowerExpression" variableExps="//@rule.228/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_PowerExpression" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourcePowerExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.229/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.229/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetPowerExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.229/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.229/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_PowerExpression" referredRelation="//@rule.228">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.229/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.229/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourcePowerExpression" variableExps="//@rule.229/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetPowerExpression" variableExps="//@rule.229/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_BooleanOperatorExpression">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBooleanOperatorExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.230/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.230/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBooleanOperatorExpression" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.230/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.230/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_BooleanExpression" referredRelation="//@rule.203">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.230/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.230/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceBooleanOperatorExpression" variableExps="//@rule.230/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBooleanOperatorExpression" variableExps="//@rule.230/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_BooleanOperatorExpression" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBooleanOperatorExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.231/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.231/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBooleanOperatorExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.231/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.231/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_BooleanOperatorExpression" referredRelation="//@rule.230">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.231/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.231/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceBooleanOperatorExpression" variableExps="//@rule.231/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBooleanOperatorExpression" variableExps="//@rule.231/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_NotExpression">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceNotExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.232/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.232/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetNotExpression" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.232/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.232/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Unary" referredRelation="//@rule.208">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.232/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.232/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceNotExpression" variableExps="//@rule.232/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetNotExpression" variableExps="//@rule.232/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_NotExpression" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceNotExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.233/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.233/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetNotExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.233/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.233/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_NotExpression" referredRelation="//@rule.232">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.233/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.233/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceNotExpression" variableExps="//@rule.233/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetNotExpression" variableExps="//@rule.233/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_NegativeExpression">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceNegativeExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.234/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.234/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetNegativeExpression" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.234/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.234/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Unary" referredRelation="//@rule.208">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.234/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.234/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceNegativeExpression" variableExps="//@rule.234/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetNegativeExpression" variableExps="//@rule.234/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_NegativeExpression" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceNegativeExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.235/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.235/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetNegativeExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.235/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.235/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_NegativeExpression" referredRelation="//@rule.234">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.235/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.235/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceNegativeExpression" variableExps="//@rule.235/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetNegativeExpression" variableExps="//@rule.235/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_FunctionLiteral">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceFunctionLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.236/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.236/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetFunctionLiteral" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.236/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.236/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Atom" referredRelation="//@rule.209">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.236/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.236/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceFunctionLiteral" variableExps="//@rule.236/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetFunctionLiteral" variableExps="//@rule.236/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_FunctionLiteral" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceFunctionLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.237/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.237/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetFunctionLiteral" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.237/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.237/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_FunctionLiteral" referredRelation="//@rule.236">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.237/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.237/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceFunctionLiteral" variableExps="//@rule.237/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetFunctionLiteral" variableExps="//@rule.237/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_IfElseExpression">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceIfElseExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.238/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.238/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetIfElseExpression" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.238/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.238/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_IfElse" referredRelation="//@rule.202">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.238/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.238/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceIfElseExpression" variableExps="//@rule.238/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetIfElseExpression" variableExps="//@rule.238/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_IfElseExpression" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceIfElseExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.239/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.239/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetIfElseExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.239/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.239/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_IfElseExpression" referredRelation="//@rule.238">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.239/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.239/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceIfElseExpression" variableExps="//@rule.239/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetIfElseExpression" variableExps="//@rule.239/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_RandomVariable">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRandomVariable" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.240/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.240/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRandomVariable" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.240/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.240/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceRandomVariable"/>
    <variable name="targetRandomVariable"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_core_PCMRandomVariable">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourcePCMRandomVariable" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.241/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.241/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetPCMRandomVariable" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.241/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.241/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_RandomVariable" referredRelation="//@rule.240">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.241/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.241/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourcePCMRandomVariable" variableExps="//@rule.241/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetPCMRandomVariable" variableExps="//@rule.241/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_core_PCMRandomVariable" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourcePCMRandomVariable" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.242/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.242/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetPCMRandomVariable" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.242/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.242/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_core_PCMRandomVariable" referredRelation="//@rule.241">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.242/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.242/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourcePCMRandomVariable" variableExps="//@rule.242/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetPCMRandomVariable" variableExps="//@rule.242/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_RandomVariable" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRandomVariable" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.243/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.243/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRandomVariable" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.243/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.243/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_RandomVariable" referredRelation="//@rule.240">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.243/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.243/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceRandomVariable" variableExps="//@rule.243/@when/@predicate.0/@contitionExpression/@source/@argument.0 //@rule.243/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRandomVariable" variableExps="//@rule.243/@when/@predicate.0/@contitionExpression/@source/@argument.1 //@rule.243/@where/@predicate.0/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semantics.model.expressions:OperationCallExp" name="not">
          <source xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_core_PCMRandomVariable" referredRelation="//@rule.241">
            <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.243/@variable.0"/>
            <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.243/@variable.1"/>
          </source>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_units_UnitCarryingElement">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnitCarryingElement" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.244/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.244/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnitCarryingElement" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.244/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.244/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceUnitCarryingElement"/>
    <variable name="targetUnitCarryingElement"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_NumericLiteral">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceNumericLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.245/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.245/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetNumericLiteral" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.245/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.245/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_UnitCarryingElement" referredRelation="//@rule.244">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.245/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.245/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Atom" referredRelation="//@rule.209">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.245/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.245/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceNumericLiteral" variableExps="//@rule.245/@where/@predicate.0/@contitionExpression/@argument.0 //@rule.245/@where/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="targetNumericLiteral" variableExps="//@rule.245/@where/@predicate.0/@contitionExpression/@argument.1 //@rule.245/@where/@predicate.1/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_DoubleLiteral">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceDoubleLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.246/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.246/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetDoubleLiteral" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.246/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.246/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_NumericLiteral" referredRelation="//@rule.245">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.246/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.246/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceDoubleLiteral" variableExps="//@rule.246/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetDoubleLiteral" variableExps="//@rule.246/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_DoubleLiteral" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceDoubleLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.247/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.247/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetDoubleLiteral" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.247/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.247/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_DoubleLiteral" referredRelation="//@rule.246">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.247/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.247/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceDoubleLiteral" variableExps="//@rule.247/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetDoubleLiteral" variableExps="//@rule.247/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_stoex_IntLiteral">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceIntLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.248/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.248/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetIntLiteral" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.248/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.248/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_NumericLiteral" referredRelation="//@rule.245">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.248/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.248/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceIntLiteral" variableExps="//@rule.248/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetIntLiteral" variableExps="//@rule.248/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_stoex_IntLiteral" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceIntLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.249/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.249/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetIntLiteral" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.249/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.249/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_IntLiteral" referredRelation="//@rule.248">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.249/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.249/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceIntLiteral" variableExps="//@rule.249/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetIntLiteral" variableExps="//@rule.249/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_probfunction_ProbabilityFunction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProbabilityFunction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.250/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.250/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProbabilityFunction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.250/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.250/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_UnitCarryingElement" referredRelation="//@rule.244">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.250/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.250/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProbabilityFunction" variableExps="//@rule.250/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProbabilityFunction" variableExps="//@rule.250/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_probfunction_ProbabilityMassFunction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProbabilityMassFunction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.251/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.251/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProbabilityMassFunction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.251/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.251/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ProbabilityFunction" referredRelation="//@rule.250">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.251/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.251/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProbabilityMassFunction" variableExps="//@rule.251/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProbabilityMassFunction" variableExps="//@rule.251/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_probfunction_ProbabilityMassFunction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProbabilityMassFunction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.252/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.252/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProbabilityMassFunction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.252/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.252/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ProbabilityMassFunction" referredRelation="//@rule.251">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.252/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.252/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProbabilityMassFunction" variableExps="//@rule.252/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProbabilityMassFunction" variableExps="//@rule.252/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_probfunction_ProbabilityDensityFunction">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProbabilityDensityFunction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.253/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.253/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProbabilityDensityFunction" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.253/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.253/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ProbabilityFunction" referredRelation="//@rule.250">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.253/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.253/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceProbabilityDensityFunction" variableExps="//@rule.253/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProbabilityDensityFunction" variableExps="//@rule.253/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_probfunction_ContinuousPDF">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceContinuousPDF" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.254/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.254/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetContinuousPDF" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.254/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.254/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ProbabilityDensityFunction" referredRelation="//@rule.253">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.254/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.254/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceContinuousPDF" variableExps="//@rule.254/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetContinuousPDF" variableExps="//@rule.254/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_probfunction_NormalDistribution">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceNormalDistribution" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.255/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.255/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetNormalDistribution" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.255/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.255/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ContinuousPDF" referredRelation="//@rule.254">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.255/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.255/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceNormalDistribution" variableExps="//@rule.255/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetNormalDistribution" variableExps="//@rule.255/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_probfunction_NormalDistribution" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceNormalDistribution" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.256/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.256/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetNormalDistribution" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.256/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.256/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_NormalDistribution" referredRelation="//@rule.255">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.256/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.256/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceNormalDistribution" variableExps="//@rule.256/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetNormalDistribution" variableExps="//@rule.256/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_probfunction_ExponentialDistribution">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceExponentialDistribution" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.257/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.257/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetExponentialDistribution" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.257/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.257/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ContinuousPDF" referredRelation="//@rule.254">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.257/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.257/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceExponentialDistribution" variableExps="//@rule.257/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetExponentialDistribution" variableExps="//@rule.257/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_probfunction_ExponentialDistribution" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceExponentialDistribution" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.258/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.258/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetExponentialDistribution" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.258/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.258/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ExponentialDistribution" referredRelation="//@rule.257">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.258/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.258/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceExponentialDistribution" variableExps="//@rule.258/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetExponentialDistribution" variableExps="//@rule.258/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_probfunction_SamplePDF">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSamplePDF" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.259/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.259/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSamplePDF" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.259/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.259/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ProbabilityDensityFunction" referredRelation="//@rule.253">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.259/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.259/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceSamplePDF" variableExps="//@rule.259/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSamplePDF" variableExps="//@rule.259/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_probfunction_SamplePDF" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSamplePDF" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.260/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.260/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSamplePDF" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.260/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.260/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_SamplePDF" referredRelation="//@rule.259">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.260/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.260/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceSamplePDF" variableExps="//@rule.260/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSamplePDF" variableExps="//@rule.260/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_probfunction_BoxedPDF">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBoxedPDF" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.261/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.261/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBoxedPDF" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.261/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.261/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ProbabilityDensityFunction" referredRelation="//@rule.253">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.261/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.261/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceBoxedPDF" variableExps="//@rule.261/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBoxedPDF" variableExps="//@rule.261/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_probfunction_BoxedPDF" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBoxedPDF" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.262/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.262/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBoxedPDF" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.262/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.262/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_BoxedPDF" referredRelation="//@rule.261">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.262/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.262/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceBoxedPDF" variableExps="//@rule.262/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBoxedPDF" variableExps="//@rule.262/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_units_Unit">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnit" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.263/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.263/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnit" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.263/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.263/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceUnit"/>
    <variable name="targetUnit"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_units_BaseUnit">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBaseUnit" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.264/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.264/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBaseUnit" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.264/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.264/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceBaseUnit"/>
    <variable name="targetBaseUnit"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_units_BaseUnit" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBaseUnit" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.265/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.265/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBaseUnit" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.265/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.265/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_BaseUnit" referredRelation="//@rule.264">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.265/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.265/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceBaseUnit" variableExps="//@rule.265/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBaseUnit" variableExps="//@rule.265/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_units_UnitRepository">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnitRepository" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.266/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.266/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnitRepository" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.266/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.266/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceUnitRepository"/>
    <variable name="targetUnitRepository"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_units_UnitRepository" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnitRepository" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.267/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.267/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnitRepository" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.267/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.267/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_UnitRepository" referredRelation="//@rule.266">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.267/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.267/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceUnitRepository" variableExps="//@rule.267/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUnitRepository" variableExps="//@rule.267/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_units_UnitMultiplication">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnitMultiplication" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.268/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.268/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnitMultiplication" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.268/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.268/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_Unit" referredRelation="//@rule.263">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.268/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.268/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceUnitMultiplication" variableExps="//@rule.268/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUnitMultiplication" variableExps="//@rule.268/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_units_UnitMultiplication" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnitMultiplication" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.269/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.269/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnitMultiplication" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.269/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.269/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_UnitMultiplication" referredRelation="//@rule.268">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.269/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.269/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceUnitMultiplication" variableExps="//@rule.269/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUnitMultiplication" variableExps="//@rule.269/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_units_UnitPower">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnitPower" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.270/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.270/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnitPower" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.270/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.270/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_Unit" referredRelation="//@rule.263">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.270/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.270/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceUnitPower" variableExps="//@rule.270/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUnitPower" variableExps="//@rule.270/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_units_UnitPower" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnitPower" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.271/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.271/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnitPower" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.271/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.271/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_UnitPower" referredRelation="//@rule.270">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.271/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.271/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceUnitPower" variableExps="//@rule.271/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUnitPower" variableExps="//@rule.271/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Mark_units_UnitLiteral">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnitLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.272/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.272/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnitLiteral" isCheckable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.272/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.272/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_Unit" referredRelation="//@rule.263">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.272/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.272/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceUnitLiteral" variableExps="//@rule.272/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUnitLiteral" variableExps="//@rule.272/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="Copy_units_UnitLiteral" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnitLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.273/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.273/@variable.0"/>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnitLiteral" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.273/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.273/@variable.1"/>
      </pattern>
    </domain>
    <where>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_UnitLiteral" referredRelation="//@rule.272">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.273/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.273/@variable.1"/>
        </contitionExpression>
      </predicate>
    </where>
    <variable name="sourceUnitLiteral" variableExps="//@rule.273/@where/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUnitLiteral" variableExps="//@rule.273/@where/@predicate.0/@contitionExpression/@argument.1"/>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_Identifier_id" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceIdentifier" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.274/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.274/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.274/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetIdentifier" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.274/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.274/@variable.1"/>
      </pattern>
    </domain>
    <variable name="sourceIdentifier" variableExps="//@rule.274/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetIdentifier" variableExps="//@rule.274/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_idValue" variableExps="//@rule.274/@domain.0/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_identifier_Identifier" referredRelation="//@rule.25">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.274/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.274/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_NamedElement_entityName" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceNamedElement" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.275/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.275/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.275/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetNamedElement" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.275/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.275/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.275/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceNamedElement" variableExps="//@rule.275/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetNamedElement" variableExps="//@rule.275/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_entityNameValue" variableExps="//@rule.275/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.275/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_NamedElement" referredRelation="//@rule.26">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.275/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.275/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_Signature_serviceName" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSignature" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.276/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.276/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.276/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSignature" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.276/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.276/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.276/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSignature" variableExps="//@rule.276/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSignature" variableExps="//@rule.276/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_serviceNameValue" variableExps="//@rule.276/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.276/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.276/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.276/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_Parameter_parameterName" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParameter" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.277/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.277/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.277/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParameter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.277/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.277/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.277/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceParameter" variableExps="//@rule.277/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetParameter" variableExps="//@rule.277/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_parameterNameValue" variableExps="//@rule.277/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.277/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Parameter" referredRelation="//@rule.45">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.277/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.277/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_Parameter_modifier__Parameter" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParameter" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.278/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.278/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.278/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParameter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.278/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.278/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.278/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceParameter" variableExps="//@rule.278/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetParameter" variableExps="//@rule.278/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_modifier__ParameterValue" variableExps="//@rule.278/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.278/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Parameter" referredRelation="//@rule.45">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.278/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.278/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_Repository_repositoryDescription" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRepository" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.279/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.279/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.279/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRepository" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.279/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.279/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.279/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceRepository" variableExps="//@rule.279/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRepository" variableExps="//@rule.279/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_repositoryDescriptionValue" variableExps="//@rule.279/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.279/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Repository" referredRelation="//@rule.48">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.279/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.279/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_ExceptionType_exceptionName" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceExceptionType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.280/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.280/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.280/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetExceptionType" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.280/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.280/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.280/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceExceptionType" variableExps="//@rule.280/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetExceptionType" variableExps="//@rule.280/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_exceptionNameValue" variableExps="//@rule.280/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.280/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ExceptionType" referredRelation="//@rule.58">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.280/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.280/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_ExceptionType_exceptionMessage" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceExceptionType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.281/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.281/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.281/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetExceptionType" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.281/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.281/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.281/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceExceptionType" variableExps="//@rule.281/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetExceptionType" variableExps="//@rule.281/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_exceptionMessageValue" variableExps="//@rule.281/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.281/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ExceptionType" referredRelation="//@rule.58">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.281/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.281/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_PrimitiveDataType_type" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourcePrimitiveDataType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.282/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.282/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.282/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetPrimitiveDataType" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.282/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.282/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.282/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourcePrimitiveDataType" variableExps="//@rule.282/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetPrimitiveDataType" variableExps="//@rule.282/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_typeValue" variableExps="//@rule.282/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.282/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_PrimitiveDataType" referredRelation="//@rule.76">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.282/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.282/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_Protocol_protocolTypeID" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProtocol" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.283/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.283/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.283/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProtocol" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.283/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.283/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.283/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProtocol" variableExps="//@rule.283/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProtocol" variableExps="//@rule.283/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_protocolTypeIDValue" variableExps="//@rule.283/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.283/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_protocol_Protocol" referredRelation="//@rule.86">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.283/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.283/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_VariableCharacterisation_type" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceVariableCharacterisation" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.284/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.284/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.284/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetVariableCharacterisation" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.284/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.284/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.284/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceVariableCharacterisation" variableExps="//@rule.284/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetVariableCharacterisation" variableExps="//@rule.284/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_typeValue" variableExps="//@rule.284/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.284/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableCharacterisation" referredRelation="//@rule.87">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.284/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.284/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_CharacterisedVariable_characterisationType" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCharacterisedVariable" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.285/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.285/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.285/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCharacterisedVariable" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.285/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.285/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.285/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceCharacterisedVariable" variableExps="//@rule.285/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCharacterisedVariable" variableExps="//@rule.285/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_characterisationTypeValue" variableExps="//@rule.285/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.285/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_CharacterisedVariable" referredRelation="//@rule.211">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.285/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.285/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_InternalAction_failureProbability" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInternalAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.286/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.286/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.286/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInternalAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.286/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.286/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.286/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceInternalAction" variableExps="//@rule.286/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInternalAction" variableExps="//@rule.286/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_failureProbabilityValue" variableExps="//@rule.286/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.286/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_InternalAction" referredRelation="//@rule.104">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.286/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.286/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_ProbabilisticBranchTransition_branchProbability" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProbabilisticBranchTransition" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.287/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.287/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.287/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProbabilisticBranchTransition" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.287/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.287/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.287/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProbabilisticBranchTransition" variableExps="//@rule.287/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProbabilisticBranchTransition" variableExps="//@rule.287/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_branchProbabilityValue" variableExps="//@rule.287/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.287/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ProbabilisticBranchTransition" referredRelation="//@rule.117">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.287/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.287/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_ServiceEffectSpecification_seffTypeID" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceServiceEffectSpecification" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.288/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.288/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.288/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetServiceEffectSpecification" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.288/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.288/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.288/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceServiceEffectSpecification" variableExps="//@rule.288/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetServiceEffectSpecification" variableExps="//@rule.288/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_seffTypeIDValue" variableExps="//@rule.288/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.288/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ServiceEffectSpecification" referredRelation="//@rule.129">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.288/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.288/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_CommunicationLinkResourceSpecification_failureProbability" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCommunicationLinkResourceSpecification" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.289/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.289/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.289/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCommunicationLinkResourceSpecification" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.289/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.289/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.289/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceCommunicationLinkResourceSpecification" variableExps="//@rule.289/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCommunicationLinkResourceSpecification" variableExps="//@rule.289/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_failureProbabilityValue" variableExps="//@rule.289/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.289/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_CommunicationLinkResourceSpecification" referredRelation="//@rule.142">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.289/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.289/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_ProcessingResourceSpecification_MTTR" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProcessingResourceSpecification" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.290/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.290/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.290/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProcessingResourceSpecification" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.290/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.290/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.290/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProcessingResourceSpecification" variableExps="//@rule.290/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProcessingResourceSpecification" variableExps="//@rule.290/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_MTTRValue" variableExps="//@rule.290/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.290/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ProcessingResourceSpecification" referredRelation="//@rule.144">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.290/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.290/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_ProcessingResourceSpecification_MTTF" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProcessingResourceSpecification" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.291/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.291/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.291/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProcessingResourceSpecification" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.291/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.291/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.291/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProcessingResourceSpecification" variableExps="//@rule.291/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProcessingResourceSpecification" variableExps="//@rule.291/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_MTTFValue" variableExps="//@rule.291/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.291/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ProcessingResourceSpecification" referredRelation="//@rule.144">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.291/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.291/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_ProcessingResourceSpecification_schedulingPolicy" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProcessingResourceSpecification" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.292/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.292/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.292/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProcessingResourceSpecification" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.292/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.292/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.292/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProcessingResourceSpecification" variableExps="//@rule.292/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProcessingResourceSpecification" variableExps="//@rule.292/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_schedulingPolicyValue" variableExps="//@rule.292/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.292/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ProcessingResourceSpecification" referredRelation="//@rule.144">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.292/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.292/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_SpecifiedFailureProbability_failureProbability" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSpecifiedFailureProbability" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.293/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.293/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.293/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSpecifiedFailureProbability" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.293/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.293/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.293/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSpecifiedFailureProbability" variableExps="//@rule.293/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSpecifiedFailureProbability" variableExps="//@rule.293/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_failureProbabilityValue" variableExps="//@rule.293/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.293/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_reliability_SpecifiedFailureProbability" referredRelation="//@rule.158">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.293/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.293/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_ClosedWorkload_population" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceClosedWorkload" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.294/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.294/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.294/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetClosedWorkload" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.294/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.294/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.294/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceClosedWorkload" variableExps="//@rule.294/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetClosedWorkload" variableExps="//@rule.294/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_populationValue" variableExps="//@rule.294/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.294/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_ClosedWorkload" referredRelation="//@rule.180">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.294/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.294/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_BranchTransition_branchProbability" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBranchTransition" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.295/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.295/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.295/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBranchTransition" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.295/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.295/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.295/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceBranchTransition" variableExps="//@rule.295/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBranchTransition" variableExps="//@rule.295/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_branchProbabilityValue" variableExps="//@rule.295/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.295/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_BranchTransition" referredRelation="//@rule.184">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.295/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.295/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_ContinuousSample_value" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceContinuousSample" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.296/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.296/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.296/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetContinuousSample" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.296/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.296/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.296/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceContinuousSample" variableExps="//@rule.296/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetContinuousSample" variableExps="//@rule.296/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_valueValue" variableExps="//@rule.296/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.296/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ContinuousSample" referredRelation="//@rule.190">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.296/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.296/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_ContinuousSample_probability" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceContinuousSample" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.297/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.297/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.297/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetContinuousSample" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.297/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.297/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.297/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceContinuousSample" variableExps="//@rule.297/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetContinuousSample" variableExps="//@rule.297/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_probabilityValue" variableExps="//@rule.297/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.297/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ContinuousSample" referredRelation="//@rule.190">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.297/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.297/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_ProbabilityMassFunction_orderedDomain" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProbabilityMassFunction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.298/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.298/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.298/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProbabilityMassFunction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.298/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.298/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.298/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProbabilityMassFunction" variableExps="//@rule.298/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProbabilityMassFunction" variableExps="//@rule.298/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_orderedDomainValue" variableExps="//@rule.298/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.298/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ProbabilityMassFunction" referredRelation="//@rule.251">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.298/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.298/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_Sample_probability" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSample" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.299/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.299/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.299/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSample" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.299/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.299/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.299/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSample" variableExps="//@rule.299/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSample" variableExps="//@rule.299/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_probabilityValue" variableExps="//@rule.299/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.299/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_Sample" referredRelation="//@rule.192">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.299/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.299/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_SamplePDF_distance" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSamplePDF" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.300/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.300/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.300/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSamplePDF" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.300/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.300/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.300/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSamplePDF" variableExps="//@rule.300/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSamplePDF" variableExps="//@rule.300/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_distanceValue" variableExps="//@rule.300/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.300/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_SamplePDF" referredRelation="//@rule.259">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.300/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.300/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_Complex_real" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceComplex" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.301/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.301/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.301/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetComplex" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.301/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.301/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.301/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceComplex" variableExps="//@rule.301/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetComplex" variableExps="//@rule.301/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_realValue" variableExps="//@rule.301/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.301/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_Complex" referredRelation="//@rule.194">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.301/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.301/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_Complex_imaginary" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceComplex" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.302/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.302/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.302/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetComplex" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.302/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.302/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.302/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceComplex" variableExps="//@rule.302/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetComplex" variableExps="//@rule.302/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_imaginaryValue" variableExps="//@rule.302/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.302/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_Complex" referredRelation="//@rule.194">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.302/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.302/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_ExponentialDistribution_rate" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceExponentialDistribution" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.303/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.303/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.303/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetExponentialDistribution" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.303/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.303/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.303/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceExponentialDistribution" variableExps="//@rule.303/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetExponentialDistribution" variableExps="//@rule.303/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_rateValue" variableExps="//@rule.303/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.303/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ExponentialDistribution" referredRelation="//@rule.257">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.303/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.303/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_NormalDistribution_mu" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceNormalDistribution" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.304/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.304/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.304/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetNormalDistribution" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.304/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.304/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.304/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceNormalDistribution" variableExps="//@rule.304/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetNormalDistribution" variableExps="//@rule.304/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_muValue" variableExps="//@rule.304/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.304/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_NormalDistribution" referredRelation="//@rule.255">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.304/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.304/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_NormalDistribution_sigma" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceNormalDistribution" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.305/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.305/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.305/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetNormalDistribution" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.305/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.305/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.305/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceNormalDistribution" variableExps="//@rule.305/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetNormalDistribution" variableExps="//@rule.305/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_sigmaValue" variableExps="//@rule.305/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.305/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_NormalDistribution" referredRelation="//@rule.255">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.305/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.305/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_AbstractNamedReference_referenceName" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAbstractNamedReference" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.306/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.306/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.306/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAbstractNamedReference" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.306/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.306/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.306/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAbstractNamedReference" variableExps="//@rule.306/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAbstractNamedReference" variableExps="//@rule.306/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_referenceNameValue" variableExps="//@rule.306/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.306/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_AbstractNamedReference" referredRelation="//@rule.196">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.306/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.306/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_TermExpression_operation" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceTermExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.307/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.307/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.307/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetTermExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.307/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.307/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.307/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceTermExpression" variableExps="//@rule.307/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetTermExpression" variableExps="//@rule.307/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_operationValue" variableExps="//@rule.307/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.307/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_TermExpression" referredRelation="//@rule.214">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.307/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.307/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_ProductExpression_operation" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProductExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.308/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.308/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.308/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProductExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.308/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.308/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.308/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProductExpression" variableExps="//@rule.308/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProductExpression" variableExps="//@rule.308/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_operationValue" variableExps="//@rule.308/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.308/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_ProductExpression" referredRelation="//@rule.216">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.308/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.308/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_IntLiteral_value" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceIntLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.309/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.309/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.309/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetIntLiteral" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.309/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.309/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.309/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceIntLiteral" variableExps="//@rule.309/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetIntLiteral" variableExps="//@rule.309/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_valueValue" variableExps="//@rule.309/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.309/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_IntLiteral" referredRelation="//@rule.248">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.309/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.309/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_DoubleLiteral_value" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceDoubleLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.310/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.310/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.310/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetDoubleLiteral" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.310/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.310/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.310/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceDoubleLiteral" variableExps="//@rule.310/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetDoubleLiteral" variableExps="//@rule.310/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_valueValue" variableExps="//@rule.310/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.310/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_DoubleLiteral" referredRelation="//@rule.246">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.310/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.310/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_CompareExpression_operation" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompareExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.311/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.311/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.311/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompareExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.311/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.311/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.311/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceCompareExpression" variableExps="//@rule.311/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCompareExpression" variableExps="//@rule.311/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_operationValue" variableExps="//@rule.311/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.311/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_CompareExpression" referredRelation="//@rule.222">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.311/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.311/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_BoolLiteral_value" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBoolLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.312/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.312/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.312/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBoolLiteral" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.312/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.312/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.312/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceBoolLiteral" variableExps="//@rule.312/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBoolLiteral" variableExps="//@rule.312/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_valueValue" variableExps="//@rule.312/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.312/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_BoolLiteral" referredRelation="//@rule.224">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.312/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.312/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_StringLiteral_value" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceStringLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.313/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.313/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.313/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetStringLiteral" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.313/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.313/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.313/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceStringLiteral" variableExps="//@rule.313/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetStringLiteral" variableExps="//@rule.313/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_valueValue" variableExps="//@rule.313/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.313/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_StringLiteral" referredRelation="//@rule.226">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.313/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.313/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_BooleanOperatorExpression_operation" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBooleanOperatorExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.314/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.314/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.314/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBooleanOperatorExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.314/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.314/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.314/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceBooleanOperatorExpression" variableExps="//@rule.314/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBooleanOperatorExpression" variableExps="//@rule.314/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_operationValue" variableExps="//@rule.314/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.314/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_BooleanOperatorExpression" referredRelation="//@rule.230">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.314/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.314/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_FunctionLiteral_id" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceFunctionLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.315/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.315/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.315/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetFunctionLiteral" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.315/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.315/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.315/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceFunctionLiteral" variableExps="//@rule.315/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetFunctionLiteral" variableExps="//@rule.315/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_idValue" variableExps="//@rule.315/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.315/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_FunctionLiteral" referredRelation="//@rule.236">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.315/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.315/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_RandomVariable_specification" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRandomVariable" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.316/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.316/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.316/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRandomVariable" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.316/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.316/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.316/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceRandomVariable" variableExps="//@rule.316/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRandomVariable" variableExps="//@rule.316/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_specificationValue" variableExps="//@rule.316/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.316/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_RandomVariable" referredRelation="//@rule.240">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.316/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.316/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_UnitCarryingElement_unitSpecification" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnitCarryingElement" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.317/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.317/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.317/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnitCarryingElement" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.317/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.317/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.317/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceUnitCarryingElement" variableExps="//@rule.317/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUnitCarryingElement" variableExps="//@rule.317/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_unitSpecificationValue" variableExps="//@rule.317/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.317/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_UnitCarryingElement" referredRelation="//@rule.244">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.317/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.317/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_BaseUnit_name" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBaseUnit" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.318/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.318/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.318/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBaseUnit" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.318/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.318/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.318/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceBaseUnit" variableExps="//@rule.318/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBaseUnit" variableExps="//@rule.318/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_nameValue" variableExps="//@rule.318/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.318/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_BaseUnit" referredRelation="//@rule.264">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.318/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.318/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyAttribute_UnitPower_exponent" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnitPower" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.319/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.319/@variable.0">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.319/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnitPower" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.319/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.319/@variable.1">
          <part>
            <value xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.319/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceUnitPower" variableExps="//@rule.319/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUnitPower" variableExps="//@rule.319/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="local_exponentValue" variableExps="//@rule.319/@domain.0/@pattern/@templateExpression/@part.0/@value //@rule.319/@domain.1/@pattern/@templateExpression/@part.0/@value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_UnitPower" referredRelation="//@rule.270">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.319/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.319/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_CompletionRepository_completions_CompletionRepository" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompletionRepository" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.320/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.320/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_completions_CompletionRepository" bindsTo="//@rule.320/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompletionRepository" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.320/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.320/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_completions_CompletionRepository" bindsTo="//@rule.320/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceCompletionRepository" variableExps="//@rule.320/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCompletionRepository" variableExps="//@rule.320/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_completions_CompletionRepository" variableExps="//@rule.320/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_completions_CompletionRepository" variableExps="//@rule.320/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_completions_CompletionRepository" referredRelation="//@rule.23">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.320/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.320/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_completions_Completion" referredRelation="//@rule.63">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.320/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.320/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_InterfaceProvidingEntity_providedRoles_InterfaceProvidingEntity" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInterfaceProvidingEntity" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.321/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.321/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_providedRoles_InterfaceProvidingEntity" bindsTo="//@rule.321/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInterfaceProvidingEntity" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.321/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.321/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_providedRoles_InterfaceProvidingEntity" bindsTo="//@rule.321/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceInterfaceProvidingEntity" variableExps="//@rule.321/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInterfaceProvidingEntity" variableExps="//@rule.321/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_providedRoles_InterfaceProvidingEntity" variableExps="//@rule.321/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_providedRoles_InterfaceProvidingEntity" variableExps="//@rule.321/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_InterfaceProvidingEntity" referredRelation="//@rule.28">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.321/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.321/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ProvidedRole" referredRelation="//@rule.83">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.321/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.321/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_InterfaceRequiringEntity_requiredRoles_InterfaceRequiringEntity" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInterfaceRequiringEntity" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.322/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.322/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_requiredRoles_InterfaceRequiringEntity" bindsTo="//@rule.322/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInterfaceRequiringEntity" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.322/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.322/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_requiredRoles_InterfaceRequiringEntity" bindsTo="//@rule.322/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceInterfaceRequiringEntity" variableExps="//@rule.322/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInterfaceRequiringEntity" variableExps="//@rule.322/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_requiredRoles_InterfaceRequiringEntity" variableExps="//@rule.322/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_requiredRoles_InterfaceRequiringEntity" variableExps="//@rule.322/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_InterfaceRequiringEntity" referredRelation="//@rule.29">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.322/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.322/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_RequiredRole" referredRelation="//@rule.52">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.322/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.322/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ResourceInterfaceRequiringEntity_resourceRequiredRoles_ResourceInterfaceRequiringEntity" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceInterfaceRequiringEntity" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.323/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.323/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_resourceRequiredRoles_ResourceInterfaceRequiringEntity" bindsTo="//@rule.323/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceInterfaceRequiringEntity" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.323/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.323/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_resourceRequiredRoles_ResourceInterfaceRequiringEntity" bindsTo="//@rule.323/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceResourceInterfaceRequiringEntity" variableExps="//@rule.323/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceInterfaceRequiringEntity" variableExps="//@rule.323/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_resourceRequiredRoles_ResourceInterfaceRequiringEntity" variableExps="//@rule.323/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_resourceRequiredRoles_ResourceInterfaceRequiringEntity" variableExps="//@rule.323/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_ResourceInterfaceRequiringEntity" referredRelation="//@rule.30">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.323/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.323/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ResourceRequiredRole" referredRelation="//@rule.56">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.323/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.323/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ProvidedDelegationConnector_innerProvidedRole_ProvidedDelegationConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProvidedDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.324/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.324/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_innerProvidedRole_ProvidedDelegationConnector" bindsTo="//@rule.324/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProvidedDelegationConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.324/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.324/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_innerProvidedRole_ProvidedDelegationConnector" bindsTo="//@rule.324/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProvidedDelegationConnector" variableExps="//@rule.324/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProvidedDelegationConnector" variableExps="//@rule.324/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_innerProvidedRole_ProvidedDelegationConnector" variableExps="//@rule.324/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_innerProvidedRole_ProvidedDelegationConnector" variableExps="//@rule.324/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ProvidedDelegationConnector" referredRelation="//@rule.70">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.324/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.324/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ProvidedRole" referredRelation="//@rule.83">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.324/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.324/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ProvidedDelegationConnector_outerProvidedRole_ProvidedDelegationConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProvidedDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.325/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.325/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_outerProvidedRole_ProvidedDelegationConnector" bindsTo="//@rule.325/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProvidedDelegationConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.325/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.325/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_outerProvidedRole_ProvidedDelegationConnector" bindsTo="//@rule.325/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProvidedDelegationConnector" variableExps="//@rule.325/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProvidedDelegationConnector" variableExps="//@rule.325/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_outerProvidedRole_ProvidedDelegationConnector" variableExps="//@rule.325/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_outerProvidedRole_ProvidedDelegationConnector" variableExps="//@rule.325/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ProvidedDelegationConnector" referredRelation="//@rule.70">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.325/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.325/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ProvidedRole" referredRelation="//@rule.83">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.325/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.325/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ProvidedDelegationConnector_assemblyContext_ProvidedDelegationConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProvidedDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.326/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.326/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_assemblyContext_ProvidedDelegationConnector" bindsTo="//@rule.326/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProvidedDelegationConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.326/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.326/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_assemblyContext_ProvidedDelegationConnector" bindsTo="//@rule.326/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProvidedDelegationConnector" variableExps="//@rule.326/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProvidedDelegationConnector" variableExps="//@rule.326/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_assemblyContext_ProvidedDelegationConnector" variableExps="//@rule.326/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_assemblyContext_ProvidedDelegationConnector" variableExps="//@rule.326/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ProvidedDelegationConnector" referredRelation="//@rule.70">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.326/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.326/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.326/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.326/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ProvidedDelegationConnector_parentStructure_ProvidedDelegationConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProvidedDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.327/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.327/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_parentStructure_ProvidedDelegationConnector" bindsTo="//@rule.327/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProvidedDelegationConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.327/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.327/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_parentStructure_ProvidedDelegationConnector" bindsTo="//@rule.327/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProvidedDelegationConnector" variableExps="//@rule.327/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProvidedDelegationConnector" variableExps="//@rule.327/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_parentStructure_ProvidedDelegationConnector" variableExps="//@rule.327/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_parentStructure_ProvidedDelegationConnector" variableExps="//@rule.327/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ProvidedDelegationConnector" referredRelation="//@rule.70">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.327/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.327/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ComposedStructure" referredRelation="//@rule.39">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.327/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.327/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AssemblyContext_encapsulatedComponent_AssemblyContext" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAssemblyContext" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.328/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.328/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_encapsulatedComponent_AssemblyContext" bindsTo="//@rule.328/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAssemblyContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.328/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.328/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_encapsulatedComponent_AssemblyContext" bindsTo="//@rule.328/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAssemblyContext" variableExps="//@rule.328/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAssemblyContext" variableExps="//@rule.328/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_encapsulatedComponent_AssemblyContext" variableExps="//@rule.328/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_encapsulatedComponent_AssemblyContext" variableExps="//@rule.328/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.328/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.328/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_RepositoryComponent" referredRelation="//@rule.50">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.328/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.328/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AssemblyContext_parentStructure_AssemblyContext" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAssemblyContext" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.329/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.329/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_parentStructure_AssemblyContext" bindsTo="//@rule.329/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAssemblyContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.329/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.329/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_parentStructure_AssemblyContext" bindsTo="//@rule.329/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAssemblyContext" variableExps="//@rule.329/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAssemblyContext" variableExps="//@rule.329/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_parentStructure_AssemblyContext" variableExps="//@rule.329/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_parentStructure_AssemblyContext" variableExps="//@rule.329/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.329/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.329/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ComposedStructure" referredRelation="//@rule.39">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.329/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.329/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AssemblyContext_configParameterUsages_AssemblyContext" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAssemblyContext" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.330/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.330/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_configParameterUsages_AssemblyContext" bindsTo="//@rule.330/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAssemblyContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.330/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.330/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_configParameterUsages_AssemblyContext" bindsTo="//@rule.330/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAssemblyContext" variableExps="//@rule.330/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAssemblyContext" variableExps="//@rule.330/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_configParameterUsages_AssemblyContext" variableExps="//@rule.330/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_configParameterUsages_AssemblyContext" variableExps="//@rule.330/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.330/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.330/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableUsage" referredRelation="//@rule.89">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.330/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.330/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_RequiredDelegationConnector_innerRequiredRole_RequiredDelegationConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRequiredDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.331/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.331/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_innerRequiredRole_RequiredDelegationConnector" bindsTo="//@rule.331/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRequiredDelegationConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.331/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.331/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_innerRequiredRole_RequiredDelegationConnector" bindsTo="//@rule.331/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceRequiredDelegationConnector" variableExps="//@rule.331/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRequiredDelegationConnector" variableExps="//@rule.331/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_innerRequiredRole_RequiredDelegationConnector" variableExps="//@rule.331/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_innerRequiredRole_RequiredDelegationConnector" variableExps="//@rule.331/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_RequiredDelegationConnector" referredRelation="//@rule.68">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.331/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.331/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_RequiredRole" referredRelation="//@rule.52">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.331/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.331/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_RequiredDelegationConnector_outerRequiredRole_RequiredDelegationConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRequiredDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.332/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.332/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_outerRequiredRole_RequiredDelegationConnector" bindsTo="//@rule.332/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRequiredDelegationConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.332/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.332/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_outerRequiredRole_RequiredDelegationConnector" bindsTo="//@rule.332/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceRequiredDelegationConnector" variableExps="//@rule.332/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRequiredDelegationConnector" variableExps="//@rule.332/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_outerRequiredRole_RequiredDelegationConnector" variableExps="//@rule.332/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_outerRequiredRole_RequiredDelegationConnector" variableExps="//@rule.332/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_RequiredDelegationConnector" referredRelation="//@rule.68">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.332/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.332/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_RequiredRole" referredRelation="//@rule.52">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.332/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.332/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_RequiredDelegationConnector_assemblyContext_RequiredDelegationConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRequiredDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.333/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.333/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_assemblyContext_RequiredDelegationConnector" bindsTo="//@rule.333/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRequiredDelegationConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.333/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.333/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_assemblyContext_RequiredDelegationConnector" bindsTo="//@rule.333/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceRequiredDelegationConnector" variableExps="//@rule.333/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRequiredDelegationConnector" variableExps="//@rule.333/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_assemblyContext_RequiredDelegationConnector" variableExps="//@rule.333/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_assemblyContext_RequiredDelegationConnector" variableExps="//@rule.333/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_RequiredDelegationConnector" referredRelation="//@rule.68">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.333/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.333/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.333/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.333/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_RequiredDelegationConnector_parentStructure_RequiredDelegationConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRequiredDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.334/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.334/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_parentStructure_RequiredDelegationConnector" bindsTo="//@rule.334/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRequiredDelegationConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.334/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.334/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_parentStructure_RequiredDelegationConnector" bindsTo="//@rule.334/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceRequiredDelegationConnector" variableExps="//@rule.334/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRequiredDelegationConnector" variableExps="//@rule.334/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_parentStructure_RequiredDelegationConnector" variableExps="//@rule.334/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_parentStructure_RequiredDelegationConnector" variableExps="//@rule.334/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_RequiredDelegationConnector" referredRelation="//@rule.68">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.334/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.334/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ComposedStructure" referredRelation="//@rule.39">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.334/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.334/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AssemblyConnector_requiringAssemblyContext_AssemblyConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.335/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.335/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_requiringAssemblyContext_AssemblyConnector" bindsTo="//@rule.335/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAssemblyConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.335/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.335/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_requiringAssemblyContext_AssemblyConnector" bindsTo="//@rule.335/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAssemblyConnector" variableExps="//@rule.335/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAssemblyConnector" variableExps="//@rule.335/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_requiringAssemblyContext_AssemblyConnector" variableExps="//@rule.335/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_requiringAssemblyContext_AssemblyConnector" variableExps="//@rule.335/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyConnector" referredRelation="//@rule.35">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.335/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.335/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.335/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.335/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AssemblyConnector_providingAssemblyContext_AssemblyConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.336/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.336/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_providingAssemblyContext_AssemblyConnector" bindsTo="//@rule.336/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAssemblyConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.336/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.336/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_providingAssemblyContext_AssemblyConnector" bindsTo="//@rule.336/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAssemblyConnector" variableExps="//@rule.336/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAssemblyConnector" variableExps="//@rule.336/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_providingAssemblyContext_AssemblyConnector" variableExps="//@rule.336/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_providingAssemblyContext_AssemblyConnector" variableExps="//@rule.336/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyConnector" referredRelation="//@rule.35">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.336/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.336/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.336/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.336/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AssemblyConnector_providedRole_AssemblyConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.337/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.337/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_providedRole_AssemblyConnector" bindsTo="//@rule.337/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAssemblyConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.337/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.337/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_providedRole_AssemblyConnector" bindsTo="//@rule.337/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAssemblyConnector" variableExps="//@rule.337/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAssemblyConnector" variableExps="//@rule.337/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_providedRole_AssemblyConnector" variableExps="//@rule.337/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_providedRole_AssemblyConnector" variableExps="//@rule.337/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyConnector" referredRelation="//@rule.35">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.337/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.337/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ProvidedRole" referredRelation="//@rule.83">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.337/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.337/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AssemblyConnector_requiredRole_AssemblyConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.338/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.338/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_requiredRole_AssemblyConnector" bindsTo="//@rule.338/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAssemblyConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.338/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.338/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_requiredRole_AssemblyConnector" bindsTo="//@rule.338/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAssemblyConnector" variableExps="//@rule.338/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAssemblyConnector" variableExps="//@rule.338/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_requiredRole_AssemblyConnector" variableExps="//@rule.338/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_requiredRole_AssemblyConnector" variableExps="//@rule.338/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyConnector" referredRelation="//@rule.35">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.338/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.338/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_RequiredRole" referredRelation="//@rule.52">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.338/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.338/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AssemblyConnector_parentStructure_AssemblyConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAssemblyConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.339/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.339/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_parentStructure_AssemblyConnector" bindsTo="//@rule.339/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAssemblyConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.339/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.339/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_parentStructure_AssemblyConnector" bindsTo="//@rule.339/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAssemblyConnector" variableExps="//@rule.339/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAssemblyConnector" variableExps="//@rule.339/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_parentStructure_AssemblyConnector" variableExps="//@rule.339/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_parentStructure_AssemblyConnector" variableExps="//@rule.339/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyConnector" referredRelation="//@rule.35">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.339/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.339/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ComposedStructure" referredRelation="//@rule.39">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.339/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.339/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ResourceRequiredDelegationConnector_parentStructure_ResourceRequiredDelegationConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceRequiredDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.340/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.340/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_parentStructure_ResourceRequiredDelegationConnector" bindsTo="//@rule.340/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceRequiredDelegationConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.340/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.340/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_parentStructure_ResourceRequiredDelegationConnector" bindsTo="//@rule.340/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceResourceRequiredDelegationConnector" variableExps="//@rule.340/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceRequiredDelegationConnector" variableExps="//@rule.340/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_parentStructure_ResourceRequiredDelegationConnector" variableExps="//@rule.340/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_parentStructure_ResourceRequiredDelegationConnector" variableExps="//@rule.340/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ResourceRequiredDelegationConnector" referredRelation="//@rule.37">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.340/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.340/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ComposedStructure" referredRelation="//@rule.39">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.340/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.340/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ResourceRequiredDelegationConnector_innerResourceRequiredRole_ResourceRequiredDelegationConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceRequiredDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.341/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.341/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_innerResourceRequiredRole_ResourceRequiredDelegationConnector" bindsTo="//@rule.341/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceRequiredDelegationConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.341/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.341/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_innerResourceRequiredRole_ResourceRequiredDelegationConnector" bindsTo="//@rule.341/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceResourceRequiredDelegationConnector" variableExps="//@rule.341/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceRequiredDelegationConnector" variableExps="//@rule.341/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_innerResourceRequiredRole_ResourceRequiredDelegationConnector" variableExps="//@rule.341/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_innerResourceRequiredRole_ResourceRequiredDelegationConnector" variableExps="//@rule.341/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ResourceRequiredDelegationConnector" referredRelation="//@rule.37">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.341/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.341/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ResourceRequiredRole" referredRelation="//@rule.56">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.341/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.341/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ResourceRequiredDelegationConnector_outerResourceRequiredRole_ResourceRequiredDelegationConnector" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceRequiredDelegationConnector" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.342/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.342/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_outerResourceRequiredRole_ResourceRequiredDelegationConnector" bindsTo="//@rule.342/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceRequiredDelegationConnector" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.342/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.342/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_outerResourceRequiredRole_ResourceRequiredDelegationConnector" bindsTo="//@rule.342/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceResourceRequiredDelegationConnector" variableExps="//@rule.342/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceRequiredDelegationConnector" variableExps="//@rule.342/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_outerResourceRequiredRole_ResourceRequiredDelegationConnector" variableExps="//@rule.342/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_outerResourceRequiredRole_ResourceRequiredDelegationConnector" variableExps="//@rule.342/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ResourceRequiredDelegationConnector" referredRelation="//@rule.37">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.342/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.342/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ResourceRequiredRole" referredRelation="//@rule.56">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.342/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.342/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ComposedStructure_assemblyContexts_ComposedStructure" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceComposedStructure" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.343/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.343/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_assemblyContexts_ComposedStructure" bindsTo="//@rule.343/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetComposedStructure" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.343/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.343/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_assemblyContexts_ComposedStructure" bindsTo="//@rule.343/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceComposedStructure" variableExps="//@rule.343/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetComposedStructure" variableExps="//@rule.343/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_assemblyContexts_ComposedStructure" variableExps="//@rule.343/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_assemblyContexts_ComposedStructure" variableExps="//@rule.343/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ComposedStructure" referredRelation="//@rule.39">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.343/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.343/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.343/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.343/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ComposedStructure_providedDelegationConnectors_ComposedStructure" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceComposedStructure" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.344/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.344/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_providedDelegationConnectors_ComposedStructure" bindsTo="//@rule.344/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetComposedStructure" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.344/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.344/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_providedDelegationConnectors_ComposedStructure" bindsTo="//@rule.344/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceComposedStructure" variableExps="//@rule.344/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetComposedStructure" variableExps="//@rule.344/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_providedDelegationConnectors_ComposedStructure" variableExps="//@rule.344/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_providedDelegationConnectors_ComposedStructure" variableExps="//@rule.344/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ComposedStructure" referredRelation="//@rule.39">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.344/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.344/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ProvidedDelegationConnector" referredRelation="//@rule.70">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.344/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.344/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ComposedStructure_requiredDelegationConnectors_ComposedStructure" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceComposedStructure" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.345/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.345/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_requiredDelegationConnectors_ComposedStructure" bindsTo="//@rule.345/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetComposedStructure" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.345/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.345/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_requiredDelegationConnectors_ComposedStructure" bindsTo="//@rule.345/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceComposedStructure" variableExps="//@rule.345/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetComposedStructure" variableExps="//@rule.345/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_requiredDelegationConnectors_ComposedStructure" variableExps="//@rule.345/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_requiredDelegationConnectors_ComposedStructure" variableExps="//@rule.345/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ComposedStructure" referredRelation="//@rule.39">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.345/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.345/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_RequiredDelegationConnector" referredRelation="//@rule.68">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.345/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.345/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ComposedStructure_assemblyConnectors_ComposedStructure" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceComposedStructure" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.346/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.346/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_assemblyConnectors_ComposedStructure" bindsTo="//@rule.346/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetComposedStructure" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.346/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.346/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_assemblyConnectors_ComposedStructure" bindsTo="//@rule.346/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceComposedStructure" variableExps="//@rule.346/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetComposedStructure" variableExps="//@rule.346/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_assemblyConnectors_ComposedStructure" variableExps="//@rule.346/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_assemblyConnectors_ComposedStructure" variableExps="//@rule.346/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ComposedStructure" referredRelation="//@rule.39">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.346/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.346/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyConnector" referredRelation="//@rule.35">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.346/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.346/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ComposedStructure_resourceRequiredDelegationConnectors_ComposedStructure" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceComposedStructure" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.347/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.347/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_resourceRequiredDelegationConnectors_ComposedStructure" bindsTo="//@rule.347/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetComposedStructure" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.347/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.347/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_resourceRequiredDelegationConnectors_ComposedStructure" bindsTo="//@rule.347/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceComposedStructure" variableExps="//@rule.347/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetComposedStructure" variableExps="//@rule.347/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_resourceRequiredDelegationConnectors_ComposedStructure" variableExps="//@rule.347/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_resourceRequiredDelegationConnectors_ComposedStructure" variableExps="//@rule.347/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ComposedStructure" referredRelation="//@rule.39">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.347/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.347/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_ResourceRequiredDelegationConnector" referredRelation="//@rule.37">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.347/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.347/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_PassiveResource_capacity_PassiveResource" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourcePassiveResource" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.348/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.348/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_capacity_PassiveResource" bindsTo="//@rule.348/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetPassiveResource" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.348/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.348/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_capacity_PassiveResource" bindsTo="//@rule.348/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourcePassiveResource" variableExps="//@rule.348/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetPassiveResource" variableExps="//@rule.348/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_capacity_PassiveResource" variableExps="//@rule.348/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_capacity_PassiveResource" variableExps="//@rule.348/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_PassiveResource" referredRelation="//@rule.41">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.348/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.348/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_core_PCMRandomVariable" referredRelation="//@rule.241">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.348/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.348/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Signature_parameters__Signature" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSignature" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.349/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.349/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_parameters__Signature" bindsTo="//@rule.349/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSignature" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.349/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.349/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_parameters__Signature" bindsTo="//@rule.349/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSignature" variableExps="//@rule.349/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSignature" variableExps="//@rule.349/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_parameters__Signature" variableExps="//@rule.349/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_parameters__Signature" variableExps="//@rule.349/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.349/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.349/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Parameter" referredRelation="//@rule.45">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.349/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.349/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Signature_interface_Signature" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSignature" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.350/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.350/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_interface_Signature" bindsTo="//@rule.350/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSignature" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.350/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.350/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_interface_Signature" bindsTo="//@rule.350/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSignature" variableExps="//@rule.350/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSignature" variableExps="//@rule.350/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_interface_Signature" variableExps="//@rule.350/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_interface_Signature" variableExps="//@rule.350/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.350/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.350/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.350/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.350/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Signature_returntype__Signature" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSignature" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.351/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.351/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_returntype__Signature" bindsTo="//@rule.351/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSignature" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.351/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.351/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_returntype__Signature" bindsTo="//@rule.351/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSignature" variableExps="//@rule.351/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSignature" variableExps="//@rule.351/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_returntype__Signature" variableExps="//@rule.351/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_returntype__Signature" variableExps="//@rule.351/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.351/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.351/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_DataType" referredRelation="//@rule.47">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.351/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.351/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Signature_exceptions__Signature" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSignature" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.352/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.352/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_exceptions__Signature" bindsTo="//@rule.352/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSignature" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.352/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.352/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_exceptions__Signature" bindsTo="//@rule.352/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSignature" variableExps="//@rule.352/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSignature" variableExps="//@rule.352/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_exceptions__Signature" variableExps="//@rule.352/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_exceptions__Signature" variableExps="//@rule.352/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.352/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.352/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ExceptionType" referredRelation="//@rule.58">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.352/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.352/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Parameter_datatype__Parameter" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParameter" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.353/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.353/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_datatype__Parameter" bindsTo="//@rule.353/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParameter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.353/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.353/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_datatype__Parameter" bindsTo="//@rule.353/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceParameter" variableExps="//@rule.353/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetParameter" variableExps="//@rule.353/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_datatype__Parameter" variableExps="//@rule.353/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_datatype__Parameter" variableExps="//@rule.353/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Parameter" referredRelation="//@rule.45">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.353/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.353/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_DataType" referredRelation="//@rule.47">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.353/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.353/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CreateReference_Parameter_datatype__Parameter" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParameter" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.354/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.354/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_datatype__Parameter" bindsTo="//@rule.354/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParameter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.354/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.354/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_datatype__Parameter" bindsTo="//@rule.354/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceParameter" variableExps="//@rule.354/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetParameter" variableExps="//@rule.354/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_datatype__Parameter"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Parameter" referredRelation="//@rule.45">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.354/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.354/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Parameter_signature_Parameter" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParameter" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.355/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.355/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_signature_Parameter" bindsTo="//@rule.355/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParameter" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.355/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.355/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_signature_Parameter" bindsTo="//@rule.355/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceParameter" variableExps="//@rule.355/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetParameter" variableExps="//@rule.355/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_signature_Parameter" variableExps="//@rule.355/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_signature_Parameter" variableExps="//@rule.355/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Parameter" referredRelation="//@rule.45">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.355/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.355/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.355/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.355/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_DataType_repository_DataType" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceDataType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.356/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.356/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_repository_DataType" bindsTo="//@rule.356/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetDataType" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.356/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.356/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_repository_DataType" bindsTo="//@rule.356/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceDataType" variableExps="//@rule.356/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetDataType" variableExps="//@rule.356/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_repository_DataType" variableExps="//@rule.356/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_repository_DataType" variableExps="//@rule.356/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_DataType" referredRelation="//@rule.47">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.356/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.356/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Repository" referredRelation="//@rule.48">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.356/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.356/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Repository_components__Repository" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRepository" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.357/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.357/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_components__Repository" bindsTo="//@rule.357/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRepository" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.357/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.357/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_components__Repository" bindsTo="//@rule.357/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceRepository" variableExps="//@rule.357/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRepository" variableExps="//@rule.357/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_components__Repository" variableExps="//@rule.357/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_components__Repository" variableExps="//@rule.357/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Repository" referredRelation="//@rule.48">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.357/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.357/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_RepositoryComponent" referredRelation="//@rule.50">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.357/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.357/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Repository_interfaces__Repository" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRepository" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.358/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.358/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_interfaces__Repository" bindsTo="//@rule.358/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRepository" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.358/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.358/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_interfaces__Repository" bindsTo="//@rule.358/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceRepository" variableExps="//@rule.358/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRepository" variableExps="//@rule.358/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_interfaces__Repository" variableExps="//@rule.358/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_interfaces__Repository" variableExps="//@rule.358/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Repository" referredRelation="//@rule.48">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.358/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.358/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.358/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.358/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Repository_datatypes_Repository" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRepository" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.359/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.359/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_datatypes_Repository" bindsTo="//@rule.359/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRepository" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.359/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.359/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_datatypes_Repository" bindsTo="//@rule.359/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceRepository" variableExps="//@rule.359/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRepository" variableExps="//@rule.359/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_datatypes_Repository" variableExps="//@rule.359/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_datatypes_Repository" variableExps="//@rule.359/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Repository" referredRelation="//@rule.48">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.359/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.359/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_DataType" referredRelation="//@rule.47">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.359/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.359/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_RepositoryComponent_repository_RepositoryComponent" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRepositoryComponent" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.360/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.360/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_repository_RepositoryComponent" bindsTo="//@rule.360/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRepositoryComponent" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.360/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.360/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_repository_RepositoryComponent" bindsTo="//@rule.360/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceRepositoryComponent" variableExps="//@rule.360/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRepositoryComponent" variableExps="//@rule.360/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_repository_RepositoryComponent" variableExps="//@rule.360/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_repository_RepositoryComponent" variableExps="//@rule.360/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_RepositoryComponent" referredRelation="//@rule.50">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.360/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.360/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Repository" referredRelation="//@rule.48">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.360/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.360/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_RequiredRole_requiredInterface__RequiredRole" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRequiredRole" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.361/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.361/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_requiredInterface__RequiredRole" bindsTo="//@rule.361/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRequiredRole" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.361/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.361/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_requiredInterface__RequiredRole" bindsTo="//@rule.361/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceRequiredRole" variableExps="//@rule.361/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRequiredRole" variableExps="//@rule.361/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_requiredInterface__RequiredRole" variableExps="//@rule.361/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_requiredInterface__RequiredRole" variableExps="//@rule.361/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_RequiredRole" referredRelation="//@rule.52">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.361/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.361/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.361/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.361/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_RequiredRole_requiringEntity_RequiredRole" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRequiredRole" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.362/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.362/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_requiringEntity_RequiredRole" bindsTo="//@rule.362/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRequiredRole" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.362/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.362/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_requiringEntity_RequiredRole" bindsTo="//@rule.362/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceRequiredRole" variableExps="//@rule.362/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRequiredRole" variableExps="//@rule.362/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_requiringEntity_RequiredRole" variableExps="//@rule.362/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_requiringEntity_RequiredRole" variableExps="//@rule.362/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_RequiredRole" referredRelation="//@rule.52">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.362/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.362/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_InterfaceRequiringEntity" referredRelation="//@rule.29">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.362/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.362/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Interface_parentInterface__Interface" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInterface" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.363/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.363/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_parentInterface__Interface" bindsTo="//@rule.363/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInterface" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.363/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.363/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_parentInterface__Interface" bindsTo="//@rule.363/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceInterface" variableExps="//@rule.363/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInterface" variableExps="//@rule.363/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_parentInterface__Interface" variableExps="//@rule.363/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_parentInterface__Interface" variableExps="//@rule.363/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.363/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.363/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.363/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.363/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Interface_ancestorInterfaces_Interface" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInterface" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.364/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.364/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_ancestorInterfaces_Interface" bindsTo="//@rule.364/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInterface" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.364/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.364/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_ancestorInterfaces_Interface" bindsTo="//@rule.364/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceInterface" variableExps="//@rule.364/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInterface" variableExps="//@rule.364/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_ancestorInterfaces_Interface" variableExps="//@rule.364/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_ancestorInterfaces_Interface" variableExps="//@rule.364/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.364/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.364/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.364/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.364/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Interface_protocols__Interface" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInterface" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.365/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.365/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_protocols__Interface" bindsTo="//@rule.365/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInterface" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.365/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.365/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_protocols__Interface" bindsTo="//@rule.365/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceInterface" variableExps="//@rule.365/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInterface" variableExps="//@rule.365/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_protocols__Interface" variableExps="//@rule.365/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_protocols__Interface" variableExps="//@rule.365/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.365/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.365/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_protocol_Protocol" referredRelation="//@rule.86">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.365/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.365/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Interface_signatures__Interface" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInterface" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.366/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.366/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_signatures__Interface" bindsTo="//@rule.366/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInterface" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.366/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.366/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_signatures__Interface" bindsTo="//@rule.366/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceInterface" variableExps="//@rule.366/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInterface" variableExps="//@rule.366/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_signatures__Interface" variableExps="//@rule.366/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_signatures__Interface" variableExps="//@rule.366/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.366/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.366/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.366/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.366/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Interface_repository_Interface" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInterface" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.367/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.367/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_repository_Interface" bindsTo="//@rule.367/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInterface" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.367/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.367/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_repository_Interface" bindsTo="//@rule.367/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceInterface" variableExps="//@rule.367/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInterface" variableExps="//@rule.367/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_repository_Interface" variableExps="//@rule.367/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_repository_Interface" variableExps="//@rule.367/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.367/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.367/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Repository" referredRelation="//@rule.48">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.367/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.367/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ResourceRequiredRole_requiredInterface_ResourceRequiredRole" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceRequiredRole" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.368/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.368/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_requiredInterface_ResourceRequiredRole" bindsTo="//@rule.368/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceRequiredRole" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.368/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.368/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_requiredInterface_ResourceRequiredRole" bindsTo="//@rule.368/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceResourceRequiredRole" variableExps="//@rule.368/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceRequiredRole" variableExps="//@rule.368/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_requiredInterface_ResourceRequiredRole" variableExps="//@rule.368/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_requiredInterface_ResourceRequiredRole" variableExps="//@rule.368/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ResourceRequiredRole" referredRelation="//@rule.56">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.368/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.368/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.368/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.368/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ResourceRequiredRole_resourceRequiringEntity_ResourceRequiredRole" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceRequiredRole" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.369/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.369/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_resourceRequiringEntity_ResourceRequiredRole" bindsTo="//@rule.369/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceRequiredRole" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.369/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.369/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_resourceRequiringEntity_ResourceRequiredRole" bindsTo="//@rule.369/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceResourceRequiredRole" variableExps="//@rule.369/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceRequiredRole" variableExps="//@rule.369/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_resourceRequiringEntity_ResourceRequiredRole" variableExps="//@rule.369/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_resourceRequiringEntity_ResourceRequiredRole" variableExps="//@rule.369/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ResourceRequiredRole" referredRelation="//@rule.56">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.369/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.369/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_ResourceInterfaceRequiringEntity" referredRelation="//@rule.30">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.369/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.369/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ImplementationComponentType_parentCompleteComponentTypes" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceImplementationComponentType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.370/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.370/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_parentCompleteComponentTypes" bindsTo="//@rule.370/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetImplementationComponentType" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.370/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.370/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_parentCompleteComponentTypes" bindsTo="//@rule.370/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceImplementationComponentType" variableExps="//@rule.370/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetImplementationComponentType" variableExps="//@rule.370/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_parentCompleteComponentTypes" variableExps="//@rule.370/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_parentCompleteComponentTypes" variableExps="//@rule.370/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ImplementationComponentType" referredRelation="//@rule.62">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.370/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.370/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_CompleteComponentType" referredRelation="//@rule.65">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.370/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.370/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ImplementationComponentType_componentParameterUsage_ImplementationComponentType" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceImplementationComponentType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.371/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.371/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_componentParameterUsage_ImplementationComponentType" bindsTo="//@rule.371/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetImplementationComponentType" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.371/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.371/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_componentParameterUsage_ImplementationComponentType" bindsTo="//@rule.371/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceImplementationComponentType" variableExps="//@rule.371/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetImplementationComponentType" variableExps="//@rule.371/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_componentParameterUsage_ImplementationComponentType" variableExps="//@rule.371/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_componentParameterUsage_ImplementationComponentType" variableExps="//@rule.371/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ImplementationComponentType" referredRelation="//@rule.62">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.371/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.371/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableUsage" referredRelation="//@rule.89">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.371/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.371/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_CompleteComponentType_parentProvidesComponentTypes" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompleteComponentType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.372/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.372/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_parentProvidesComponentTypes" bindsTo="//@rule.372/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompleteComponentType" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.372/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.372/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_parentProvidesComponentTypes" bindsTo="//@rule.372/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceCompleteComponentType" variableExps="//@rule.372/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCompleteComponentType" variableExps="//@rule.372/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_parentProvidesComponentTypes" variableExps="//@rule.372/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_parentProvidesComponentTypes" variableExps="//@rule.372/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_CompleteComponentType" referredRelation="//@rule.65">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.372/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.372/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ProvidesComponentType" referredRelation="//@rule.60">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.372/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.372/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_BasicComponent_serviceEffectSpecifications__BasicComponent" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBasicComponent" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.373/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.373/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_serviceEffectSpecifications__BasicComponent" bindsTo="//@rule.373/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBasicComponent" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.373/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.373/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_serviceEffectSpecifications__BasicComponent" bindsTo="//@rule.373/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceBasicComponent" variableExps="//@rule.373/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBasicComponent" variableExps="//@rule.373/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_serviceEffectSpecifications__BasicComponent" variableExps="//@rule.373/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_serviceEffectSpecifications__BasicComponent" variableExps="//@rule.373/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_BasicComponent" referredRelation="//@rule.74">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.373/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.373/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ServiceEffectSpecification" referredRelation="//@rule.129">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.373/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.373/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_BasicComponent_passiveResource_BasicComponent" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBasicComponent" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.374/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.374/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_passiveResource_BasicComponent" bindsTo="//@rule.374/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBasicComponent" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.374/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.374/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_passiveResource_BasicComponent" bindsTo="//@rule.374/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceBasicComponent" variableExps="//@rule.374/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBasicComponent" variableExps="//@rule.374/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_passiveResource_BasicComponent" variableExps="//@rule.374/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_passiveResource_BasicComponent" variableExps="//@rule.374/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_BasicComponent" referredRelation="//@rule.74">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.374/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.374/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_PassiveResource" referredRelation="//@rule.41">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.374/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.374/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_CollectionDataType_innerType_CollectionDataType" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCollectionDataType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.375/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.375/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_innerType_CollectionDataType" bindsTo="//@rule.375/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCollectionDataType" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.375/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.375/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_innerType_CollectionDataType" bindsTo="//@rule.375/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceCollectionDataType" variableExps="//@rule.375/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCollectionDataType" variableExps="//@rule.375/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_innerType_CollectionDataType" variableExps="//@rule.375/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_innerType_CollectionDataType" variableExps="//@rule.375/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_CollectionDataType" referredRelation="//@rule.77">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.375/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.375/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_DataType" referredRelation="//@rule.47">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.375/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.375/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CreateReference_CollectionDataType_innerType_CollectionDataType" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCollectionDataType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.376/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.376/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_innerType_CollectionDataType" bindsTo="//@rule.376/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCollectionDataType" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.376/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.376/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_innerType_CollectionDataType" bindsTo="//@rule.376/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceCollectionDataType" variableExps="//@rule.376/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCollectionDataType" variableExps="//@rule.376/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_innerType_CollectionDataType"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_CollectionDataType" referredRelation="//@rule.77">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.376/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.376/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_CompositeDataType_parentType_CompositeDataType" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompositeDataType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.377/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.377/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_parentType_CompositeDataType" bindsTo="//@rule.377/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompositeDataType" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.377/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.377/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_parentType_CompositeDataType" bindsTo="//@rule.377/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceCompositeDataType" variableExps="//@rule.377/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCompositeDataType" variableExps="//@rule.377/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_parentType_CompositeDataType" variableExps="//@rule.377/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_parentType_CompositeDataType" variableExps="//@rule.377/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_CompositeDataType" referredRelation="//@rule.79">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.377/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.377/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_CompositeDataType" referredRelation="//@rule.79">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.377/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.377/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_CompositeDataType_innerDeclaration_CompositeDataType" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompositeDataType" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.378/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.378/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_innerDeclaration_CompositeDataType" bindsTo="//@rule.378/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompositeDataType" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.378/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.378/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_innerDeclaration_CompositeDataType" bindsTo="//@rule.378/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceCompositeDataType" variableExps="//@rule.378/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCompositeDataType" variableExps="//@rule.378/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_innerDeclaration_CompositeDataType" variableExps="//@rule.378/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_innerDeclaration_CompositeDataType" variableExps="//@rule.378/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_CompositeDataType" referredRelation="//@rule.79">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.378/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.378/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_InnerDeclaration" referredRelation="//@rule.81">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.378/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.378/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_InnerDeclaration_datatype_InnerDeclaration" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInnerDeclaration" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.379/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.379/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_datatype_InnerDeclaration" bindsTo="//@rule.379/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInnerDeclaration" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.379/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.379/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_datatype_InnerDeclaration" bindsTo="//@rule.379/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceInnerDeclaration" variableExps="//@rule.379/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInnerDeclaration" variableExps="//@rule.379/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_datatype_InnerDeclaration" variableExps="//@rule.379/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_datatype_InnerDeclaration" variableExps="//@rule.379/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_InnerDeclaration" referredRelation="//@rule.81">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.379/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.379/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_DataType" referredRelation="//@rule.47">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.379/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.379/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CreateReference_InnerDeclaration_datatype_InnerDeclaration" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceInnerDeclaration" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.380/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.380/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_datatype_InnerDeclaration" bindsTo="//@rule.380/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetInnerDeclaration" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.380/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.380/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_datatype_InnerDeclaration" bindsTo="//@rule.380/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceInnerDeclaration" variableExps="//@rule.380/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetInnerDeclaration" variableExps="//@rule.380/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_datatype_InnerDeclaration"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_InnerDeclaration" referredRelation="//@rule.81">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.380/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.380/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ProvidedRole_providedInterface__ProvidedRole" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProvidedRole" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.381/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.381/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_providedInterface__ProvidedRole" bindsTo="//@rule.381/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProvidedRole" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.381/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.381/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_providedInterface__ProvidedRole" bindsTo="//@rule.381/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProvidedRole" variableExps="//@rule.381/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProvidedRole" variableExps="//@rule.381/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_providedInterface__ProvidedRole" variableExps="//@rule.381/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_providedInterface__ProvidedRole" variableExps="//@rule.381/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ProvidedRole" referredRelation="//@rule.83">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.381/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.381/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Interface" referredRelation="//@rule.54">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.381/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.381/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ProvidedRole_providingEntity_ProvidedRole" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProvidedRole" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.382/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.382/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_providingEntity_ProvidedRole" bindsTo="//@rule.382/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProvidedRole" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.382/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.382/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_providingEntity_ProvidedRole" bindsTo="//@rule.382/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProvidedRole" variableExps="//@rule.382/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProvidedRole" variableExps="//@rule.382/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_providingEntity_ProvidedRole" variableExps="//@rule.382/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_providingEntity_ProvidedRole" variableExps="//@rule.382/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ProvidedRole" referredRelation="//@rule.83">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.382/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.382/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_entity_InterfaceProvidingEntity" referredRelation="//@rule.28">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.382/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.382/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ServiceCall_signature__ServiceCall" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceServiceCall" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.383/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.383/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_signature__ServiceCall" bindsTo="//@rule.383/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetServiceCall" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.383/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.383/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_signature__ServiceCall" bindsTo="//@rule.383/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceServiceCall" variableExps="//@rule.383/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetServiceCall" variableExps="//@rule.383/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_signature__ServiceCall" variableExps="//@rule.383/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_signature__ServiceCall" variableExps="//@rule.383/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_protocol_ServiceCall" referredRelation="//@rule.85">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.383/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.383/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.383/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.383/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_VariableCharacterisation_specification_VariableCharacterisation" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceVariableCharacterisation" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.384/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.384/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_specification_VariableCharacterisation" bindsTo="//@rule.384/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetVariableCharacterisation" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.384/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.384/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_specification_VariableCharacterisation" bindsTo="//@rule.384/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceVariableCharacterisation" variableExps="//@rule.384/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetVariableCharacterisation" variableExps="//@rule.384/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_specification_VariableCharacterisation" variableExps="//@rule.384/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_specification_VariableCharacterisation" variableExps="//@rule.384/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableCharacterisation" referredRelation="//@rule.87">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.384/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.384/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_core_PCMRandomVariable" referredRelation="//@rule.241">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.384/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.384/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_VariableUsage_variableCharacterisation_VariableUsage" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceVariableUsage" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.385/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.385/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_variableCharacterisation_VariableUsage" bindsTo="//@rule.385/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetVariableUsage" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.385/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.385/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_variableCharacterisation_VariableUsage" bindsTo="//@rule.385/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceVariableUsage" variableExps="//@rule.385/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetVariableUsage" variableExps="//@rule.385/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_variableCharacterisation_VariableUsage" variableExps="//@rule.385/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_variableCharacterisation_VariableUsage" variableExps="//@rule.385/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableUsage" referredRelation="//@rule.89">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.385/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.385/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableCharacterisation" referredRelation="//@rule.87">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.385/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.385/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_VariableUsage_namedReference_VariableUsage" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceVariableUsage" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.386/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.386/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_namedReference_VariableUsage" bindsTo="//@rule.386/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetVariableUsage" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.386/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.386/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_namedReference_VariableUsage" bindsTo="//@rule.386/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceVariableUsage" variableExps="//@rule.386/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetVariableUsage" variableExps="//@rule.386/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_namedReference_VariableUsage" variableExps="//@rule.386/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_namedReference_VariableUsage" variableExps="//@rule.386/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableUsage" referredRelation="//@rule.89">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.386/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.386/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_AbstractNamedReference" referredRelation="//@rule.196">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.386/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.386/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AbstractInternalControlFlowAction_resourceDemand_Action" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAbstractInternalControlFlowAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.387/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.387/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_resourceDemand_Action" bindsTo="//@rule.387/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAbstractInternalControlFlowAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.387/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.387/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_resourceDemand_Action" bindsTo="//@rule.387/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAbstractInternalControlFlowAction" variableExps="//@rule.387/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAbstractInternalControlFlowAction" variableExps="//@rule.387/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_resourceDemand_Action" variableExps="//@rule.387/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_resourceDemand_Action" variableExps="//@rule.387/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractInternalControlFlowAction" referredRelation="//@rule.92">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.387/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.387/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_performance_ParametricResourceDemand" referredRelation="//@rule.132">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.387/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.387/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AbstractAction_predecessor_AbstractAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAbstractAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.388/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.388/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_predecessor_AbstractAction" bindsTo="//@rule.388/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAbstractAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.388/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.388/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_predecessor_AbstractAction" bindsTo="//@rule.388/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAbstractAction" variableExps="//@rule.388/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAbstractAction" variableExps="//@rule.388/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_predecessor_AbstractAction" variableExps="//@rule.388/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_predecessor_AbstractAction" variableExps="//@rule.388/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractAction" referredRelation="//@rule.91">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.388/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.388/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractAction" referredRelation="//@rule.91">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.388/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.388/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AbstractAction_successor_AbstractAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAbstractAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.389/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.389/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_successor_AbstractAction" bindsTo="//@rule.389/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAbstractAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.389/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.389/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_successor_AbstractAction" bindsTo="//@rule.389/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAbstractAction" variableExps="//@rule.389/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAbstractAction" variableExps="//@rule.389/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_successor_AbstractAction" variableExps="//@rule.389/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_successor_AbstractAction" variableExps="//@rule.389/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractAction" referredRelation="//@rule.91">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.389/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.389/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractAction" referredRelation="//@rule.91">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.389/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.389/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ResourceDemandingBehaviour_steps_Behaviour" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceDemandingBehaviour" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.390/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.390/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_steps_Behaviour" bindsTo="//@rule.390/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceDemandingBehaviour" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.390/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.390/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_steps_Behaviour" bindsTo="//@rule.390/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceResourceDemandingBehaviour" variableExps="//@rule.390/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceDemandingBehaviour" variableExps="//@rule.390/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_steps_Behaviour" variableExps="//@rule.390/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_steps_Behaviour" variableExps="//@rule.390/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ResourceDemandingBehaviour" referredRelation="//@rule.97">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.390/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.390/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractAction" referredRelation="//@rule.91">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.390/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.390/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ReleaseAction_passiveResource_ReleaseAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceReleaseAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.391/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.391/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_passiveResource_ReleaseAction" bindsTo="//@rule.391/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetReleaseAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.391/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.391/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_passiveResource_ReleaseAction" bindsTo="//@rule.391/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceReleaseAction" variableExps="//@rule.391/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetReleaseAction" variableExps="//@rule.391/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_passiveResource_ReleaseAction" variableExps="//@rule.391/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_passiveResource_ReleaseAction" variableExps="//@rule.391/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ReleaseAction" referredRelation="//@rule.99">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.391/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.391/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_PassiveResource" referredRelation="//@rule.41">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.391/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.391/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_LoopAction_iterationCount_LoopAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceLoopAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.392/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.392/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_iterationCount_LoopAction" bindsTo="//@rule.392/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetLoopAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.392/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.392/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_iterationCount_LoopAction" bindsTo="//@rule.392/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceLoopAction" variableExps="//@rule.392/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetLoopAction" variableExps="//@rule.392/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_iterationCount_LoopAction" variableExps="//@rule.392/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_iterationCount_LoopAction" variableExps="//@rule.392/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_LoopAction" referredRelation="//@rule.102">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.392/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.392/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_core_PCMRandomVariable" referredRelation="//@rule.241">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.392/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.392/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AbstractLoopAction_bodyBehaviour_Loop" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAbstractLoopAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.393/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.393/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_bodyBehaviour_Loop" bindsTo="//@rule.393/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAbstractLoopAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.393/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.393/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_bodyBehaviour_Loop" bindsTo="//@rule.393/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAbstractLoopAction" variableExps="//@rule.393/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAbstractLoopAction" variableExps="//@rule.393/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_bodyBehaviour_Loop" variableExps="//@rule.393/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_bodyBehaviour_Loop" variableExps="//@rule.393/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractLoopAction" referredRelation="//@rule.101">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.393/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.393/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ResourceDemandingBehaviour" referredRelation="//@rule.97">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.393/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.393/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ForkAction_asynchronousForkedBehaviours_ForkAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceForkAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.394/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.394/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_asynchronousForkedBehaviours_ForkAction" bindsTo="//@rule.394/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetForkAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.394/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.394/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_asynchronousForkedBehaviours_ForkAction" bindsTo="//@rule.394/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceForkAction" variableExps="//@rule.394/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetForkAction" variableExps="//@rule.394/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_asynchronousForkedBehaviours_ForkAction" variableExps="//@rule.394/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_asynchronousForkedBehaviours_ForkAction" variableExps="//@rule.394/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ForkAction" referredRelation="//@rule.106">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.394/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.394/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ForkedBehaviour" referredRelation="//@rule.108">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.394/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.394/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ForkAction_synchronisingBehaviours_ForkAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceForkAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.395/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.395/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_synchronisingBehaviours_ForkAction" bindsTo="//@rule.395/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetForkAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.395/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.395/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_synchronisingBehaviours_ForkAction" bindsTo="//@rule.395/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceForkAction" variableExps="//@rule.395/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetForkAction" variableExps="//@rule.395/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_synchronisingBehaviours_ForkAction" variableExps="//@rule.395/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_synchronisingBehaviours_ForkAction" variableExps="//@rule.395/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ForkAction" referredRelation="//@rule.106">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.395/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.395/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_SynchronisationPoint" referredRelation="//@rule.110">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.395/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.395/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_SynchronisationPoint_synchronousForkedBehaviours_SynchronisationPoint" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSynchronisationPoint" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.396/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.396/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_synchronousForkedBehaviours_SynchronisationPoint" bindsTo="//@rule.396/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSynchronisationPoint" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.396/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.396/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_synchronousForkedBehaviours_SynchronisationPoint" bindsTo="//@rule.396/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSynchronisationPoint" variableExps="//@rule.396/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSynchronisationPoint" variableExps="//@rule.396/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_synchronousForkedBehaviours_SynchronisationPoint" variableExps="//@rule.396/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_synchronousForkedBehaviours_SynchronisationPoint" variableExps="//@rule.396/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_SynchronisationPoint" referredRelation="//@rule.110">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.396/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.396/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ForkedBehaviour" referredRelation="//@rule.108">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.396/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.396/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_SynchronisationPoint_outputParameterUsage_SynchronisationPoint" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSynchronisationPoint" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.397/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.397/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_outputParameterUsage_SynchronisationPoint" bindsTo="//@rule.397/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSynchronisationPoint" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.397/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.397/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_outputParameterUsage_SynchronisationPoint" bindsTo="//@rule.397/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSynchronisationPoint" variableExps="//@rule.397/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSynchronisationPoint" variableExps="//@rule.397/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_outputParameterUsage_SynchronisationPoint" variableExps="//@rule.397/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_outputParameterUsage_SynchronisationPoint" variableExps="//@rule.397/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_SynchronisationPoint" referredRelation="//@rule.110">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.397/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.397/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableUsage" referredRelation="//@rule.89">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.397/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.397/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ExternalCallAction_calledService_ExternalService" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceExternalCallAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.398/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.398/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_calledService_ExternalService" bindsTo="//@rule.398/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetExternalCallAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.398/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.398/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_calledService_ExternalService" bindsTo="//@rule.398/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceExternalCallAction" variableExps="//@rule.398/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetExternalCallAction" variableExps="//@rule.398/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_calledService_ExternalService" variableExps="//@rule.398/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_calledService_ExternalService" variableExps="//@rule.398/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ExternalCallAction" referredRelation="//@rule.112">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.398/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.398/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.398/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.398/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ExternalCallAction_inputParameterUsages_ExternalCallAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceExternalCallAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.399/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.399/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_inputParameterUsages_ExternalCallAction" bindsTo="//@rule.399/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetExternalCallAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.399/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.399/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_inputParameterUsages_ExternalCallAction" bindsTo="//@rule.399/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceExternalCallAction" variableExps="//@rule.399/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetExternalCallAction" variableExps="//@rule.399/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_inputParameterUsages_ExternalCallAction" variableExps="//@rule.399/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_inputParameterUsages_ExternalCallAction" variableExps="//@rule.399/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ExternalCallAction" referredRelation="//@rule.112">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.399/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.399/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableUsage" referredRelation="//@rule.89">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.399/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.399/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ExternalCallAction_outputVariableUsages_ExternalCallAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceExternalCallAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.400/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.400/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_outputVariableUsages_ExternalCallAction" bindsTo="//@rule.400/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetExternalCallAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.400/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.400/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_outputVariableUsages_ExternalCallAction" bindsTo="//@rule.400/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceExternalCallAction" variableExps="//@rule.400/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetExternalCallAction" variableExps="//@rule.400/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_outputVariableUsages_ExternalCallAction" variableExps="//@rule.400/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_outputVariableUsages_ExternalCallAction" variableExps="//@rule.400/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ExternalCallAction" referredRelation="//@rule.112">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.400/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.400/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableUsage" referredRelation="//@rule.89">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.400/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.400/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ExternalCallAction_role_ExternalService" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceExternalCallAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.401/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.401/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_role_ExternalService" bindsTo="//@rule.401/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetExternalCallAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.401/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.401/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_role_ExternalService" bindsTo="//@rule.401/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceExternalCallAction" variableExps="//@rule.401/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetExternalCallAction" variableExps="//@rule.401/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_role_ExternalService" variableExps="//@rule.401/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_role_ExternalService" variableExps="//@rule.401/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ExternalCallAction" referredRelation="//@rule.112">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.401/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.401/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Role" referredRelation="//@rule.51">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.401/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.401/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AbstractBranchTransition_branchBehaviour_BranchTransition" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAbstractBranchTransition" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.402/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.402/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_branchBehaviour_BranchTransition" bindsTo="//@rule.402/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAbstractBranchTransition" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.402/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.402/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_branchBehaviour_BranchTransition" bindsTo="//@rule.402/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAbstractBranchTransition" variableExps="//@rule.402/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAbstractBranchTransition" variableExps="//@rule.402/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_branchBehaviour_BranchTransition" variableExps="//@rule.402/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_branchBehaviour_BranchTransition" variableExps="//@rule.402/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractBranchTransition" referredRelation="//@rule.116">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.402/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.402/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ResourceDemandingBehaviour" referredRelation="//@rule.97">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.402/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.402/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_BranchAction_branches_Branch" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBranchAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.403/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.403/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_branches_Branch" bindsTo="//@rule.403/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBranchAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.403/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.403/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_branches_Branch" bindsTo="//@rule.403/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceBranchAction" variableExps="//@rule.403/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBranchAction" variableExps="//@rule.403/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_branches_Branch" variableExps="//@rule.403/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_branches_Branch" variableExps="//@rule.403/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_BranchAction" referredRelation="//@rule.119">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.403/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.403/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractBranchTransition" referredRelation="//@rule.116">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.403/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.403/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AcquireAction_passiveresource_AcquireAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAcquireAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.404/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.404/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_passiveresource_AcquireAction" bindsTo="//@rule.404/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAcquireAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.404/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.404/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_passiveresource_AcquireAction" bindsTo="//@rule.404/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAcquireAction" variableExps="//@rule.404/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAcquireAction" variableExps="//@rule.404/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_passiveresource_AcquireAction" variableExps="//@rule.404/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_passiveresource_AcquireAction" variableExps="//@rule.404/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AcquireAction" referredRelation="//@rule.121">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.404/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.404/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_PassiveResource" referredRelation="//@rule.41">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.404/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.404/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_CollectionIteratorAction_parameter_CollectionIteratorAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCollectionIteratorAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.405/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.405/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_parameter_CollectionIteratorAction" bindsTo="//@rule.405/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCollectionIteratorAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.405/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.405/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_parameter_CollectionIteratorAction" bindsTo="//@rule.405/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceCollectionIteratorAction" variableExps="//@rule.405/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCollectionIteratorAction" variableExps="//@rule.405/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_parameter_CollectionIteratorAction" variableExps="//@rule.405/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_parameter_CollectionIteratorAction" variableExps="//@rule.405/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_CollectionIteratorAction" referredRelation="//@rule.123">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.405/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.405/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Parameter" referredRelation="//@rule.45">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.405/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.405/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_GuardedBranchTransition_branchCondition_GuardedBranchTransition" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceGuardedBranchTransition" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.406/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.406/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_branchCondition_GuardedBranchTransition" bindsTo="//@rule.406/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetGuardedBranchTransition" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.406/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.406/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_branchCondition_GuardedBranchTransition" bindsTo="//@rule.406/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceGuardedBranchTransition" variableExps="//@rule.406/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetGuardedBranchTransition" variableExps="//@rule.406/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_branchCondition_GuardedBranchTransition" variableExps="//@rule.406/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_branchCondition_GuardedBranchTransition" variableExps="//@rule.406/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_GuardedBranchTransition" referredRelation="//@rule.125">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.406/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.406/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_core_PCMRandomVariable" referredRelation="//@rule.241">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.406/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.406/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_SetVariableAction_localVariableUsages_SetVariableAction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSetVariableAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.407/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.407/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_localVariableUsages_SetVariableAction" bindsTo="//@rule.407/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSetVariableAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.407/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.407/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_localVariableUsages_SetVariableAction" bindsTo="//@rule.407/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSetVariableAction" variableExps="//@rule.407/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSetVariableAction" variableExps="//@rule.407/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_localVariableUsages_SetVariableAction" variableExps="//@rule.407/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_localVariableUsages_SetVariableAction" variableExps="//@rule.407/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_SetVariableAction" referredRelation="//@rule.127">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.407/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.407/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableUsage" referredRelation="//@rule.89">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.407/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.407/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ServiceEffectSpecification_describedService__SEFF" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceServiceEffectSpecification" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.408/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.408/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_describedService__SEFF" bindsTo="//@rule.408/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetServiceEffectSpecification" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.408/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.408/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_describedService__SEFF" bindsTo="//@rule.408/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceServiceEffectSpecification" variableExps="//@rule.408/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetServiceEffectSpecification" variableExps="//@rule.408/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_describedService__SEFF" variableExps="//@rule.408/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_describedService__SEFF" variableExps="//@rule.408/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_ServiceEffectSpecification" referredRelation="//@rule.129">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.408/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.408/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.408/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.408/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ParametricResourceDemand_specification_ParametericResourceDemand" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParametricResourceDemand" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.409/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.409/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_specification_ParametericResourceDemand" bindsTo="//@rule.409/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParametricResourceDemand" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.409/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.409/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_specification_ParametericResourceDemand" bindsTo="//@rule.409/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceParametricResourceDemand" variableExps="//@rule.409/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetParametricResourceDemand" variableExps="//@rule.409/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_specification_ParametericResourceDemand" variableExps="//@rule.409/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_specification_ParametericResourceDemand" variableExps="//@rule.409/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_performance_ParametricResourceDemand" referredRelation="//@rule.132">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.409/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.409/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_core_PCMRandomVariable" referredRelation="//@rule.241">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.409/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.409/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CreateReference_ParametricResourceDemand_requiredResource_ParametricResourceDemand" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParametricResourceDemand" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.410/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.410/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_requiredResource_ParametricResourceDemand" bindsTo="//@rule.410/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParametricResourceDemand" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.410/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.410/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_requiredResource_ParametricResourceDemand" bindsTo="//@rule.410/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceParametricResourceDemand" variableExps="//@rule.410/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetParametricResourceDemand" variableExps="//@rule.410/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_requiredResource_ParametricResourceDemand"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_performance_ParametricResourceDemand" referredRelation="//@rule.132">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.410/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.410/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ParametricResourceDemand_action_ParametricResourceDemand" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParametricResourceDemand" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.411/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.411/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_action_ParametricResourceDemand" bindsTo="//@rule.411/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParametricResourceDemand" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.411/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.411/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_action_ParametricResourceDemand" bindsTo="//@rule.411/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceParametricResourceDemand" variableExps="//@rule.411/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetParametricResourceDemand" variableExps="//@rule.411/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_action_ParametricResourceDemand" variableExps="//@rule.411/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_action_ParametricResourceDemand" variableExps="//@rule.411/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_performance_ParametricResourceDemand" referredRelation="//@rule.132">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.411/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.411/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_seff_AbstractInternalControlFlowAction" referredRelation="//@rule.92">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.411/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.411/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AllocationContext_resourceContainer_AllocationContext" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAllocationContext" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.412/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.412/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_resourceContainer_AllocationContext" bindsTo="//@rule.412/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAllocationContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.412/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.412/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_resourceContainer_AllocationContext" bindsTo="//@rule.412/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAllocationContext" variableExps="//@rule.412/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAllocationContext" variableExps="//@rule.412/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_resourceContainer_AllocationContext" variableExps="//@rule.412/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_resourceContainer_AllocationContext" variableExps="//@rule.412/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_allocation_AllocationContext" referredRelation="//@rule.134">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.412/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.412/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ResourceContainer" referredRelation="//@rule.146">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.412/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.412/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AllocationContext_assemblyContext_AllocationContext" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAllocationContext" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.413/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.413/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_assemblyContext_AllocationContext" bindsTo="//@rule.413/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAllocationContext" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.413/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.413/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_assemblyContext_AllocationContext" bindsTo="//@rule.413/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAllocationContext" variableExps="//@rule.413/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAllocationContext" variableExps="//@rule.413/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_assemblyContext_AllocationContext" variableExps="//@rule.413/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_assemblyContext_AllocationContext" variableExps="//@rule.413/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_allocation_AllocationContext" referredRelation="//@rule.134">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.413/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.413/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.413/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.413/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Allocation_allocationContexts_Allocation" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAllocation" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.414/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.414/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_allocationContexts_Allocation" bindsTo="//@rule.414/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAllocation" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.414/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.414/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_allocationContexts_Allocation" bindsTo="//@rule.414/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAllocation" variableExps="//@rule.414/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAllocation" variableExps="//@rule.414/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_allocationContexts_Allocation" variableExps="//@rule.414/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_allocationContexts_Allocation" variableExps="//@rule.414/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_allocation_Allocation" referredRelation="//@rule.136">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.414/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.414/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_allocation_AllocationContext" referredRelation="//@rule.134">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.414/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.414/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Allocation_targetResourceEnvironment_Allocation" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAllocation" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.415/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.415/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_targetResourceEnvironment_Allocation" bindsTo="//@rule.415/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAllocation" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.415/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.415/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_targetResourceEnvironment_Allocation" bindsTo="//@rule.415/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAllocation" variableExps="//@rule.415/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAllocation" variableExps="//@rule.415/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_targetResourceEnvironment_Allocation" variableExps="//@rule.415/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_targetResourceEnvironment_Allocation" variableExps="//@rule.415/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_allocation_Allocation" referredRelation="//@rule.136">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.415/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.415/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ResourceEnvironment" referredRelation="//@rule.138">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.415/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.415/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Allocation_system_Allocation" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAllocation" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.416/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.416/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_system_Allocation" bindsTo="//@rule.416/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAllocation" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.416/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.416/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_system_Allocation" bindsTo="//@rule.416/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAllocation" variableExps="//@rule.416/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAllocation" variableExps="//@rule.416/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_system_Allocation" variableExps="//@rule.416/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_system_Allocation" variableExps="//@rule.416/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_allocation_Allocation" referredRelation="//@rule.136">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.416/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.416/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_system_System" referredRelation="//@rule.148">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.416/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.416/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ResourceEnvironment_linkingresource" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceEnvironment" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.417/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.417/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_linkingresource" bindsTo="//@rule.417/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceEnvironment" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.417/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.417/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_linkingresource" bindsTo="//@rule.417/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceResourceEnvironment" variableExps="//@rule.417/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceEnvironment" variableExps="//@rule.417/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_linkingresource" variableExps="//@rule.417/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_linkingresource" variableExps="//@rule.417/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ResourceEnvironment" referredRelation="//@rule.138">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.417/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.417/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_LinkingResource" referredRelation="//@rule.140">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.417/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.417/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ResourceEnvironment_resourceContainer_ResourceEnvironment" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceEnvironment" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.418/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.418/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_resourceContainer_ResourceEnvironment" bindsTo="//@rule.418/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceEnvironment" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.418/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.418/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_resourceContainer_ResourceEnvironment" bindsTo="//@rule.418/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceResourceEnvironment" variableExps="//@rule.418/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceEnvironment" variableExps="//@rule.418/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_resourceContainer_ResourceEnvironment" variableExps="//@rule.418/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_resourceContainer_ResourceEnvironment" variableExps="//@rule.418/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ResourceEnvironment" referredRelation="//@rule.138">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.418/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.418/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ResourceContainer" referredRelation="//@rule.146">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.418/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.418/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_LinkingResource_toResourceContainer_LinkingResource" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceLinkingResource" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.419/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.419/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_toResourceContainer_LinkingResource" bindsTo="//@rule.419/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetLinkingResource" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.419/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.419/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_toResourceContainer_LinkingResource" bindsTo="//@rule.419/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceLinkingResource" variableExps="//@rule.419/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetLinkingResource" variableExps="//@rule.419/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_toResourceContainer_LinkingResource" variableExps="//@rule.419/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_toResourceContainer_LinkingResource" variableExps="//@rule.419/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_LinkingResource" referredRelation="//@rule.140">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.419/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.419/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ResourceContainer" referredRelation="//@rule.146">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.419/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.419/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_LinkingResource_fromResourceContainer_LinkingResource" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceLinkingResource" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.420/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.420/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_fromResourceContainer_LinkingResource" bindsTo="//@rule.420/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetLinkingResource" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.420/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.420/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_fromResourceContainer_LinkingResource" bindsTo="//@rule.420/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceLinkingResource" variableExps="//@rule.420/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetLinkingResource" variableExps="//@rule.420/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_fromResourceContainer_LinkingResource" variableExps="//@rule.420/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_fromResourceContainer_LinkingResource" variableExps="//@rule.420/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_LinkingResource" referredRelation="//@rule.140">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.420/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.420/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ResourceContainer" referredRelation="//@rule.146">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.420/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.420/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_LinkingResource_communicationLinkResourceSpecifications_LinkingResource" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceLinkingResource" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.421/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.421/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_communicationLinkResourceSpecifications_LinkingResource" bindsTo="//@rule.421/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetLinkingResource" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.421/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.421/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_communicationLinkResourceSpecifications_LinkingResource" bindsTo="//@rule.421/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceLinkingResource" variableExps="//@rule.421/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetLinkingResource" variableExps="//@rule.421/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_communicationLinkResourceSpecifications_LinkingResource" variableExps="//@rule.421/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_communicationLinkResourceSpecifications_LinkingResource" variableExps="//@rule.421/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_LinkingResource" referredRelation="//@rule.140">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.421/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.421/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_CommunicationLinkResourceSpecification" referredRelation="//@rule.142">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.421/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.421/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_CommunicationLinkResourceSpecification_communicationLinkResourceType_CommunicationLinkResourceSpecification" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCommunicationLinkResourceSpecification" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.422/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.422/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_communicationLinkResourceType_CommunicationLinkResourceSpecification" bindsTo="//@rule.422/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCommunicationLinkResourceSpecification" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.422/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.422/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_communicationLinkResourceType_CommunicationLinkResourceSpecification" bindsTo="//@rule.422/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceCommunicationLinkResourceSpecification" variableExps="//@rule.422/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCommunicationLinkResourceSpecification" variableExps="//@rule.422/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_communicationLinkResourceType_CommunicationLinkResourceSpecification"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_CommunicationLinkResourceSpecification" referredRelation="//@rule.142">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.422/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.422/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_CommunicationLinkResourceSpecification_latency_CommunicationLinkResourceSpecification" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCommunicationLinkResourceSpecification" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.423/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.423/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_latency_CommunicationLinkResourceSpecification" bindsTo="//@rule.423/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCommunicationLinkResourceSpecification" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.423/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.423/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_latency_CommunicationLinkResourceSpecification" bindsTo="//@rule.423/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceCommunicationLinkResourceSpecification" variableExps="//@rule.423/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCommunicationLinkResourceSpecification" variableExps="//@rule.423/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_latency_CommunicationLinkResourceSpecification" variableExps="//@rule.423/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_latency_CommunicationLinkResourceSpecification" variableExps="//@rule.423/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_CommunicationLinkResourceSpecification" referredRelation="//@rule.142">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.423/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.423/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_core_PCMRandomVariable" referredRelation="//@rule.241">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.423/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.423/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_CommunicationLinkResourceSpecification_throughput_CommunicationLinkResourceSpecification" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCommunicationLinkResourceSpecification" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.424/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.424/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_throughput_CommunicationLinkResourceSpecification" bindsTo="//@rule.424/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCommunicationLinkResourceSpecification" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.424/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.424/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_throughput_CommunicationLinkResourceSpecification" bindsTo="//@rule.424/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceCommunicationLinkResourceSpecification" variableExps="//@rule.424/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCommunicationLinkResourceSpecification" variableExps="//@rule.424/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_throughput_CommunicationLinkResourceSpecification" variableExps="//@rule.424/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_throughput_CommunicationLinkResourceSpecification" variableExps="//@rule.424/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_CommunicationLinkResourceSpecification" referredRelation="//@rule.142">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.424/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.424/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_core_PCMRandomVariable" referredRelation="//@rule.241">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.424/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.424/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CreateReference_ProcessingResourceSpecification_activeResourceType_ActiveResourceSpecification" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProcessingResourceSpecification" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.425/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.425/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_activeResourceType_ActiveResourceSpecification" bindsTo="//@rule.425/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProcessingResourceSpecification" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.425/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.425/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_activeResourceType_ActiveResourceSpecification" bindsTo="//@rule.425/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProcessingResourceSpecification" variableExps="//@rule.425/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProcessingResourceSpecification" variableExps="//@rule.425/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_activeResourceType_ActiveResourceSpecification"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ProcessingResourceSpecification" referredRelation="//@rule.144">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.425/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.425/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ProcessingResourceSpecification_processingRate_ProcessingResourceSpecification" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProcessingResourceSpecification" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.426/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.426/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_processingRate_ProcessingResourceSpecification" bindsTo="//@rule.426/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProcessingResourceSpecification" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.426/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.426/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_processingRate_ProcessingResourceSpecification" bindsTo="//@rule.426/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProcessingResourceSpecification" variableExps="//@rule.426/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProcessingResourceSpecification" variableExps="//@rule.426/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_processingRate_ProcessingResourceSpecification" variableExps="//@rule.426/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_processingRate_ProcessingResourceSpecification" variableExps="//@rule.426/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ProcessingResourceSpecification" referredRelation="//@rule.144">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.426/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.426/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_core_PCMRandomVariable" referredRelation="//@rule.241">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.426/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.426/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ResourceContainer_activeResourceSpecifications_ResourceContainer" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceResourceContainer" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.427/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.427/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_activeResourceSpecifications_ResourceContainer" bindsTo="//@rule.427/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetResourceContainer" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.427/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.427/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_activeResourceSpecifications_ResourceContainer" bindsTo="//@rule.427/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceResourceContainer" variableExps="//@rule.427/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetResourceContainer" variableExps="//@rule.427/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_activeResourceSpecifications_ResourceContainer" variableExps="//@rule.427/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_activeResourceSpecifications_ResourceContainer" variableExps="//@rule.427/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ResourceContainer" referredRelation="//@rule.146">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.427/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.427/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_resourceenvironment_ProcessingResourceSpecification" referredRelation="//@rule.144">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.427/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.427/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_System_qosAnnotations_System" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSystem" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.428/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.428/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_qosAnnotations_System" bindsTo="//@rule.428/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSystem" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.428/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.428/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_qosAnnotations_System" bindsTo="//@rule.428/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSystem" variableExps="//@rule.428/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSystem" variableExps="//@rule.428/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_qosAnnotations_System" variableExps="//@rule.428/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_qosAnnotations_System" variableExps="//@rule.428/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_system_System" referredRelation="//@rule.148">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.428/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.428/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_qosannotations_QoSAnnotations" referredRelation="//@rule.152">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.428/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.428/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_SpecifiedQoSAnnotation_signature_SpecifiedQoSAnnation" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSpecifiedQoSAnnotation" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.429/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.429/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_signature_SpecifiedQoSAnnation" bindsTo="//@rule.429/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSpecifiedQoSAnnotation" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.429/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.429/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_signature_SpecifiedQoSAnnation" bindsTo="//@rule.429/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSpecifiedQoSAnnotation" variableExps="//@rule.429/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSpecifiedQoSAnnotation" variableExps="//@rule.429/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_signature_SpecifiedQoSAnnation" variableExps="//@rule.429/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_signature_SpecifiedQoSAnnation" variableExps="//@rule.429/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_qosannotations_SpecifiedQoSAnnotation" referredRelation="//@rule.150">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.429/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.429/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.429/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.429/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_SpecifiedQoSAnnotation_role_SpecifiedQoSAnnotation" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSpecifiedQoSAnnotation" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.430/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.430/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_role_SpecifiedQoSAnnotation" bindsTo="//@rule.430/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSpecifiedQoSAnnotation" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.430/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.430/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_role_SpecifiedQoSAnnotation" bindsTo="//@rule.430/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSpecifiedQoSAnnotation" variableExps="//@rule.430/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSpecifiedQoSAnnotation" variableExps="//@rule.430/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_role_SpecifiedQoSAnnotation" variableExps="//@rule.430/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_role_SpecifiedQoSAnnotation" variableExps="//@rule.430/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_qosannotations_SpecifiedQoSAnnotation" referredRelation="//@rule.150">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.430/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.430/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Role" referredRelation="//@rule.51">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.430/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.430/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_SpecifiedQoSAnnotation_specification_SpecifiedExecutionTime" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSpecifiedQoSAnnotation" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.431/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.431/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_specification_SpecifiedExecutionTime" bindsTo="//@rule.431/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSpecifiedQoSAnnotation" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.431/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.431/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_specification_SpecifiedExecutionTime" bindsTo="//@rule.431/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSpecifiedQoSAnnotation" variableExps="//@rule.431/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSpecifiedQoSAnnotation" variableExps="//@rule.431/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_specification_SpecifiedExecutionTime" variableExps="//@rule.431/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_specification_SpecifiedExecutionTime" variableExps="//@rule.431/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_qosannotations_SpecifiedQoSAnnotation" referredRelation="//@rule.150">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.431/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.431/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_core_PCMRandomVariable" referredRelation="//@rule.241">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.431/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.431/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_SpecifiedOutputParameterAbstraction_signature_SpecifiedOutputParameterAbstraction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSpecifiedOutputParameterAbstraction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.432/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.432/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_signature_SpecifiedOutputParameterAbstraction" bindsTo="//@rule.432/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSpecifiedOutputParameterAbstraction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.432/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.432/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_signature_SpecifiedOutputParameterAbstraction" bindsTo="//@rule.432/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSpecifiedOutputParameterAbstraction" variableExps="//@rule.432/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSpecifiedOutputParameterAbstraction" variableExps="//@rule.432/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_signature_SpecifiedOutputParameterAbstraction" variableExps="//@rule.432/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_signature_SpecifiedOutputParameterAbstraction" variableExps="//@rule.432/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_qosannotations_SpecifiedOutputParameterAbstraction" referredRelation="//@rule.151">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.432/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.432/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.432/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.432/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_SpecifiedOutputParameterAbstraction_role_SpecifiedOutputParameterAbstraction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSpecifiedOutputParameterAbstraction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.433/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.433/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_role_SpecifiedOutputParameterAbstraction" bindsTo="//@rule.433/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSpecifiedOutputParameterAbstraction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.433/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.433/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_role_SpecifiedOutputParameterAbstraction" bindsTo="//@rule.433/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSpecifiedOutputParameterAbstraction" variableExps="//@rule.433/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSpecifiedOutputParameterAbstraction" variableExps="//@rule.433/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_role_SpecifiedOutputParameterAbstraction" variableExps="//@rule.433/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_role_SpecifiedOutputParameterAbstraction" variableExps="//@rule.433/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_qosannotations_SpecifiedOutputParameterAbstraction" referredRelation="//@rule.151">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.433/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.433/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Role" referredRelation="//@rule.51">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.433/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.433/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_SpecifiedOutputParameterAbstraction_expectedExternalOutputs_SpecifiedOutputParameterAbstraction" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSpecifiedOutputParameterAbstraction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.434/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.434/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_expectedExternalOutputs_SpecifiedOutputParameterAbstraction" bindsTo="//@rule.434/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSpecifiedOutputParameterAbstraction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.434/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.434/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_expectedExternalOutputs_SpecifiedOutputParameterAbstraction" bindsTo="//@rule.434/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSpecifiedOutputParameterAbstraction" variableExps="//@rule.434/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSpecifiedOutputParameterAbstraction" variableExps="//@rule.434/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_expectedExternalOutputs_SpecifiedOutputParameterAbstraction" variableExps="//@rule.434/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_expectedExternalOutputs_SpecifiedOutputParameterAbstraction" variableExps="//@rule.434/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_qosannotations_SpecifiedOutputParameterAbstraction" referredRelation="//@rule.151">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.434/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.434/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableUsage" referredRelation="//@rule.89">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.434/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.434/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_QoSAnnotations_specifiedQoSAnnotations_QoSAnnotations" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceQoSAnnotations" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.435/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.435/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_specifiedQoSAnnotations_QoSAnnotations" bindsTo="//@rule.435/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetQoSAnnotations" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.435/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.435/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_specifiedQoSAnnotations_QoSAnnotations" bindsTo="//@rule.435/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceQoSAnnotations" variableExps="//@rule.435/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetQoSAnnotations" variableExps="//@rule.435/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_specifiedQoSAnnotations_QoSAnnotations" variableExps="//@rule.435/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_specifiedQoSAnnotations_QoSAnnotations" variableExps="//@rule.435/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_qosannotations_QoSAnnotations" referredRelation="//@rule.152">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.435/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.435/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_qosannotations_SpecifiedQoSAnnotation" referredRelation="//@rule.150">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.435/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.435/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_QoSAnnotations_specifiedOutputParameterAbstractions_QoSAnnotations" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceQoSAnnotations" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.436/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.436/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_specifiedOutputParameterAbstractions_QoSAnnotations" bindsTo="//@rule.436/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetQoSAnnotations" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.436/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.436/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_specifiedOutputParameterAbstractions_QoSAnnotations" bindsTo="//@rule.436/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceQoSAnnotations" variableExps="//@rule.436/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetQoSAnnotations" variableExps="//@rule.436/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_specifiedOutputParameterAbstractions_QoSAnnotations" variableExps="//@rule.436/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_specifiedOutputParameterAbstractions_QoSAnnotations" variableExps="//@rule.436/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_qosannotations_QoSAnnotations" referredRelation="//@rule.152">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.436/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.436/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_qosannotations_SpecifiedOutputParameterAbstraction" referredRelation="//@rule.151">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.436/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.436/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ComponentSpecifiedExecutionTime_assemblyContext_ComponentSpecifiedExecutionTime" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceComponentSpecifiedExecutionTime" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.437/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.437/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_assemblyContext_ComponentSpecifiedExecutionTime" bindsTo="//@rule.437/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetComponentSpecifiedExecutionTime" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.437/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.437/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_assemblyContext_ComponentSpecifiedExecutionTime" bindsTo="//@rule.437/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceComponentSpecifiedExecutionTime" variableExps="//@rule.437/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetComponentSpecifiedExecutionTime" variableExps="//@rule.437/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_assemblyContext_ComponentSpecifiedExecutionTime" variableExps="//@rule.437/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_assemblyContext_ComponentSpecifiedExecutionTime" variableExps="//@rule.437/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_performance_ComponentSpecifiedExecutionTime" referredRelation="//@rule.156">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.437/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.437/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.437/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.437/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_UsageScenario_workload_UsageScenario" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUsageScenario" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.438/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.438/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_workload_UsageScenario" bindsTo="//@rule.438/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUsageScenario" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.438/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.438/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_workload_UsageScenario" bindsTo="//@rule.438/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceUsageScenario" variableExps="//@rule.438/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUsageScenario" variableExps="//@rule.438/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_workload_UsageScenario" variableExps="//@rule.438/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_workload_UsageScenario" variableExps="//@rule.438/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_UsageScenario" referredRelation="//@rule.161">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.438/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.438/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_Workload" referredRelation="//@rule.160">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.438/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.438/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_UsageScenario_scenarioBehaviour_UsageScenario" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUsageScenario" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.439/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.439/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_scenarioBehaviour_UsageScenario" bindsTo="//@rule.439/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUsageScenario" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.439/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.439/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_scenarioBehaviour_UsageScenario" bindsTo="//@rule.439/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceUsageScenario" variableExps="//@rule.439/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUsageScenario" variableExps="//@rule.439/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_scenarioBehaviour_UsageScenario" variableExps="//@rule.439/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_scenarioBehaviour_UsageScenario" variableExps="//@rule.439/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_UsageScenario" referredRelation="//@rule.161">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.439/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.439/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_ScenarioBehaviour" referredRelation="//@rule.163">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.439/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.439/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ScenarioBehaviour_actions_ScenarioBehaviour" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceScenarioBehaviour" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.440/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.440/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_actions_ScenarioBehaviour" bindsTo="//@rule.440/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetScenarioBehaviour" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.440/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.440/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_actions_ScenarioBehaviour" bindsTo="//@rule.440/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceScenarioBehaviour" variableExps="//@rule.440/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetScenarioBehaviour" variableExps="//@rule.440/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_actions_ScenarioBehaviour" variableExps="//@rule.440/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_actions_ScenarioBehaviour" variableExps="//@rule.440/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_ScenarioBehaviour" referredRelation="//@rule.163">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.440/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.440/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_AbstractUserAction" referredRelation="//@rule.165">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.440/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.440/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AbstractUserAction_successor" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAbstractUserAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.441/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.441/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_successor" bindsTo="//@rule.441/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAbstractUserAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.441/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.441/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_successor" bindsTo="//@rule.441/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAbstractUserAction" variableExps="//@rule.441/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAbstractUserAction" variableExps="//@rule.441/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_successor" variableExps="//@rule.441/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_successor" variableExps="//@rule.441/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_AbstractUserAction" referredRelation="//@rule.165">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.441/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.441/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_AbstractUserAction" referredRelation="//@rule.165">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.441/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.441/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_AbstractUserAction_predecessor" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceAbstractUserAction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.442/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.442/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_predecessor" bindsTo="//@rule.442/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetAbstractUserAction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.442/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.442/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_predecessor" bindsTo="//@rule.442/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceAbstractUserAction" variableExps="//@rule.442/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetAbstractUserAction" variableExps="//@rule.442/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_predecessor" variableExps="//@rule.442/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_predecessor" variableExps="//@rule.442/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_AbstractUserAction" referredRelation="//@rule.165">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.442/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.442/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_AbstractUserAction" referredRelation="//@rule.165">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.442/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.442/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_UsageModel_usageScenario_UsageModel" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUsageModel" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.443/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.443/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_usageScenario_UsageModel" bindsTo="//@rule.443/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUsageModel" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.443/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.443/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_usageScenario_UsageModel" bindsTo="//@rule.443/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceUsageModel" variableExps="//@rule.443/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUsageModel" variableExps="//@rule.443/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_usageScenario_UsageModel" variableExps="//@rule.443/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_usageScenario_UsageModel" variableExps="//@rule.443/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_UsageModel" referredRelation="//@rule.166">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.443/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.443/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_UsageScenario" referredRelation="//@rule.161">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.443/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.443/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_UsageModel_userData_UsageModel" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUsageModel" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.444/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.444/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_userData_UsageModel" bindsTo="//@rule.444/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUsageModel" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.444/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.444/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_userData_UsageModel" bindsTo="//@rule.444/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceUsageModel" variableExps="//@rule.444/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUsageModel" variableExps="//@rule.444/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_userData_UsageModel" variableExps="//@rule.444/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_userData_UsageModel" variableExps="//@rule.444/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_UsageModel" referredRelation="//@rule.166">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.444/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.444/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_UserData" referredRelation="//@rule.168">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.444/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.444/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_UserData_userDataParameterUsages_UserData" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUserData" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.445/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.445/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_userDataParameterUsages_UserData" bindsTo="//@rule.445/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUserData" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.445/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.445/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_userDataParameterUsages_UserData" bindsTo="//@rule.445/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceUserData" variableExps="//@rule.445/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUserData" variableExps="//@rule.445/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_userDataParameterUsages_UserData" variableExps="//@rule.445/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_userDataParameterUsages_UserData" variableExps="//@rule.445/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_UserData" referredRelation="//@rule.168">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.445/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.445/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableUsage" referredRelation="//@rule.89">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.445/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.445/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_UserData_assemblyContext_userData" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUserData" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.446/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.446/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_assemblyContext_userData" bindsTo="//@rule.446/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUserData" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.446/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.446/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_assemblyContext_userData" bindsTo="//@rule.446/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceUserData" variableExps="//@rule.446/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUserData" variableExps="//@rule.446/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_assemblyContext_userData" variableExps="//@rule.446/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_assemblyContext_userData" variableExps="//@rule.446/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_UserData" referredRelation="//@rule.168">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.446/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.446/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_composition_AssemblyContext" referredRelation="//@rule.33">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.446/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.446/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_OpenWorkload_interArrivalTime_OpenWorkload" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceOpenWorkload" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.447/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.447/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_interArrivalTime_OpenWorkload" bindsTo="//@rule.447/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetOpenWorkload" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.447/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.447/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_interArrivalTime_OpenWorkload" bindsTo="//@rule.447/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceOpenWorkload" variableExps="//@rule.447/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetOpenWorkload" variableExps="//@rule.447/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_interArrivalTime_OpenWorkload" variableExps="//@rule.447/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_interArrivalTime_OpenWorkload" variableExps="//@rule.447/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_OpenWorkload" referredRelation="//@rule.174">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.447/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.447/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_core_PCMRandomVariable" referredRelation="//@rule.241">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.447/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.447/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Loop_bodyBehaviour_Loop" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceLoop" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.448/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.448/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_bodyBehaviour_Loop" bindsTo="//@rule.448/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetLoop" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.448/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.448/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_bodyBehaviour_Loop" bindsTo="//@rule.448/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceLoop" variableExps="//@rule.448/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetLoop" variableExps="//@rule.448/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_bodyBehaviour_Loop" variableExps="//@rule.448/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_bodyBehaviour_Loop" variableExps="//@rule.448/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_Loop" referredRelation="//@rule.176">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.448/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.448/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_ScenarioBehaviour" referredRelation="//@rule.163">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.448/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.448/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Loop_loopIteration_Loop" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceLoop" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.449/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.449/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_loopIteration_Loop" bindsTo="//@rule.449/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetLoop" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.449/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.449/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_loopIteration_Loop" bindsTo="//@rule.449/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceLoop" variableExps="//@rule.449/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetLoop" variableExps="//@rule.449/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_loopIteration_Loop" variableExps="//@rule.449/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_loopIteration_Loop" variableExps="//@rule.449/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_Loop" referredRelation="//@rule.176">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.449/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.449/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_core_PCMRandomVariable" referredRelation="//@rule.241">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.449/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.449/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_EntryLevelSystemCall_inputParameterUsages_EntryLevelSystemCall" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceEntryLevelSystemCall" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.450/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.450/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_inputParameterUsages_EntryLevelSystemCall" bindsTo="//@rule.450/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetEntryLevelSystemCall" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.450/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.450/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_inputParameterUsages_EntryLevelSystemCall" bindsTo="//@rule.450/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceEntryLevelSystemCall" variableExps="//@rule.450/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetEntryLevelSystemCall" variableExps="//@rule.450/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_inputParameterUsages_EntryLevelSystemCall" variableExps="//@rule.450/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_inputParameterUsages_EntryLevelSystemCall" variableExps="//@rule.450/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_EntryLevelSystemCall" referredRelation="//@rule.178">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.450/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.450/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableUsage" referredRelation="//@rule.89">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.450/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.450/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_EntryLevelSystemCall_providedRole_EntryLevelSystemCall" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceEntryLevelSystemCall" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.451/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.451/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_providedRole_EntryLevelSystemCall" bindsTo="//@rule.451/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetEntryLevelSystemCall" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.451/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.451/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_providedRole_EntryLevelSystemCall" bindsTo="//@rule.451/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceEntryLevelSystemCall" variableExps="//@rule.451/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetEntryLevelSystemCall" variableExps="//@rule.451/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_providedRole_EntryLevelSystemCall" variableExps="//@rule.451/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_providedRole_EntryLevelSystemCall" variableExps="//@rule.451/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_EntryLevelSystemCall" referredRelation="//@rule.178">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.451/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.451/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_ProvidedRole" referredRelation="//@rule.83">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.451/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.451/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_EntryLevelSystemCall_signature_EntryLevelSystemCall" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceEntryLevelSystemCall" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.452/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.452/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_signature_EntryLevelSystemCall" bindsTo="//@rule.452/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetEntryLevelSystemCall" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.452/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.452/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_signature_EntryLevelSystemCall" bindsTo="//@rule.452/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceEntryLevelSystemCall" variableExps="//@rule.452/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetEntryLevelSystemCall" variableExps="//@rule.452/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_signature_EntryLevelSystemCall" variableExps="//@rule.452/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_signature_EntryLevelSystemCall" variableExps="//@rule.452/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_EntryLevelSystemCall" referredRelation="//@rule.178">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.452/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.452/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_repository_Signature" referredRelation="//@rule.43">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.452/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.452/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_EntryLevelSystemCall_outputParameterUsages_EntryLevelSystemCall" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceEntryLevelSystemCall" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.453/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.453/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_outputParameterUsages_EntryLevelSystemCall" bindsTo="//@rule.453/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetEntryLevelSystemCall" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.453/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.453/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_outputParameterUsages_EntryLevelSystemCall" bindsTo="//@rule.453/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceEntryLevelSystemCall" variableExps="//@rule.453/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetEntryLevelSystemCall" variableExps="//@rule.453/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_outputParameterUsages_EntryLevelSystemCall" variableExps="//@rule.453/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_outputParameterUsages_EntryLevelSystemCall" variableExps="//@rule.453/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_EntryLevelSystemCall" referredRelation="//@rule.178">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.453/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.453/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_parameter_VariableUsage" referredRelation="//@rule.89">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.453/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.453/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ClosedWorkload_thinkTime_ClosedWorkload" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceClosedWorkload" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.454/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.454/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_thinkTime_ClosedWorkload" bindsTo="//@rule.454/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetClosedWorkload" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.454/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.454/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_thinkTime_ClosedWorkload" bindsTo="//@rule.454/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceClosedWorkload" variableExps="//@rule.454/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetClosedWorkload" variableExps="//@rule.454/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_thinkTime_ClosedWorkload" variableExps="//@rule.454/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_thinkTime_ClosedWorkload" variableExps="//@rule.454/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_ClosedWorkload" referredRelation="//@rule.180">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.454/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.454/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_core_PCMRandomVariable" referredRelation="//@rule.241">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.454/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.454/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Branch_branchTransitions_Branch" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBranch" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.455/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.455/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_branchTransitions_Branch" bindsTo="//@rule.455/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBranch" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.455/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.455/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_branchTransitions_Branch" bindsTo="//@rule.455/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceBranch" variableExps="//@rule.455/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBranch" variableExps="//@rule.455/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_branchTransitions_Branch" variableExps="//@rule.455/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_branchTransitions_Branch" variableExps="//@rule.455/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_Branch" referredRelation="//@rule.182">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.455/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.455/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_BranchTransition" referredRelation="//@rule.184">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.455/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.455/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_BranchTransition_branchedBehaviour_BranchTransition" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBranchTransition" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.456/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.456/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_branchedBehaviour_BranchTransition" bindsTo="//@rule.456/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBranchTransition" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.456/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.456/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_branchedBehaviour_BranchTransition" bindsTo="//@rule.456/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceBranchTransition" variableExps="//@rule.456/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBranchTransition" variableExps="//@rule.456/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_branchedBehaviour_BranchTransition" variableExps="//@rule.456/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_branchedBehaviour_BranchTransition" variableExps="//@rule.456/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_BranchTransition" referredRelation="//@rule.184">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.456/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.456/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_ScenarioBehaviour" referredRelation="//@rule.163">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.456/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.456/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Delay_timeSpecification_Delay" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceDelay" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.457/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.457/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_timeSpecification_Delay" bindsTo="//@rule.457/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetDelay" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.457/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.457/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_timeSpecification_Delay" bindsTo="//@rule.457/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceDelay" variableExps="//@rule.457/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetDelay" variableExps="//@rule.457/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_timeSpecification_Delay" variableExps="//@rule.457/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_timeSpecification_Delay" variableExps="//@rule.457/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_usagemodel_Delay" referredRelation="//@rule.186">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.457/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.457/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_core_PCMRandomVariable" referredRelation="//@rule.241">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.457/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.457/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_BoxedPDF_samples" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBoxedPDF" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.458/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.458/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_samples" bindsTo="//@rule.458/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBoxedPDF" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.458/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.458/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_samples" bindsTo="//@rule.458/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceBoxedPDF" variableExps="//@rule.458/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBoxedPDF" variableExps="//@rule.458/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_samples" variableExps="//@rule.458/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_samples" variableExps="//@rule.458/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_BoxedPDF" referredRelation="//@rule.261">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.458/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.458/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ContinuousSample" referredRelation="//@rule.190">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.458/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.458/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ProbabilityMassFunction_samples" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProbabilityMassFunction" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.459/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.459/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_samples" bindsTo="//@rule.459/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProbabilityMassFunction" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.459/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.459/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_samples" bindsTo="//@rule.459/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProbabilityMassFunction" variableExps="//@rule.459/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProbabilityMassFunction" variableExps="//@rule.459/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_samples" variableExps="//@rule.459/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_samples" variableExps="//@rule.459/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ProbabilityMassFunction" referredRelation="//@rule.251">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.459/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.459/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_Sample" referredRelation="//@rule.192">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.459/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.459/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_SamplePDF_values" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSamplePDF" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.460/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.460/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_values" bindsTo="//@rule.460/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSamplePDF" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.460/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.460/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_values" bindsTo="//@rule.460/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSamplePDF" variableExps="//@rule.460/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSamplePDF" variableExps="//@rule.460/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_values" variableExps="//@rule.460/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_values" variableExps="//@rule.460/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_SamplePDF" referredRelation="//@rule.259">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.460/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.460/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_Complex" referredRelation="//@rule.194">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.460/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.460/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_NamespaceReference_innerReference_NamespaceReference" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceNamespaceReference" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.461/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.461/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_innerReference_NamespaceReference" bindsTo="//@rule.461/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetNamespaceReference" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.461/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.461/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_innerReference_NamespaceReference" bindsTo="//@rule.461/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceNamespaceReference" variableExps="//@rule.461/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetNamespaceReference" variableExps="//@rule.461/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_innerReference_NamespaceReference" variableExps="//@rule.461/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_innerReference_NamespaceReference" variableExps="//@rule.461/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_NamespaceReference" referredRelation="//@rule.199">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.461/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.461/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_AbstractNamedReference" referredRelation="//@rule.196">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.461/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.461/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Variable_id_Variable" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceVariable" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.462/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.462/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_id_Variable" bindsTo="//@rule.462/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetVariable" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.462/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.462/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_id_Variable" bindsTo="//@rule.462/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceVariable" variableExps="//@rule.462/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetVariable" variableExps="//@rule.462/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_id_Variable" variableExps="//@rule.462/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_id_Variable" variableExps="//@rule.462/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Variable" referredRelation="//@rule.210">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.462/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.462/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_AbstractNamedReference" referredRelation="//@rule.196">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.462/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.462/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_TermExpression_left" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceTermExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.463/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.463/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_left" bindsTo="//@rule.463/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetTermExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.463/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.463/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_left" bindsTo="//@rule.463/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceTermExpression" variableExps="//@rule.463/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetTermExpression" variableExps="//@rule.463/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_left" variableExps="//@rule.463/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_left" variableExps="//@rule.463/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_TermExpression" referredRelation="//@rule.214">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.463/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.463/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Term" referredRelation="//@rule.205">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.463/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.463/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_TermExpression_right" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceTermExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.464/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.464/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_right" bindsTo="//@rule.464/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetTermExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.464/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.464/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_right" bindsTo="//@rule.464/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceTermExpression" variableExps="//@rule.464/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetTermExpression" variableExps="//@rule.464/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_right" variableExps="//@rule.464/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_right" variableExps="//@rule.464/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_TermExpression" referredRelation="//@rule.214">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.464/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.464/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Product" referredRelation="//@rule.206">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.464/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.464/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ProductExpression_left" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProductExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.465/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.465/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_left" bindsTo="//@rule.465/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProductExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.465/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.465/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_left" bindsTo="//@rule.465/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProductExpression" variableExps="//@rule.465/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProductExpression" variableExps="//@rule.465/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_left" variableExps="//@rule.465/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_left" variableExps="//@rule.465/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_ProductExpression" referredRelation="//@rule.216">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.465/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.465/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Product" referredRelation="//@rule.206">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.465/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.465/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ProductExpression_right" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProductExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.466/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.466/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_right" bindsTo="//@rule.466/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProductExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.466/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.466/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_right" bindsTo="//@rule.466/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProductExpression" variableExps="//@rule.466/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProductExpression" variableExps="//@rule.466/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_right" variableExps="//@rule.466/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_right" variableExps="//@rule.466/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_ProductExpression" referredRelation="//@rule.216">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.466/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.466/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Power" referredRelation="//@rule.207">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.466/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.466/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_ProbabilityFunctionLiteral_function_ProbabilityFunctionLiteral" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceProbabilityFunctionLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.467/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.467/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_function_ProbabilityFunctionLiteral" bindsTo="//@rule.467/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetProbabilityFunctionLiteral" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.467/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.467/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_function_ProbabilityFunctionLiteral" bindsTo="//@rule.467/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceProbabilityFunctionLiteral" variableExps="//@rule.467/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetProbabilityFunctionLiteral" variableExps="//@rule.467/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_function_ProbabilityFunctionLiteral" variableExps="//@rule.467/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_function_ProbabilityFunctionLiteral" variableExps="//@rule.467/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_ProbabilityFunctionLiteral" referredRelation="//@rule.218">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.467/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.467/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_ProbabilityFunction" referredRelation="//@rule.250">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.467/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.467/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Parenthesis_innerExpression" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceParenthesis" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.468/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.468/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_innerExpression" bindsTo="//@rule.468/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetParenthesis" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.468/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.468/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_innerExpression" bindsTo="//@rule.468/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceParenthesis" variableExps="//@rule.468/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetParenthesis" variableExps="//@rule.468/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_innerExpression" variableExps="//@rule.468/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_innerExpression" variableExps="//@rule.468/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Parenthesis" referredRelation="//@rule.220">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.468/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.468/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Expression" referredRelation="//@rule.201">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.468/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.468/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_CompareExpression_left" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompareExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.469/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.469/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_left" bindsTo="//@rule.469/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompareExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.469/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.469/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_left" bindsTo="//@rule.469/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceCompareExpression" variableExps="//@rule.469/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCompareExpression" variableExps="//@rule.469/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_left" variableExps="//@rule.469/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_left" variableExps="//@rule.469/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_CompareExpression" referredRelation="//@rule.222">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.469/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.469/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Term" referredRelation="//@rule.205">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.469/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.469/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_CompareExpression_right" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceCompareExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.470/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.470/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_right" bindsTo="//@rule.470/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetCompareExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.470/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.470/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_right" bindsTo="//@rule.470/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceCompareExpression" variableExps="//@rule.470/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetCompareExpression" variableExps="//@rule.470/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_right" variableExps="//@rule.470/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_right" variableExps="//@rule.470/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_CompareExpression" referredRelation="//@rule.222">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.470/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.470/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Term" referredRelation="//@rule.205">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.470/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.470/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_PowerExpression_base" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourcePowerExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.471/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.471/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_base" bindsTo="//@rule.471/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetPowerExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.471/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.471/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_base" bindsTo="//@rule.471/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourcePowerExpression" variableExps="//@rule.471/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetPowerExpression" variableExps="//@rule.471/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_base" variableExps="//@rule.471/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_base" variableExps="//@rule.471/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_PowerExpression" referredRelation="//@rule.228">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.471/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.471/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Power" referredRelation="//@rule.207">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.471/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.471/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_PowerExpression_exponent" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourcePowerExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.472/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.472/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_exponent" bindsTo="//@rule.472/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetPowerExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.472/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.472/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_exponent" bindsTo="//@rule.472/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourcePowerExpression" variableExps="//@rule.472/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetPowerExpression" variableExps="//@rule.472/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_exponent" variableExps="//@rule.472/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_exponent" variableExps="//@rule.472/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_PowerExpression" referredRelation="//@rule.228">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.472/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.472/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Unary" referredRelation="//@rule.208">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.472/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.472/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_BooleanOperatorExpression_left" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBooleanOperatorExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.473/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.473/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_left" bindsTo="//@rule.473/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBooleanOperatorExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.473/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.473/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_left" bindsTo="//@rule.473/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceBooleanOperatorExpression" variableExps="//@rule.473/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBooleanOperatorExpression" variableExps="//@rule.473/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_left" variableExps="//@rule.473/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_left" variableExps="//@rule.473/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_BooleanOperatorExpression" referredRelation="//@rule.230">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.473/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.473/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_BooleanExpression" referredRelation="//@rule.203">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.473/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.473/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_BooleanOperatorExpression_right" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceBooleanOperatorExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.474/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.474/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_right" bindsTo="//@rule.474/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetBooleanOperatorExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.474/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.474/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_right" bindsTo="//@rule.474/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceBooleanOperatorExpression" variableExps="//@rule.474/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetBooleanOperatorExpression" variableExps="//@rule.474/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_right" variableExps="//@rule.474/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_right" variableExps="//@rule.474/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_BooleanOperatorExpression" referredRelation="//@rule.230">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.474/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.474/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_BooleanExpression" referredRelation="//@rule.203">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.474/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.474/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_NotExpression_inner" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceNotExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.475/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.475/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_inner" bindsTo="//@rule.475/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetNotExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.475/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.475/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_inner" bindsTo="//@rule.475/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceNotExpression" variableExps="//@rule.475/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetNotExpression" variableExps="//@rule.475/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_inner" variableExps="//@rule.475/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_inner" variableExps="//@rule.475/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_NotExpression" referredRelation="//@rule.232">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.475/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.475/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Unary" referredRelation="//@rule.208">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.475/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.475/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_NegativeExpression_inner" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceNegativeExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.476/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.476/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_inner" bindsTo="//@rule.476/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetNegativeExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.476/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.476/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_inner" bindsTo="//@rule.476/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceNegativeExpression" variableExps="//@rule.476/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetNegativeExpression" variableExps="//@rule.476/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_inner" variableExps="//@rule.476/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_inner" variableExps="//@rule.476/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_NegativeExpression" referredRelation="//@rule.234">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.476/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.476/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Unary" referredRelation="//@rule.208">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.476/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.476/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_FunctionLiteral_parameters_FunctionLiteral" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceFunctionLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.477/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.477/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_parameters_FunctionLiteral" bindsTo="//@rule.477/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetFunctionLiteral" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.477/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.477/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_parameters_FunctionLiteral" bindsTo="//@rule.477/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceFunctionLiteral" variableExps="//@rule.477/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetFunctionLiteral" variableExps="//@rule.477/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_parameters_FunctionLiteral" variableExps="//@rule.477/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_parameters_FunctionLiteral" variableExps="//@rule.477/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_FunctionLiteral" referredRelation="//@rule.236">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.477/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.477/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Expression" referredRelation="//@rule.201">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.477/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.477/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_IfElseExpression_ifExpression" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceIfElseExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.478/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.478/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_ifExpression" bindsTo="//@rule.478/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetIfElseExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.478/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.478/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_ifExpression" bindsTo="//@rule.478/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceIfElseExpression" variableExps="//@rule.478/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetIfElseExpression" variableExps="//@rule.478/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_ifExpression" variableExps="//@rule.478/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_ifExpression" variableExps="//@rule.478/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_IfElseExpression" referredRelation="//@rule.238">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.478/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.478/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_BooleanExpression" referredRelation="//@rule.203">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.478/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.478/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_IfElseExpression_elseExpression" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceIfElseExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.479/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.479/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_elseExpression" bindsTo="//@rule.479/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetIfElseExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.479/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.479/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_elseExpression" bindsTo="//@rule.479/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceIfElseExpression" variableExps="//@rule.479/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetIfElseExpression" variableExps="//@rule.479/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_elseExpression" variableExps="//@rule.479/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_elseExpression" variableExps="//@rule.479/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_IfElseExpression" referredRelation="//@rule.238">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.479/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.479/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_BooleanExpression" referredRelation="//@rule.203">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.479/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.479/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_IfElseExpression_conditionExpression" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceIfElseExpression" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.480/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.480/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_conditionExpression" bindsTo="//@rule.480/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetIfElseExpression" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.480/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.480/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_conditionExpression" bindsTo="//@rule.480/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceIfElseExpression" variableExps="//@rule.480/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetIfElseExpression" variableExps="//@rule.480/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_conditionExpression" variableExps="//@rule.480/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_conditionExpression" variableExps="//@rule.480/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_IfElseExpression" referredRelation="//@rule.238">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.480/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.480/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_BooleanExpression" referredRelation="//@rule.203">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.480/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.480/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_RandomVariable_expression" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceRandomVariable" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.481/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.481/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_expression" bindsTo="//@rule.481/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetRandomVariable" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.481/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.481/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_expression" bindsTo="//@rule.481/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceRandomVariable" variableExps="//@rule.481/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetRandomVariable" variableExps="//@rule.481/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_expression" variableExps="//@rule.481/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_expression" variableExps="//@rule.481/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_RandomVariable" referredRelation="//@rule.240">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.481/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.481/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_stoex_Expression" referredRelation="//@rule.201">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.481/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.481/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_UnitCarryingElement_unit" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnitCarryingElement" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.482/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.482/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_unit" bindsTo="//@rule.482/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnitCarryingElement" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.482/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.482/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_unit" bindsTo="//@rule.482/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceUnitCarryingElement" variableExps="//@rule.482/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUnitCarryingElement" variableExps="//@rule.482/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_unit" variableExps="//@rule.482/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_unit" variableExps="//@rule.482/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_UnitCarryingElement" referredRelation="//@rule.244">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.482/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.482/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_Unit" referredRelation="//@rule.263">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.482/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.482/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_UnitRepository_units" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnitRepository" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.483/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.483/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_units" bindsTo="//@rule.483/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnitRepository" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.483/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.483/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_units" bindsTo="//@rule.483/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceUnitRepository" variableExps="//@rule.483/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUnitRepository" variableExps="//@rule.483/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_units" variableExps="//@rule.483/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_units" variableExps="//@rule.483/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_UnitRepository" referredRelation="//@rule.266">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.483/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.483/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_BaseUnit" referredRelation="//@rule.264">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.483/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.483/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_UnitMultiplication_units" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnitMultiplication" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.484/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.484/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_units" bindsTo="//@rule.484/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnitMultiplication" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.484/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.484/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_units" bindsTo="//@rule.484/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceUnitMultiplication" variableExps="//@rule.484/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUnitMultiplication" variableExps="//@rule.484/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_units" variableExps="//@rule.484/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_units" variableExps="//@rule.484/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_UnitMultiplication" referredRelation="//@rule.268">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.484/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.484/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_Unit" referredRelation="//@rule.263">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.484/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.484/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_UnitPower_unit" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnitPower" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.485/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.485/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_unit" bindsTo="//@rule.485/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnitPower" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.485/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.485/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_unit" bindsTo="//@rule.485/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceUnitPower" variableExps="//@rule.485/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUnitPower" variableExps="//@rule.485/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_unit" variableExps="//@rule.485/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_unit" variableExps="//@rule.485/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_UnitPower" referredRelation="//@rule.270">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.485/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.485/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_Unit" referredRelation="//@rule.263">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.485/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.485/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_UnitLiteral_baseUnit" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceUnitLiteral" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.486/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.486/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_baseUnit" bindsTo="//@rule.486/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetUnitLiteral" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.486/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.486/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_baseUnit" bindsTo="//@rule.486/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceUnitLiteral" variableExps="//@rule.486/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetUnitLiteral" variableExps="//@rule.486/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_baseUnit" variableExps="//@rule.486/@when/@predicate.1/@contitionExpression/@argument.0"/>
    <variable name="target_baseUnit" variableExps="//@rule.486/@when/@predicate.1/@contitionExpression/@argument.1"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_UnitLiteral" referredRelation="//@rule.272">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.486/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.486/@variable.1"/>
        </contitionExpression>
      </predicate>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_units_BaseUnit" referredRelation="//@rule.264">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.486/@variable.2"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.486/@variable.3"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
  <rule xsi:type="semanticsQvt.model.qvtrelation:Relation" name="CopyReference_Sample_value" isTopLevel="true">
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="sourceSample" isCheckable="true" typedModel="//@modelParameter.0" rootVariable="//@rule.487/@variable.0">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.487/@variable.0">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="source_value" bindsTo="//@rule.487/@variable.2"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <domain xsi:type="semanticsQvt.model.qvtrelation:RelationDomain" name="targetSample" isEnforcable="true" typedModel="//@modelParameter.1" rootVariable="//@rule.487/@variable.1">
      <pattern>
        <templateExpression xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" bindsTo="//@rule.487/@variable.1">
          <part>
            <value xsi:type="semanticsQvt.model.qvttemplate:ObjectTemplateExp" name="target_value" bindsTo="//@rule.487/@variable.3"/>
          </part>
        </templateExpression>
      </pattern>
    </domain>
    <variable name="sourceSample" variableExps="//@rule.487/@when/@predicate.0/@contitionExpression/@argument.0"/>
    <variable name="targetSample" variableExps="//@rule.487/@when/@predicate.0/@contitionExpression/@argument.1"/>
    <variable name="source_value"/>
    <variable name="target_value"/>
    <when>
      <predicate>
        <contitionExpression xsi:type="semanticsQvt.model.qvtrelation:RelationCallExp" name="Mark_probfunction_Sample" referredRelation="//@rule.192">
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.487/@variable.0"/>
          <argument xsi:type="semantics.model.expressions:VariableExp" referredVariable="//@rule.487/@variable.1"/>
        </contitionExpression>
      </predicate>
    </when>
  </rule>
</semanticsQvt.model.qvtrelation:RelationalTransformation>
